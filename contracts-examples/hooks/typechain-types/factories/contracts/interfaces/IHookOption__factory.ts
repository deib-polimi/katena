/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IHookOption,
  IHookOptionInterface,
} from "../../../contracts/interfaces/IHookOption";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "optionId",
        type: "uint256",
      },
    ],
    name: "getExpiration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "optionId",
        type: "uint256",
      },
    ],
    name: "getStrikePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IHookOption__factory {
  static readonly abi = _abi;
  static createInterface(): IHookOptionInterface {
    return new Interface(_abi) as IHookOptionInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IHookOption {
    return new Contract(address, _abi, runner) as unknown as IHookOption;
  }
}

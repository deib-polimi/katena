/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  UUPSImplementation1,
  UUPSImplementation1Interface,
} from "../../contracts/UUPSImplementation1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "factor",
        type: "uint256",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initial_count",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004357600080fd5b50608051611aac61007b600039600081816102a4015281816103320152818161042c015281816104ba015261056a0152611aac6000f3fe6080604052600436106100a75760003560e01c8063893d20e811610064578063893d20e8146101875780638aa10435146101b25780638da5cb5b146101dd578063a87d942c14610208578063f2fde38b14610233578063fe4b84df1461025c576100a7565b806306661abd146100ac5780631003e2d2146100d75780633659cfe6146101005780634f1ef2861461012957806352d1902d14610145578063715018a614610170575b600080fd5b3480156100b857600080fd5b506100c1610285565b6040516100ce9190610f1a565b60405180910390f35b3480156100e357600080fd5b506100fe60048036038101906100f99190610f75565b61028b565b005b34801561010c57600080fd5b5061012760048036038101906101229190611000565b6102a2565b005b610143600480360381019061013e9190611173565b61042a565b005b34801561015157600080fd5b5061015a610566565b60405161016791906111e8565b60405180910390f35b34801561017c57600080fd5b5061018561061f565b005b34801561019357600080fd5b5061019c610633565b6040516101a99190611212565b60405180910390f35b3480156101be57600080fd5b506101c7610642565b6040516101d49190610f1a565b60405180910390f35b3480156101e957600080fd5b506101f261064b565b6040516101ff9190611212565b60405180910390f35b34801561021457600080fd5b5061021d610675565b60405161022a9190610f1a565b60405180910390f35b34801561023f57600080fd5b5061025a60048036038101906102559190611000565b61067f565b005b34801561026857600080fd5b50610283600480360381019061027e9190610f75565b610702565b005b60c95481565b8060c954610299919061125c565b60c98190555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1603610330576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032790611313565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661036f610848565b73ffffffffffffffffffffffffffffffffffffffff16146103c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bc906113a5565b60405180910390fd5b6103ce8161089f565b61042781600067ffffffffffffffff8111156103ed576103ec611048565b5b6040519080825280601f01601f19166020018201604052801561041f5781602001600182028036833780820191505090505b5060006108aa565b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16036104b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104af90611313565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166104f7610848565b73ffffffffffffffffffffffffffffffffffffffff161461054d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610544906113a5565b60405180910390fd5b6105568261089f565b610562828260016108aa565b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146105f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ed90611437565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b610627610a18565b6106316000610a96565b565b600061063d61064b565b905090565b60006001905090565b6000609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060c954905090565b610687610a18565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ed906114c9565b60405180910390fd5b6106ff81610a96565b50565b60008060019054906101000a900460ff161590508080156107335750600160008054906101000a900460ff1660ff16105b80610760575061074230610b5c565b15801561075f5750600160008054906101000a900460ff1660ff16145b5b61079f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107969061155b565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156107dc576001600060016101000a81548160ff0219169083151502179055505b8160c9819055506107eb610b7f565b80156108445760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498600160405161083b91906115cd565b60405180910390a15b5050565b60006108767f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610bd8565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6108a7610a18565b50565b6108d67f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914360001b610be2565b60000160009054906101000a900460ff16156108fa576108f583610bec565b610a13565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561096257506040513d601f19601f8201168201806040525081019061095f9190611614565b60015b6109a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610998906116b3565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b8114610a06576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fd90611745565b60405180910390fd5b50610a12838383610ca5565b5b505050565b610a20610cd1565b73ffffffffffffffffffffffffffffffffffffffff16610a3e61064b565b73ffffffffffffffffffffffffffffffffffffffff1614610a94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8b906117b1565b60405180910390fd5b565b6000609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081609760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16610bce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc590611843565b60405180910390fd5b610bd6610cd9565b565b6000819050919050565b6000819050919050565b610bf581610b5c565b610c34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2b906118d5565b60405180910390fd5b80610c617f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610bd8565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610cae83610d3a565b600082511180610cbb5750805b15610ccc57610cca8383610d89565b505b505050565b600033905090565b600060019054906101000a900460ff16610d28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1f90611843565b60405180910390fd5b610d38610d33610cd1565b610a96565b565b610d4381610bec565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b6060610dae8383604051806060016040528060278152602001611a5060279139610db6565b905092915050565b60606000808573ffffffffffffffffffffffffffffffffffffffff1685604051610de09190611966565b600060405180830381855af49150503d8060008114610e1b576040519150601f19603f3d011682016040523d82523d6000602084013e610e20565b606091505b5091509150610e3186838387610e3c565b925050509392505050565b60608315610e9e576000835103610e9657610e5685610b5c565b610e95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8c906119c9565b60405180910390fd5b5b829050610ea9565b610ea88383610eb1565b5b949350505050565b600082511115610ec45781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef89190611a2d565b60405180910390fd5b6000819050919050565b610f1481610f01565b82525050565b6000602082019050610f2f6000830184610f0b565b92915050565b6000604051905090565b600080fd5b600080fd5b610f5281610f01565b8114610f5d57600080fd5b50565b600081359050610f6f81610f49565b92915050565b600060208284031215610f8b57610f8a610f3f565b5b6000610f9984828501610f60565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fcd82610fa2565b9050919050565b610fdd81610fc2565b8114610fe857600080fd5b50565b600081359050610ffa81610fd4565b92915050565b60006020828403121561101657611015610f3f565b5b600061102484828501610feb565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61108082611037565b810181811067ffffffffffffffff8211171561109f5761109e611048565b5b80604052505050565b60006110b2610f35565b90506110be8282611077565b919050565b600067ffffffffffffffff8211156110de576110dd611048565b5b6110e782611037565b9050602081019050919050565b82818337600083830152505050565b6000611116611111846110c3565b6110a8565b90508281526020810184848401111561113257611131611032565b5b61113d8482856110f4565b509392505050565b600082601f83011261115a5761115961102d565b5b813561116a848260208601611103565b91505092915050565b6000806040838503121561118a57611189610f3f565b5b600061119885828601610feb565b925050602083013567ffffffffffffffff8111156111b9576111b8610f44565b5b6111c585828601611145565b9150509250929050565b6000819050919050565b6111e2816111cf565b82525050565b60006020820190506111fd60008301846111d9565b92915050565b61120c81610fc2565b82525050565b60006020820190506112276000830184611203565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061126782610f01565b915061127283610f01565b925082820190508082111561128a5761128961122d565b5b92915050565b600082825260208201905092915050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f64656c656761746563616c6c0000000000000000000000000000000000000000602082015250565b60006112fd602c83611290565b9150611308826112a1565b604082019050919050565b6000602082019050818103600083015261132c816112f0565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f6163746976652070726f78790000000000000000000000000000000000000000602082015250565b600061138f602c83611290565b915061139a82611333565b604082019050919050565b600060208201905081810360008301526113be81611382565b9050919050565b7f555550535570677261646561626c653a206d757374206e6f742062652063616c60008201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000602082015250565b6000611421603883611290565b915061142c826113c5565b604082019050919050565b6000602082019050818103600083015261145081611414565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006114b3602683611290565b91506114be82611457565b604082019050919050565b600060208201905081810360008301526114e2816114a6565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000611545602e83611290565b9150611550826114e9565b604082019050919050565b6000602082019050818103600083015261157481611538565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b60006115b76115b26115ad8461157b565b611592565b611585565b9050919050565b6115c78161159c565b82525050565b60006020820190506115e260008301846115be565b92915050565b6115f1816111cf565b81146115fc57600080fd5b50565b60008151905061160e816115e8565b92915050565b60006020828403121561162a57611629610f3f565b5b6000611638848285016115ff565b91505092915050565b7f45524331393637557067726164653a206e657720696d706c656d656e7461746960008201527f6f6e206973206e6f742055555053000000000000000000000000000000000000602082015250565b600061169d602e83611290565b91506116a882611641565b604082019050919050565b600060208201905081810360008301526116cc81611690565b9050919050565b7f45524331393637557067726164653a20756e737570706f727465642070726f7860008201527f6961626c65555549440000000000000000000000000000000000000000000000602082015250565b600061172f602983611290565b915061173a826116d3565b604082019050919050565b6000602082019050818103600083015261175e81611722565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061179b602083611290565b91506117a682611765565b602082019050919050565b600060208201905081810360008301526117ca8161178e565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b600061182d602b83611290565b9150611838826117d1565b604082019050919050565b6000602082019050818103600083015261185c81611820565b9050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b60006118bf602d83611290565b91506118ca82611863565b604082019050919050565b600060208201905081810360008301526118ee816118b2565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561192957808201518184015260208101905061190e565b60008484015250505050565b6000611940826118f5565b61194a8185611900565b935061195a81856020860161190b565b80840191505092915050565b60006119728284611935565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006119b3601d83611290565b91506119be8261197d565b602082019050919050565b600060208201905081810360008301526119e2816119a6565b9050919050565b600081519050919050565b60006119ff826119e9565b611a098185611290565b9350611a1981856020860161190b565b611a2281611037565b840191505092915050565b60006020820190508181036000830152611a4781846119f4565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212208bc50bd006c63fcb12271bad74e2a1eb328780ae980c7fbe7643ccf81643228a64736f6c63430008120033";

type UUPSImplementation1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UUPSImplementation1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UUPSImplementation1__factory extends ContractFactory {
  constructor(...args: UUPSImplementation1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      UUPSImplementation1 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): UUPSImplementation1__factory {
    return super.connect(runner) as UUPSImplementation1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UUPSImplementation1Interface {
    return new Interface(_abi) as UUPSImplementation1Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UUPSImplementation1 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as UUPSImplementation1;
  }
}

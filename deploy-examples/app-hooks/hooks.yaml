tosca_definitions_version: tosca_simple_ykoaml_1_3

imports:
- nodes/contract.yaml
- nodes/network.yaml
- nodes/wallet.yaml

topology_template:
  node_templates:
    ganache:
      type: katena.nodes.network.ganache
    userWallet: 
      type: katena.nodes.wallet
      requirements:
      - host: ganache
      properties:
        privateKey: { get_input: UserKeyGanache }
        owner: { get_input: UserWallet}

    protocol:
      type: katena.nodes.contract
      requirements:
      - host: ganache
      - wallet: userWallet
      properties:
        abi: "HookProtocol"
      parameters: 
      # all this addresses are hosted in mainnet
      - "0x8894adFF1B59B04172160Ace8d3017290F53292F" # allowlister
      - "0x4639c19C188f219D25C27235cB5C5eE04158Ca45" # vaultUpgrader
      - "0x0e6558f79303fA07C37528b7dd85826db0AF34B7" # callsUpgrader
      - "0x3cFc64E7C16f79398a477b06EE9b9d28f9588326" # marketConf
      - "0x99d173aB3dF83eb8ce39056Fe8613514127C9274" # collectionConf
      - "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2" # weth
    multiVault:
      type: katena.nodes.contract.implementation
      requirements:
      - host: ganache
      - wallet: userWallet
      properties:
        abi: "HookERC721MultiVaultImplV1"
    soloVault:
      type: katena.nodes.contract.implementation
      requirements:
      - host: ganache
      - wallet: userWallet
      properties:
        abi: "HookERC721VaultImplV1"
    multiVaultBeacon:
      type: katena.nodes.beacon.upgradable
      requirements:
      - host: ganache
      - wallet: userWallet
      - implementation: multiVault
      - constructorCalls: protocol
      properties:
        abi: "HookUpgradeableBeacon"
        parameters: 
        - { get_attribute: [SELF, implementation, contractAddress] }
        - { get_attribute: [SELF, constructorCalls, contractAddress] } # protocol  address
        - "0x945438d5e976f17e0d00cb2997cf8951c55e12977d86234d6738d1865abe006e" # VAULT_UPGRADER perisssion hexa
    soloVaultBeacon:
      type: katena.nodes.beacon.upgradable
      requirements:
      - host: ganache
      - wallet: userWallet
      - implementation: soloVault
      - constructorCalls: protocol
      properties:
        abi: "HookUpgradeableBeacon"
        parameters: 
        - { get_attribute: [SELF, implementation, contractAddress] }
        - { get_attribute: [SELF, constructorCalls, contractAddress] } # protocol  address
        - "0x945438d5e976f17e0d00cb2997cf8951c55e12977d86234d6738d1865abe006e" # VAULT_UPGRADER perisssion hexa
    vaultFactory:
      type: katena.nodes.beacon.proxy
      requirements:
      - host: ganache
      - wallet: userWallet
      - upgradableBeacon: soloVaultBeacon
      - upgradableBeacon: multiVaultBeacon
      - constructorCalls: protocol
      properties:
        abi: "BeaconProxy"
        - { get_attribute: [SELF, constructorCalls, contractAddress] } # protocol  address
        - { get_attribute: [SELF, upgradableBeacon, soloVaultBeacon, contractAddress] }
        - { get_attribute: [SELF, upgradableBeacon, multiVaultBeacon, contractAddress] }
    tokenUri:
      type: katena.nodes.library
        requirements:
        - host: ganache
        - wallet: userWallet
        properties:
          abi: "TokenURI"
    callV1:
       type: katena.nodes.contract.implementation
      requirements:
      - host: ganache
      - wallet: userWallet
      properties:
        abi: "HookCoveredCallImplV1"
    callBeacon:
      type: katena.nodes.beacon.upgradable
      requirements:
      - host: ganache
      - wallet: userWallet
      - implementation: soloVault
      - constructorCalls: protocol
      properties:
        abi: "HookUpgradeableBeacon"
        parameters: 
        - "0x3648080307faC2EE51A01463e47B9ca076DC14A1"
        - "0xE11CCED3E6555A1BcbA2E19b9Cf161f040186069" # protocol  address
        - "0x657f307dfada290937bc821a25e2da10feb07809ba9560b816723e8b47fe379a" # CALL_UPGRADER permission
    callFactory:
      type: katena.nodes.beacon.proxy
      requirements:
      - host: ganache
      - wallet: userWallet
      - upgradableBeacon: callBeacon
      - constructorCalls: protocol
      properties:
        abi: "HookCoveredCallFactory"
        - { get_attribute: [SELF, constructorCalls, contractAddress] } # protocol  address
        - { get_attribute: [SELF, upgradableBeacon, multiVaultBeacon, contractAddress] }
        - "0x3cFc64E7C16f79398a477b06EE9b9d28f9588326" # pre aproved market contract address

    publicResolver:
      type: katena.nodes.contract
      requirements:
      - host: ganache
      - wallet: userWallet
      - constructorCalls: ensRegistry
      properties:
        abi: "PublicResolver"
        parameters:
        - "0x0000000000000000000000000000000000000000"
    registrar:
      type: katena.nodes.contract
      requirements:
      - host: ganache
      - wallet: userWallet
      - constructorCalls: ensRegistry
      properties:
        abi: "FIFSRegistrar"
        parameters:
        - "0x04f740db81dc36c853ab4205bddd785f46e79ccedca351fc6dfcbd8cc9a33dd6"
    reverseRegistrar:
      type: katena.nodes.contract
      requirements:
      - host: ganache
      - wallet: userWallet
      - constructorCalls: ensRegistry
      - constructorCalls: publicResolver
      properties:
        abi: ReverseRegistrar

  inputs:
    UserKeyGanache:
      type: string
      required: true
    UserWallet:
      type: string
      required: true
{
  "contractName": "SoloMargin",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "spreadPremium",
          "type": "tuple"
        }
      ],
      "name": "ownerSetSpreadPremium",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "getIsGlobalOperator",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getMarketTokenAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        },
        {
          "name": "interestSetter",
          "type": "address"
        }
      ],
      "name": "ownerSetInterestSetter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "name": "owner",
              "type": "address"
            },
            {
              "name": "number",
              "type": "uint256"
            }
          ],
          "name": "account",
          "type": "tuple"
        }
      ],
      "name": "getAccountValues",
      "outputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getMarketPriceOracle",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getMarketInterestSetter",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getMarketSpreadPremium",
      "outputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getNumMarkets",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "ownerWithdrawUnsupportedTokens",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "minBorrowedValue",
          "type": "tuple"
        }
      ],
      "name": "ownerSetMinBorrowedValue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "spread",
          "type": "tuple"
        }
      ],
      "name": "ownerSetLiquidationSpread",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "earningsRate",
          "type": "tuple"
        }
      ],
      "name": "ownerSetEarningsRate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "getIsLocalOperator",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "name": "owner",
              "type": "address"
            },
            {
              "name": "number",
              "type": "uint256"
            }
          ],
          "name": "account",
          "type": "tuple"
        },
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getAccountPar",
      "outputs": [
        {
          "components": [
            {
              "name": "sign",
              "type": "bool"
            },
            {
              "name": "value",
              "type": "uint128"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "marginPremium",
          "type": "tuple"
        }
      ],
      "name": "ownerSetMarginPremium",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMarginRatio",
      "outputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getMarketCurrentIndex",
      "outputs": [
        {
          "components": [
            {
              "name": "borrow",
              "type": "uint96"
            },
            {
              "name": "supply",
              "type": "uint96"
            },
            {
              "name": "lastUpdate",
              "type": "uint32"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getMarketIsClosing",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRiskParams",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "marginRatio",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "liquidationSpread",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "earningsRate",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "minBorrowedValue",
              "type": "tuple"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "name": "owner",
              "type": "address"
            },
            {
              "name": "number",
              "type": "uint256"
            }
          ],
          "name": "account",
          "type": "tuple"
        }
      ],
      "name": "getAccountBalances",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        },
        {
          "components": [
            {
              "name": "sign",
              "type": "bool"
            },
            {
              "name": "value",
              "type": "uint128"
            }
          ],
          "name": "",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "name": "sign",
              "type": "bool"
            },
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMinBorrowedValue",
      "outputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "operator",
              "type": "address"
            },
            {
              "name": "trusted",
              "type": "bool"
            }
          ],
          "name": "args",
          "type": "tuple[]"
        }
      ],
      "name": "setOperators",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getMarketPrice",
      "outputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        },
        {
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "ownerWithdrawExcessTokens",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "priceOracle",
          "type": "address"
        },
        {
          "name": "interestSetter",
          "type": "address"
        },
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "marginPremium",
          "type": "tuple"
        },
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "spreadPremium",
          "type": "tuple"
        }
      ],
      "name": "ownerAddMarket",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "owner",
              "type": "address"
            },
            {
              "name": "number",
              "type": "uint256"
            }
          ],
          "name": "accounts",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "name": "actionType",
              "type": "uint8"
            },
            {
              "name": "accountId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "name": "sign",
                  "type": "bool"
                },
                {
                  "name": "denomination",
                  "type": "uint8"
                },
                {
                  "name": "ref",
                  "type": "uint8"
                },
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "amount",
              "type": "tuple"
            },
            {
              "name": "primaryMarketId",
              "type": "uint256"
            },
            {
              "name": "secondaryMarketId",
              "type": "uint256"
            },
            {
              "name": "otherAddress",
              "type": "address"
            },
            {
              "name": "otherAccountId",
              "type": "uint256"
            },
            {
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "actions",
          "type": "tuple[]"
        }
      ],
      "name": "operate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getMarketWithInfo",
      "outputs": [
        {
          "components": [
            {
              "name": "token",
              "type": "address"
            },
            {
              "components": [
                {
                  "name": "borrow",
                  "type": "uint128"
                },
                {
                  "name": "supply",
                  "type": "uint128"
                }
              ],
              "name": "totalPar",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "borrow",
                  "type": "uint96"
                },
                {
                  "name": "supply",
                  "type": "uint96"
                },
                {
                  "name": "lastUpdate",
                  "type": "uint32"
                }
              ],
              "name": "index",
              "type": "tuple"
            },
            {
              "name": "priceOracle",
              "type": "address"
            },
            {
              "name": "interestSetter",
              "type": "address"
            },
            {
              "components": [
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "marginPremium",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "spreadPremium",
              "type": "tuple"
            },
            {
              "name": "isClosing",
              "type": "bool"
            }
          ],
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "name": "borrow",
              "type": "uint96"
            },
            {
              "name": "supply",
              "type": "uint96"
            },
            {
              "name": "lastUpdate",
              "type": "uint32"
            }
          ],
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "ratio",
          "type": "tuple"
        }
      ],
      "name": "ownerSetMarginRatio",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLiquidationSpread",
      "outputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "name": "owner",
              "type": "address"
            },
            {
              "name": "number",
              "type": "uint256"
            }
          ],
          "name": "account",
          "type": "tuple"
        },
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getAccountWei",
      "outputs": [
        {
          "components": [
            {
              "name": "sign",
              "type": "bool"
            },
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getMarketTotalPar",
      "outputs": [
        {
          "components": [
            {
              "name": "borrow",
              "type": "uint128"
            },
            {
              "name": "supply",
              "type": "uint128"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "heldMarketId",
          "type": "uint256"
        },
        {
          "name": "owedMarketId",
          "type": "uint256"
        }
      ],
      "name": "getLiquidationSpreadForPair",
      "outputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getNumExcessTokens",
      "outputs": [
        {
          "components": [
            {
              "name": "sign",
              "type": "bool"
            },
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getMarketCachedIndex",
      "outputs": [
        {
          "components": [
            {
              "name": "borrow",
              "type": "uint96"
            },
            {
              "name": "supply",
              "type": "uint96"
            },
            {
              "name": "lastUpdate",
              "type": "uint32"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "name": "owner",
              "type": "address"
            },
            {
              "name": "number",
              "type": "uint256"
            }
          ],
          "name": "account",
          "type": "tuple"
        }
      ],
      "name": "getAccountStatus",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEarningsRate",
      "outputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        },
        {
          "name": "priceOracle",
          "type": "address"
        }
      ],
      "name": "ownerSetPriceOracle",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRiskLimits",
      "outputs": [
        {
          "components": [
            {
              "name": "marginRatioMax",
              "type": "uint64"
            },
            {
              "name": "liquidationSpreadMax",
              "type": "uint64"
            },
            {
              "name": "earningsRateMax",
              "type": "uint64"
            },
            {
              "name": "marginPremiumMax",
              "type": "uint64"
            },
            {
              "name": "spreadPremiumMax",
              "type": "uint64"
            },
            {
              "name": "minBorrowedValueMax",
              "type": "uint128"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getMarket",
      "outputs": [
        {
          "components": [
            {
              "name": "token",
              "type": "address"
            },
            {
              "components": [
                {
                  "name": "borrow",
                  "type": "uint128"
                },
                {
                  "name": "supply",
                  "type": "uint128"
                }
              ],
              "name": "totalPar",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "borrow",
                  "type": "uint96"
                },
                {
                  "name": "supply",
                  "type": "uint96"
                },
                {
                  "name": "lastUpdate",
                  "type": "uint32"
                }
              ],
              "name": "index",
              "type": "tuple"
            },
            {
              "name": "priceOracle",
              "type": "address"
            },
            {
              "name": "interestSetter",
              "type": "address"
            },
            {
              "components": [
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "marginPremium",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "spreadPremium",
              "type": "tuple"
            },
            {
              "name": "isClosing",
              "type": "bool"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        },
        {
          "name": "isClosing",
          "type": "bool"
        }
      ],
      "name": "ownerSetIsClosing",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "operator",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ownerSetGlobalOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "name": "owner",
              "type": "address"
            },
            {
              "name": "number",
              "type": "uint256"
            }
          ],
          "name": "account",
          "type": "tuple"
        }
      ],
      "name": "getAdjustedAccountValues",
      "outputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getMarketMarginPremium",
      "outputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getMarketInterestRate",
      "outputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "marginRatio",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "liquidationSpread",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "earningsRate",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "minBorrowedValue",
              "type": "tuple"
            }
          ],
          "name": "riskParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "name": "marginRatioMax",
              "type": "uint64"
            },
            {
              "name": "liquidationSpreadMax",
              "type": "uint64"
            },
            {
              "name": "earningsRateMax",
              "type": "uint64"
            },
            {
              "name": "marginPremiumMax",
              "type": "uint64"
            },
            {
              "name": "spreadPremiumMax",
              "type": "uint64"
            },
            {
              "name": "minBorrowedValueMax",
              "type": "uint128"
            }
          ],
          "name": "riskLimits",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "trusted",
          "type": "bool"
        }
      ],
      "name": "LogOperatorSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"spreadPremium\",\"type\":\"tuple\"}],\"name\":\"ownerSetSpreadPremium\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getIsGlobalOperator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getMarketTokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"},{\"name\":\"interestSetter\",\"type\":\"address\"}],\"name\":\"ownerSetInterestSetter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"account\",\"type\":\"tuple\"}],\"name\":\"getAccountValues\",\"outputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getMarketPriceOracle\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getMarketInterestSetter\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getMarketSpreadPremium\",\"outputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNumMarkets\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"ownerWithdrawUnsupportedTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"minBorrowedValue\",\"type\":\"tuple\"}],\"name\":\"ownerSetMinBorrowedValue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"spread\",\"type\":\"tuple\"}],\"name\":\"ownerSetLiquidationSpread\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"earningsRate\",\"type\":\"tuple\"}],\"name\":\"ownerSetEarningsRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getIsLocalOperator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"account\",\"type\":\"tuple\"},{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getAccountPar\",\"outputs\":[{\"components\":[{\"name\":\"sign\",\"type\":\"bool\"},{\"name\":\"value\",\"type\":\"uint128\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"marginPremium\",\"type\":\"tuple\"}],\"name\":\"ownerSetMarginPremium\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMarginRatio\",\"outputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getMarketCurrentIndex\",\"outputs\":[{\"components\":[{\"name\":\"borrow\",\"type\":\"uint96\"},{\"name\":\"supply\",\"type\":\"uint96\"},{\"name\":\"lastUpdate\",\"type\":\"uint32\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getMarketIsClosing\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRiskParams\",\"outputs\":[{\"components\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"marginRatio\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"liquidationSpread\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"earningsRate\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"minBorrowedValue\",\"type\":\"tuple\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"account\",\"type\":\"tuple\"}],\"name\":\"getAccountBalances\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"},{\"components\":[{\"name\":\"sign\",\"type\":\"bool\"},{\"name\":\"value\",\"type\":\"uint128\"}],\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"name\":\"sign\",\"type\":\"bool\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMinBorrowedValue\",\"outputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"name\":\"operator\",\"type\":\"address\"},{\"name\":\"trusted\",\"type\":\"bool\"}],\"name\":\"args\",\"type\":\"tuple[]\"}],\"name\":\"setOperators\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getMarketPrice\",\"outputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"},{\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"ownerWithdrawExcessTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"priceOracle\",\"type\":\"address\"},{\"name\":\"interestSetter\",\"type\":\"address\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"marginPremium\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"spreadPremium\",\"type\":\"tuple\"}],\"name\":\"ownerAddMarket\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"accounts\",\"type\":\"tuple[]\"},{\"components\":[{\"name\":\"actionType\",\"type\":\"uint8\"},{\"name\":\"accountId\",\"type\":\"uint256\"},{\"components\":[{\"name\":\"sign\",\"type\":\"bool\"},{\"name\":\"denomination\",\"type\":\"uint8\"},{\"name\":\"ref\",\"type\":\"uint8\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"amount\",\"type\":\"tuple\"},{\"name\":\"primaryMarketId\",\"type\":\"uint256\"},{\"name\":\"secondaryMarketId\",\"type\":\"uint256\"},{\"name\":\"otherAddress\",\"type\":\"address\"},{\"name\":\"otherAccountId\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"actions\",\"type\":\"tuple[]\"}],\"name\":\"operate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getMarketWithInfo\",\"outputs\":[{\"components\":[{\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"name\":\"borrow\",\"type\":\"uint128\"},{\"name\":\"supply\",\"type\":\"uint128\"}],\"name\":\"totalPar\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"borrow\",\"type\":\"uint96\"},{\"name\":\"supply\",\"type\":\"uint96\"},{\"name\":\"lastUpdate\",\"type\":\"uint32\"}],\"name\":\"index\",\"type\":\"tuple\"},{\"name\":\"priceOracle\",\"type\":\"address\"},{\"name\":\"interestSetter\",\"type\":\"address\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"marginPremium\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"spreadPremium\",\"type\":\"tuple\"},{\"name\":\"isClosing\",\"type\":\"bool\"}],\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"borrow\",\"type\":\"uint96\"},{\"name\":\"supply\",\"type\":\"uint96\"},{\"name\":\"lastUpdate\",\"type\":\"uint32\"}],\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ratio\",\"type\":\"tuple\"}],\"name\":\"ownerSetMarginRatio\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLiquidationSpread\",\"outputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"account\",\"type\":\"tuple\"},{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getAccountWei\",\"outputs\":[{\"components\":[{\"name\":\"sign\",\"type\":\"bool\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getMarketTotalPar\",\"outputs\":[{\"components\":[{\"name\":\"borrow\",\"type\":\"uint128\"},{\"name\":\"supply\",\"type\":\"uint128\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"heldMarketId\",\"type\":\"uint256\"},{\"name\":\"owedMarketId\",\"type\":\"uint256\"}],\"name\":\"getLiquidationSpreadForPair\",\"outputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getNumExcessTokens\",\"outputs\":[{\"components\":[{\"name\":\"sign\",\"type\":\"bool\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getMarketCachedIndex\",\"outputs\":[{\"components\":[{\"name\":\"borrow\",\"type\":\"uint96\"},{\"name\":\"supply\",\"type\":\"uint96\"},{\"name\":\"lastUpdate\",\"type\":\"uint32\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"account\",\"type\":\"tuple\"}],\"name\":\"getAccountStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEarningsRate\",\"outputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"},{\"name\":\"priceOracle\",\"type\":\"address\"}],\"name\":\"ownerSetPriceOracle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRiskLimits\",\"outputs\":[{\"components\":[{\"name\":\"marginRatioMax\",\"type\":\"uint64\"},{\"name\":\"liquidationSpreadMax\",\"type\":\"uint64\"},{\"name\":\"earningsRateMax\",\"type\":\"uint64\"},{\"name\":\"marginPremiumMax\",\"type\":\"uint64\"},{\"name\":\"spreadPremiumMax\",\"type\":\"uint64\"},{\"name\":\"minBorrowedValueMax\",\"type\":\"uint128\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getMarket\",\"outputs\":[{\"components\":[{\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"name\":\"borrow\",\"type\":\"uint128\"},{\"name\":\"supply\",\"type\":\"uint128\"}],\"name\":\"totalPar\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"borrow\",\"type\":\"uint96\"},{\"name\":\"supply\",\"type\":\"uint96\"},{\"name\":\"lastUpdate\",\"type\":\"uint32\"}],\"name\":\"index\",\"type\":\"tuple\"},{\"name\":\"priceOracle\",\"type\":\"address\"},{\"name\":\"interestSetter\",\"type\":\"address\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"marginPremium\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"spreadPremium\",\"type\":\"tuple\"},{\"name\":\"isClosing\",\"type\":\"bool\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"},{\"name\":\"isClosing\",\"type\":\"bool\"}],\"name\":\"ownerSetIsClosing\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"operator\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ownerSetGlobalOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"account\",\"type\":\"tuple\"}],\"name\":\"getAdjustedAccountValues\",\"outputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getMarketMarginPremium\",\"outputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getMarketInterestRate\",\"outputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"marginRatio\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"liquidationSpread\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"earningsRate\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"minBorrowedValue\",\"type\":\"tuple\"}],\"name\":\"riskParams\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"marginRatioMax\",\"type\":\"uint64\"},{\"name\":\"liquidationSpreadMax\",\"type\":\"uint64\"},{\"name\":\"earningsRateMax\",\"type\":\"uint64\"},{\"name\":\"marginPremiumMax\",\"type\":\"uint64\"},{\"name\":\"spreadPremiumMax\",\"type\":\"uint64\"},{\"name\":\"minBorrowedValueMax\",\"type\":\"uint128\"}],\"name\":\"riskLimits\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"trusted\",\"type\":\"bool\"}],\"name\":\"LogOperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"dYdX * Main contract that inherits from other contracts\",\"methods\":{\"getAccountBalances((address,uint256))\":{\"params\":{\"account\":\"The account to query\"},\"return\":\"The following values:                  - The ERC20 token address for each market                  - The account's principal value for each market                  - The account's (supplied or borrowed) number of tokens for each market\"},\"getAccountPar((address,uint256),uint256)\":{\"params\":{\"account\":\"The account to query\",\"marketId\":\"The market to query\"},\"return\":\"The principal value\"},\"getAccountStatus((address,uint256))\":{\"params\":{\"account\":\"The account to query\"},\"return\":\"The account's status\"},\"getAccountValues((address,uint256))\":{\"params\":{\"account\":\"The account to query\"},\"return\":\"The following values:                  - The supplied value of the account                  - The borrowed value of the account\"},\"getAccountWei((address,uint256),uint256)\":{\"params\":{\"account\":\"The account to query\",\"marketId\":\"The market to query\"},\"return\":\"The token amount\"},\"getAdjustedAccountValues((address,uint256))\":{\"params\":{\"account\":\"The account to query\"},\"return\":\"The following values:                  - The supplied value of the account (adjusted for marginPremium)                  - The borrowed value of the account (adjusted for marginPremium)\"},\"getEarningsRate()\":{\"return\":\"The global earnings rate\"},\"getIsGlobalOperator(address)\":{\"params\":{\"operator\":\"The address to query\"},\"return\":\"True if operator is a global operator\"},\"getIsLocalOperator(address,address)\":{\"params\":{\"operator\":\"The possible operator\",\"owner\":\"The owner of the accounts\"},\"return\":\"True if operator is approved for owner's accounts\"},\"getLiquidationSpread()\":{\"return\":\"The global liquidation spread\"},\"getLiquidationSpreadForPair(uint256,uint256)\":{\"params\":{\"heldMarketId\":\"The market for which the account has collateral\",\"owedMarketId\":\"The market for which the account has borrowed tokens\"},\"return\":\"The adjusted liquidation spread\"},\"getMarginRatio()\":{\"return\":\"The global margin-ratio\"},\"getMarket(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"A Storage.Market struct with the current state of the market\"},\"getMarketCachedIndex(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"The most recent index\"},\"getMarketCurrentIndex(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"The estimated current index\"},\"getMarketInterestRate(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"The current interest rate\"},\"getMarketInterestSetter(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"The interest-setter address\"},\"getMarketIsClosing(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"True if the market is closing\"},\"getMarketMarginPremium(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"The market's margin premium\"},\"getMarketPrice(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"The price of each atomic unit of the token\"},\"getMarketPriceOracle(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"The price oracle address\"},\"getMarketSpreadPremium(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"The market's spread premium\"},\"getMarketTokenAddress(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"The token address\"},\"getMarketTotalPar(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"The total principal amounts\"},\"getMarketWithInfo(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"A tuple containing the values:                   - A Storage.Market struct with the current state of the market                   - The current estimated interest index                   - The current token price                   - The current market interest rate\"},\"getMinBorrowedValue()\":{\"return\":\"The global minimum borrow value\"},\"getNumExcessTokens(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"The number of excess tokens\"},\"getNumMarkets()\":{\"return\":\"The number of markets\"},\"getRiskLimits()\":{\"return\":\"All global risk parameter limnits\"},\"getRiskParams()\":{\"return\":\"All global risk parameters\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"operate((address,uint256)[],(uint8,uint256,(bool,uint8,uint8,uint256),uint256,uint256,address,uint256,bytes)[])\":{\"params\":{\"accounts\":\"A list of all accounts that will be used in this operation. Cannot contain                  duplicates. In each action, the relevant account will be referred-to by its                  index in the list.\",\"actions\":\"An ordered list of all actions that will be taken in this operation. The                  actions will be processed in order.\"}},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"setOperators((address,bool)[])\":{\"params\":{\"args\":\"A list of OperatorArgs which have an address and a boolean. The boolean value              denotes whether to approve (true) or revoke approval (false) for that address.\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"SoloMargin\"},\"userdoc\":{\"methods\":{\"getAccountBalances((address,uint256))\":{\"notice\":\"Get an account's summary for each market.\"},\"getAccountPar((address,uint256),uint256)\":{\"notice\":\"Get the principal value for a particular account and market.\"},\"getAccountStatus((address,uint256))\":{\"notice\":\"Get the status of an account (Normal, Liquidating, or Vaporizing).\"},\"getAccountValues((address,uint256))\":{\"notice\":\"Get the total supplied and total borrowed value of an account.\"},\"getAccountWei((address,uint256),uint256)\":{\"notice\":\"Get the token balance for a particular account and market.\"},\"getAdjustedAccountValues((address,uint256))\":{\"notice\":\"Get the total supplied and total borrowed values of an account adjusted by the marginPremium of each market. Supplied values are divided by (1 + marginPremium) for each market and borrowed values are multiplied by (1 + marginPremium) for each market. Comparing these adjusted values gives the margin-ratio of the account which will be compared to the global margin-ratio when determining if the account can be liquidated.\"},\"getEarningsRate()\":{\"notice\":\"Get the global earnings-rate variable that determines what percentage of the interest paid by borrowers gets passed-on to suppliers.\"},\"getIsGlobalOperator(address)\":{\"notice\":\"Return true if a particular address is approved as a global operator. Such an address can act on any account as if it were the operator's own.\"},\"getIsLocalOperator(address,address)\":{\"notice\":\"Return true if a particular address is approved as an operator for an owner's accounts. Approved operators can act on the accounts of the owner as if it were the operator's own.\"},\"getLiquidationSpread()\":{\"notice\":\"Get the global liquidation spread. This is the spread between oracle prices that incentivizes the liquidation of risky positions.\"},\"getLiquidationSpreadForPair(uint256,uint256)\":{\"notice\":\"Get the adjusted liquidation spread for some market pair. This is equal to the global liquidation spread multiplied by (1 + spreadPremium) for each of the two markets.\"},\"getMarginRatio()\":{\"notice\":\"Get the global minimum margin-ratio that every position must maintain to prevent being liquidated.\"},\"getMarket(uint256)\":{\"notice\":\"Get basic information about a particular market.\"},\"getMarketCachedIndex(uint256)\":{\"notice\":\"Get the most recently cached interest index for a market.\"},\"getMarketCurrentIndex(uint256)\":{\"notice\":\"Get the interest index for a market if it were to be updated right now.\"},\"getMarketInterestRate(uint256)\":{\"notice\":\"Get the current borrower interest rate for a market.\"},\"getMarketInterestSetter(uint256)\":{\"notice\":\"Get the interest-setter address for a market.\"},\"getMarketIsClosing(uint256)\":{\"notice\":\"Return true if a particular market is in closing mode. Additional borrows cannot be taken from a market that is closing.\"},\"getMarketMarginPremium(uint256)\":{\"notice\":\"Get the margin premium for a market. A margin premium makes it so that any positions that include the market require a higher collateralization to avoid being liquidated.\"},\"getMarketPrice(uint256)\":{\"notice\":\"Get the price of the token for a market.\"},\"getMarketPriceOracle(uint256)\":{\"notice\":\"Get the price oracle address for a market.\"},\"getMarketSpreadPremium(uint256)\":{\"notice\":\"Get the spread premium for a market. A spread premium makes it so that any liquidations that include the market have a higher spread than the global default.\"},\"getMarketTokenAddress(uint256)\":{\"notice\":\"Get the ERC20 token address for a market.\"},\"getMarketTotalPar(uint256)\":{\"notice\":\"Get the total principal amounts (borrowed and supplied) for a market.\"},\"getMarketWithInfo(uint256)\":{\"notice\":\"Get comprehensive information about a particular market.\"},\"getMinBorrowedValue()\":{\"notice\":\"Get the global minimum-borrow value which is the minimum value of any new borrow on Solo.\"},\"getNumExcessTokens(uint256)\":{\"notice\":\"Get the number of excess tokens for a market. The number of excess tokens is calculated by taking the current number of tokens held in Solo, adding the number of tokens owed to Solo by borrowers, and subtracting the number of tokens owed to suppliers by Solo.\"},\"getNumMarkets()\":{\"notice\":\"Get the total number of markets.\"},\"getRiskLimits()\":{\"notice\":\"Get all risk parameter limits in a single struct. These are the maximum limits at which the risk parameters can be set by the admin of Solo.\"},\"getRiskParams()\":{\"notice\":\"Get all risk parameters in a single struct.\"},\"operate((address,uint256)[],(uint8,uint256,(bool,uint8,uint8,uint256),uint256,uint256,address,uint256,bytes)[])\":{\"notice\":\"The main entry-point to Solo that allows users and contracts to manage accounts. Take one or more actions on one or more accounts. The msg.sender must be the owner or operator of all accounts except for those being liquidated, vaporized, or traded with. One call to operate() is considered a singular \\\"operation\\\". Account collateralization is ensured only after the completion of the entire operation.\"},\"ownerAddMarket(address,address,address,(uint256),(uint256))\":{\"notice\":\"Add a new market to Solo. Must be for a previously-unsupported ERC20 token.\"},\"ownerSetEarningsRate((uint256))\":{\"notice\":\"Set the global earnings-rate variable that determines what percentage of the interest paid by borrowers gets passed-on to suppliers.\"},\"ownerSetGlobalOperator(address,bool)\":{\"notice\":\"Approve (or disapprove) an address that is permissioned to be an operator for all accounts in Solo. Intended only to approve smart-contracts.\"},\"ownerSetInterestSetter(uint256,address)\":{\"notice\":\"Set the interest-setter for a market.\"},\"ownerSetIsClosing(uint256,bool)\":{\"notice\":\"Set (or unset) the status of a market to \\\"closing\\\". The borrowedValue of a market cannot increase while its status is \\\"closing\\\".\"},\"ownerSetLiquidationSpread((uint256))\":{\"notice\":\"Set the global liquidation spread. This is the spread between oracle prices that incentivizes the liquidation of risky positions.\"},\"ownerSetMarginPremium(uint256,(uint256))\":{\"notice\":\"Set a premium on the minimum margin-ratio for a market. This makes it so that any positions that include this market require a higher collateralization to avoid being liquidated.\"},\"ownerSetMarginRatio((uint256))\":{\"notice\":\"Set the global minimum margin-ratio that every position must maintain to prevent being liquidated.\"},\"ownerSetMinBorrowedValue((uint256))\":{\"notice\":\"Set the global minimum-borrow value which is the minimum value of any new borrow on Solo.\"},\"ownerSetPriceOracle(uint256,address)\":{\"notice\":\"Set the price oracle for a market.\"},\"ownerSetSpreadPremium(uint256,(uint256))\":{\"notice\":\"Set a premium on the liquidation spread for a market. This makes it so that any liquidations that include this market have a higher spread than the global default.\"},\"ownerWithdrawExcessTokens(uint256,address)\":{\"notice\":\"Withdraw an ERC20 token for which there is an associated market. Only excess tokens can be withdrawn. The number of excess tokens is calculated by taking the current number of tokens held in Solo, adding the number of tokens owed to Solo by borrowers, and subtracting the number of tokens owed to suppliers by Solo.\"},\"ownerWithdrawUnsupportedTokens(address,address)\":{\"notice\":\"Withdraw an ERC20 token for which there is no associated market.\"},\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"setOperators((address,bool)[])\":{\"notice\":\"Approves/disapproves any number of operators. An operator is an external address that has the same permissions to manipulate an account as the owner of the account. Operators are simply addresses and therefore may either be externally-owned Ethereum accounts OR smart contracts.     * Operators are also able to act as AutoTrader contracts on behalf of the account owner if the operator is a smart contract and implements the IAutoTrader interface.\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/protocol/SoloMargin.sol\":\"SoloMargin\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]},\"openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x58e8ca389c46941a0bfc26b91025d3427864bd9070a7762f90d29677cd3f3dd8\",\"urls\":[\"bzzr://5c079549429384de9624a5686a33649e7e637bf0b715773182e77dffc9ea4c38\"]},\"project:/contracts/protocol/Admin.sol\":{\"keccak256\":\"0xf0c68f3d62c7f3e6138b8060c5e4de0498e6840ece10dbf5bff7eb965e249242\",\"urls\":[\"bzzr://ca7761cde5dc880b9a52e0c109ab0f2c1e4f503499f88a3015ee8ce73041e2be\"]},\"project:/contracts/protocol/Getters.sol\":{\"keccak256\":\"0x37cfba49699e037c12bdb52c00a72c1714f7e00334d16dba27b9072b9cb8705f\",\"urls\":[\"bzzr://92838931cb66fe28b11a6301ab841e236ff21595a692d142820021b394e525af\"]},\"project:/contracts/protocol/Operation.sol\":{\"keccak256\":\"0x851643bbda019072de0ee1acab8ae730b2917edb8efda0800d77be1607a60d9f\",\"urls\":[\"bzzr://c010a5ab40450595c71643ae6a1a0924dd1d12df05b672a7429bdf0801b98bbb\"]},\"project:/contracts/protocol/Permission.sol\":{\"keccak256\":\"0x979cc19cdbfee86afc8c3fb4992e6adbed14bb91bc0ba3c555ae4b385c5d1800\",\"urls\":[\"bzzr://f00315a9a80620a1c2c7760fda6900eee2786f1f5fe59aeea56900b214c1d630\"]},\"project:/contracts/protocol/SoloMargin.sol\":{\"keccak256\":\"0xf7d64da95033d6c8740872a34ad8bf324417712df69cfe6aa31b7f4b125f154f\",\"urls\":[\"bzzr://bea6fbd9b9ca5e6bcbfa67bb76db0b28b8f715c1fe4191529fcf428abd16613c\"]},\"project:/contracts/protocol/State.sol\":{\"keccak256\":\"0x5714e47e67861242ddb9563681aeccf0e6f1c42dec9e27ec29ff248785cdd25a\",\"urls\":[\"bzzr://4862c97a9f382291472c3954fd3dc279b00ae3d37daed8287491e5a9b9b5d584\"]},\"project:/contracts/protocol/impl/AdminImpl.sol\":{\"keccak256\":\"0x6c37d2a0a51367c837224e8e56f8ccb30d8a51abd96f2280f25a5bd263b11bdf\",\"urls\":[\"bzzr://8d7208c7261de48b49450e12496db21b994d4b2bd8143842be2f9c78d7db1ce2\"]},\"project:/contracts/protocol/impl/OperationImpl.sol\":{\"keccak256\":\"0x7042bf56dd98e9fef064493bfd79e1710fd0586fab5b98dcbc0ddebafc1fa3c5\",\"urls\":[\"bzzr://cd20b5da43faff4160dcb0298600c8edfaf8647e818a2ca2a34db47f30d57e72\"]},\"project:/contracts/protocol/interfaces/IAutoTrader.sol\":{\"keccak256\":\"0xa416051ccd2a83cc5a77e86591a4a3fc093ceb5f42ca7b1d7c8e8d35c79ddb5b\",\"urls\":[\"bzzr://9ad6198a2fcb288d5485b3f2e9042815ec644f85c0ab884b0a2667250780cee5\"]},\"project:/contracts/protocol/interfaces/ICallee.sol\":{\"keccak256\":\"0x3904aba675b36e1e5e98f8e1e20404287da48adefd527fe8f2e21d9d0439b4ac\",\"urls\":[\"bzzr://1097cf3fd9bdce4abf90e2ce0611c45e39c8a33baf7bdb9e1996e7718530c124\"]},\"project:/contracts/protocol/interfaces/IErc20.sol\":{\"keccak256\":\"0x6a972ae5d9fcb4e3f44589dc77ac3c168061c09a0a9001f29fdc2e361d044946\",\"urls\":[\"bzzr://e467ccb83dd015c9ca4862f3e95b7fd8c17c1cfd0a15a3dc799209967cf537ac\"]},\"project:/contracts/protocol/interfaces/IExchangeWrapper.sol\":{\"keccak256\":\"0xa4983e5de7559a9e7236e71d3d089a85eea413ac1f03f8365bac3c5eb0ce0ac8\",\"urls\":[\"bzzr://80338d73c68e6c6649def643dc4c6ae4b1cee4c8e117435f6becc30846e85fa2\"]},\"project:/contracts/protocol/interfaces/IInterestSetter.sol\":{\"keccak256\":\"0xb675679876a8163f224dfc4f6598a168f8248400a49ab836fdd2a7f4d25a1683\",\"urls\":[\"bzzr://1597c0ec5015093d8d0a91af168e5e89c91ba615abc65048ed721195040ec0f8\"]},\"project:/contracts/protocol/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x647a7519803283e4152e0617881f0cf2766f8968cd1de9f28d624ee164adf19a\",\"urls\":[\"bzzr://0cb0053f7cfea2c823036aef20a99b63e5037fa9de5d55116a10374a45c7b828\"]},\"project:/contracts/protocol/lib/Account.sol\":{\"keccak256\":\"0x4c27c617b01972ddb8ca160454284ed09f3ec6f7abd667c31ca9f38805738d33\",\"urls\":[\"bzzr://ad0dd4229cea4f8c5b877a653766cf413d733e442cfc448ffd715e786d7b5216\"]},\"project:/contracts/protocol/lib/Actions.sol\":{\"keccak256\":\"0xa3def9f1d58c1a353cd5412df8027674226000fd0b1cf52f3e11d6b4428fe2dc\",\"urls\":[\"bzzr://955e36c7bd9e222b58764b755169056c4225fc0561fdd88bb71ce7f1e2782a41\"]},\"project:/contracts/protocol/lib/Cache.sol\":{\"keccak256\":\"0x5caa444f1798e385674713fef9b8190088f3a31655ae918340ff755e26566c82\",\"urls\":[\"bzzr://23b8e2e44d3db5588ff1311520e24272255f7b8d23c0923e955f51d5a4397beb\"]},\"project:/contracts/protocol/lib/Decimal.sol\":{\"keccak256\":\"0xfddbafc617a77d1db59ddbc596f6aa22931a9a656c0755887648c09bb038ae8c\",\"urls\":[\"bzzr://40396a3a6ded6bb9fe5b5c4b0318f7518ce23c925b104f557310a3775e6e383d\"]},\"project:/contracts/protocol/lib/Events.sol\":{\"keccak256\":\"0x8467cdc3f69a617a6ae9b3c0921abce180ebcfb0bc9deb6f59f96f2e149b9ad5\",\"urls\":[\"bzzr://44973ebae91505e96610b4732d31b98d2bbab2b1b48875e528ba6e26cbd097e4\"]},\"project:/contracts/protocol/lib/Exchange.sol\":{\"keccak256\":\"0xaea9d9746796378d2e191ccf47569c0acc728342ff948817061179724d4f52e8\",\"urls\":[\"bzzr://2b73f2c0c7726ebea3301504334110b5b2a2d3271fe298bef29b8ccccaf0bb6a\"]},\"project:/contracts/protocol/lib/Interest.sol\":{\"keccak256\":\"0x657f152e3853377ea93d101e145c2f2969fb6fbde025cedd10e7ee17c8bd5c4c\",\"urls\":[\"bzzr://ec53ea6522f8a1ae4150e1c8718f6d7d20d1755b93f4ee6268fd67bd979fa0f9\"]},\"project:/contracts/protocol/lib/Math.sol\":{\"keccak256\":\"0x05162cffa6d5479b6555e03af67b75e63d85272a3c3d3d2630a127ffa811ba41\",\"urls\":[\"bzzr://0e784dccf35201ef16030ec531028252d590936d75f0200f368a7e5981046af4\"]},\"project:/contracts/protocol/lib/Monetary.sol\":{\"keccak256\":\"0x6f876a958c45fb1f2cefce1d7ee0ceb610fbe393e0040ad2d5680e0aa5536e54\",\"urls\":[\"bzzr://8b027c6ce5cd901a634dab7de74d617098b706d50b1c2ea0636406e021ea2815\"]},\"project:/contracts/protocol/lib/Require.sol\":{\"keccak256\":\"0x6ecb512d52bb5cb36ba26b98877240e0b23eb3310df5dc61f82c655dc974d04b\",\"urls\":[\"bzzr://826485117e00106f438a7e64ecc32b2c3705e02d9bd6035dbdc5f9faaa19482c\"]},\"project:/contracts/protocol/lib/Storage.sol\":{\"keccak256\":\"0x862bb5cf49dd4415b2659d2815021bb97392d3bd11a32ae2803d9f85ecc947b4\",\"urls\":[\"bzzr://3c48763c77cfd222a379a7be791a4341f355e76f35bc4c62e16264fa0f71f23e\"]},\"project:/contracts/protocol/lib/Time.sol\":{\"keccak256\":\"0x6523f89764a33b986f6655b5a0fb5b375103153be606b07a9fa95ceb2b93c2f6\",\"urls\":[\"bzzr://61ff7be71d666649cf1b78c2d9950e0d58322932e7e5f6742adbe511e864cd51\"]},\"project:/contracts/protocol/lib/Token.sol\":{\"keccak256\":\"0x7fff4d94f462515466ed263d686abb7fff9b6d6c95a28662a64a8424f5d95a23\",\"urls\":[\"bzzr://41bc60c90477c5ddab82a7760c652d87cce21dadb00456e028ff37b849bd13f4\"]},\"project:/contracts/protocol/lib/Types.sol\":{\"keccak256\":\"0x35c04c154e9ef818a3e1b59eb748565645864d5f8f2bc696c1f425a8ade9ab00\",\"urls\":[\"bzzr://8b2db9cb583f79fc2b74a70b270667f6a3bc54c3afef6a2d56e0d2ec5b8ca725\"]}},\"version\":1}",
  "bytecode": "0x60806040527f4765747465727300000000000000000000000000000000000000000000000000600d553480156200003557600080fd5b50604051610140806200459b833981018060405262000058919081019062000336565b600b8054600160a060020a031916331790819055604051600160a060020a0391909116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36001600c5581515160055560208083015151600655604080840151516007556060938401515160085582516009805493850151928501519585015167ffffffffffffffff199485166001604060020a0393841617604060020a608060020a03191668010000000000000000948416850217608060020a60c060020a0319167001000000000000000000000000000000009784169790970296909617600160c060020a0316780100000000000000000000000000000000000000000000000096831696909602959095179094556080830151600a805460a09095015194909316941693909317604060020a60c060020a0319166001608060020a03909216909202179055620003b8565b600060208284031215620001c057600080fd5b620001cc602062000376565b90506000620001dc84846200031a565b82525092915050565b600060c08284031215620001f857600080fd5b6200020460c062000376565b9050600062000214848462000328565b8252506020620002278484830162000328565b60208301525060406200023d8482850162000328565b6040830152506060620002538482850162000328565b6060830152506080620002698482850162000328565b60808301525060a06200027f8482850162000305565b60a08301525092915050565b6000608082840312156200029e57600080fd5b620002aa608062000376565b90506000620002ba8484620001ad565b8252506020620002cd84848301620001ad565b6020830152506040620002e384828501620001ad565b6040830152506060620002f984828501620001ad565b60608301525092915050565b60006200031382516200039d565b9392505050565b6000620003138251620003a9565b6000620003138251620003ac565b60008061014083850312156200034b57600080fd5b60006200035985856200028b565b92505060806200036c85828601620001e5565b9150509250929050565b6040518181016001604060020a03811182821017156200039557600080fd5b604052919050565b6001608060020a031690565b90565b6001604060020a031690565b6141d380620003c86000396000f3fe608060405234801561001057600080fd5b5060043610610348576000357c0100000000000000000000000000000000000000000000000000000000900480638928378e116101cf578063d5ecf7c511610116578063eb44fdd3116100bf578063f2fde38b11610099578063f2fde38b14610717578063f94160521461072a578063fd04b6061461073d578063fd47eda61461075057610348565b8063eb44fdd3146106d1578063ef6957d0146106f1578063f2901ae21461070457610348565b8063e5520228116100f0578063e5520228146106a1578063e8e72f75146106a9578063eb1c6e6b146106bc57610348565b8063d5ecf7c51461065b578063deec053d1461066e578063e51bfcb41461068157610348565b8063b548b89211610178578063c190c2ec11610152578063c190c2ec14610608578063cb04a34c14610628578063d24c48bc1461064857610348565b8063b548b892146105ca578063c0bb72b7146105ed578063c14609421461060057610348565b80638f6bc659116101a95780638f6bc65914610591578063982f323c146105a4578063a67a6a45146105b757610348565b80638928378e1461056e5780638da5cb5b146105815780638f32d59b1461058957610348565b8063387a498a116102935780635ac7d17c1161023c578063715018a611610216578063715018a61461054b5780637e9eaf411461055357806385b53fc81461055b57610348565b80635ac7d17c1461050157806369794795146105145780636a8194e71461052957610348565b80634be874141161026d5780634be87414146104c65780634f3c1542146104d957806356ea84b2146104e157610348565b8063387a498a146104805780633a031bf01461049357806347d1b53c146104a657610348565b8063197f0f05116102f55780632a560845116102cf5780632a560845146104475780632e822af31461045a5780633063bce21461046d57610348565b8063197f0f05146103ff5780631a7777bb14610412578063295c39a51461043257610348565b8063121fb72f11610326578063121fb72f146103ab578063124f914c146103be57806313368364146103df57610348565b8063042069d61461034d578063052f72d714610362578063062bd3e91461038b575b600080fd5b61036061035b366004613594565b610763565b005b6103756103703660046132cf565b610817565b6040516103829190613cf4565b60405180910390f35b61039e6103993660046134ea565b610831565b6040516103829190613c6a565b6103606103b9366004613564565b61084d565b6103d16103cc36600461347e565b6108be565b604051610382929190613f4a565b6103f26103ed3660046134ea565b6108e2565b6040516103829190613d02565b6103f261040d3660046134ea565b610919565b6104256104203660046134ea565b610950565b6040516103829190613d2f565b61043a610987565b6040516103829190613f66565b61043a6104553660046132ed565b61098d565b610360610468366004613460565b610a67565b61036061047b366004613460565b610b18565b61036061048e366004613460565b610b87565b6103756104a13660046132ed565b610bf6565b6104b96104b436600461349c565b610c12565b6040516103829190613d93565b6103606104d4366004613594565b610c35565b610425610ca6565b6104f46104ef3660046134ea565b610cc2565b6040516103829190613d3d565b61037561050f3660046134ea565b610cf7565b61051c610d1b565b6040516103829190613daf565b61053c61053736600461347e565b610d77565b60405161038293929190613cbb565b610360610ee5565b610425610f65565b61036061056936600461342b565b610f81565b61042561057c3660046134ea565b611064565b61039e611086565b6103756110a2565b61043a61059f366004613526565b6110c0565b6103606105b2366004613357565b611133565b6103606105c53660046133cc565b6111f0565b6105dd6105d83660046134ea565b611250565b6040516103829493929190613d5a565b6103606105fb366004613460565b6112ac565b61042561131b565b61061b61061636600461349c565b611337565b6040516103829190613f58565b61063b6106363660046134ea565b611377565b6040516103829190613f3c565b6104256106563660046135c4565b611399565b61061b6106693660046134ea565b6113c5565b6104f461067c3660046134ea565b6113e7565b61069461068f36600461347e565b611409565b6040516103829190613d10565b61042561141b565b6103606106b7366004613564565b611437565b6106c46114a8565b6040516103829190613da1565b6106e46106df3660046134ea565b61154a565b6040516103829190613d4b565b6103606106ff366004613545565b611689565b610360610712366004613327565b6116fa565b6103606107253660046132cf565b61176b565b6103d161073836600461347e565b611788565b61042561074b3660046134ea565b6117a3565b61042561075e3660046134ea565b6117da565b61076b6110a2565b61077457600080fd5b600c8054600101908190556040517f8854ab3e00000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________90638854ab3e906107d49060009087908790600401613f14565b60006040518083038186803b1580156107ec57600080fd5b505af4158015610800573d6000803e3d6000fd5b50505050600c54811461081257600080fd5b505050565b6000610829818363ffffffff61180f16565b90505b919050565b600061083c8261183e565b61082960008363ffffffff61187116565b6108556110a2565b61085e57600080fd5b600c8054600101908190556040517faa92e34800000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________9063aa92e348906107d49060009087908790600401613eec565b6108c6612d4f565b6108ce612d4f565b6108d983600061189d565b91509150915091565b60006108ed8261183e565b5060009081526001602052604090206003015473ffffffffffffffffffffffffffffffffffffffff1690565b60006109248261183e565b5060009081526001602052604090206004015473ffffffffffffffffffffffffffffffffffffffff1690565b610958612d4f565b6109618261183e565b506000908152600160209081526040918290208251918201909252600690910154815290565b60005490565b60006109976110a2565b6109a057600080fd5b600c8054600101908190556040517fdd32998a00000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________9063dd32998a90610a009060009088908890600401613dbd565b60206040518083038186803b158015610a1857600080fd5b505af4158015610a2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a509190810190613508565b9150600c548114610a6057600080fd5b5092915050565b610a6f6110a2565b610a7857600080fd5b600c8054600101908190556040517ff9cacc4c00000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________9063f9cacc4c90610ad6906000908690600401613e9b565b60006040518083038186803b158015610aee57600080fd5b505af4158015610b02573d6000803e3d6000fd5b50505050600c548114610b1457600080fd5b5050565b610b206110a2565b610b2957600080fd5b600c8054600101908190556040517f0f44e6bc00000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________90630f44e6bc90610ad6906000908690600401613e9b565b610b8f6110a2565b610b9857600080fd5b600c8054600101908190556040517f311401d000000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________9063311401d090610ad6906000908690600401613e9b565b6000610c0981848463ffffffff61192916565b90505b92915050565b610c1a612d62565b610c238261183e565b610c096000848463ffffffff61196916565b610c3d6110a2565b610c4657600080fd5b600c8054600101908190556040517f7335079b00000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________90637335079b906107d49060009087908790600401613f14565b610cae612d4f565b506040805160208101909152600554815290565b610cca612d79565b610cd38261183e565b61082982610ce860008263ffffffff6119e516565b6000919063ffffffff611a6916565b6000610d028261183e565b5060009081526001602052604090206007015460ff1690565b610d23612d99565b506040805160a0810182526005546080820190815281528151602081810184526006548252808301919091528251808201845260075481528284015282519081019092526008548252606081019190915290565b6060806060600080600001549050606081604051908082528060200260200182016040528015610db1578160200160208202803883390190505b509050606082604051908082528060200260200182016040528015610df057816020015b610ddd612d62565b815260200190600190039081610dd55790505b509050606083604051908082528060200260200182016040528015610e2f57816020015b610e1c612d62565b815260200190600190039081610e145790505b50905060005b84811015610ed657610e4681610831565b848281518110610e5257fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050610e968982610c12565b838281518110610ea257fe5b6020026020010181905250610eb78982611337565b828281518110610ec357fe5b6020908102919091010152600101610e35565b50919790965090945092505050565b610eed6110a2565b610ef657600080fd5b600b5460405160009173ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600b80547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b610f6d612d4f565b506040805160208101909152600854815290565b60005b8151811015610b14576000828281518110610f9b57fe5b60200260200101516000015190506000838381518110610fb757fe5b60209081029190910181015181015133600081815260038452604080822073ffffffffffffffffffffffffffffffffffffffff8816835290945283902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683151517905591519092507f4d7f317d2088d039c2a95a09fcbf9cc9191fad5905f883c937cc3d317c4a6327906110529085908590613c78565b60405180910390a25050600101610f84565b61106c612d4f565b6110758261183e565b61082960008363ffffffff611ac116565b600b5473ffffffffffffffffffffffffffffffffffffffff1690565b600b5473ffffffffffffffffffffffffffffffffffffffff16331490565b60006110ca6110a2565b6110d357600080fd5b600c8054600101908190556040517fb25328e000000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________9063b25328e090610a009060009088908890600401613eb6565b61113b6110a2565b61114457600080fd5b600c8054600101908190556040517f48d0648400000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________906348d06484906111aa906000908a908a908a908a908a90600401613e0d565b60006040518083038186803b1580156111c257600080fd5b505af41580156111d6573d6000803e3d6000fd5b50505050600c5481146111e857600080fd5b505050505050565b600c8054600101908190556040517fbd76ecfd00000000000000000000000000000000000000000000000000000000815273__OperationImpl_________________________9063bd76ecfd906107d49060009087908790600401613e67565b611258612dd8565b611260612d79565b611268612d4f565b611270612d4f565b6112798561183e565b6112828561154a565b61128b86610cc2565b61129487611064565b61129d886117da565b93509350935093509193509193565b6112b46110a2565b6112bd57600080fd5b600c8054600101908190556040517f54dd351600000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________906354dd351690610ad6906000908690600401613e9b565b611323612d4f565b506040805160208101909152600654815290565b61133f612d62565b6113488261183e565b610c0961135d6000858563ffffffff61196916565b61137284610ce860008263ffffffff6119e516565b611c0a565b61137f612d62565b6113888261183e565b61082960008363ffffffff611cbb16565b6113a1612d4f565b6113aa8361183e565b6113b38261183e565b610c096000848463ffffffff611d1b16565b6113cd612d62565b6113d68261183e565b61082960008363ffffffff611db116565b6113ef612d79565b6113f88261183e565b61082960008363ffffffff6119e516565b6000610829818363ffffffff611e7716565b611423612d4f565b506040805160208101909152600754815290565b61143f6110a2565b61144857600080fd5b600c8054600101908190556040517f8c5dabd100000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________90638c5dabd1906107d49060009087908790600401613eec565b6114b0612e4b565b506040805160c08101825260095467ffffffffffffffff808216835268010000000000000000808304821660208501527001000000000000000000000000000000008304821694840194909452780100000000000000000000000000000000000000000000000090910481166060830152600a549081166080830152919091046fffffffffffffffffffffffffffffffff1660a082015290565b611552612dd8565b61155b8261183e565b50600090815260016020818152604092839020835161010081018552815473ffffffffffffffffffffffffffffffffffffffff908116825285518087018752948301546fffffffffffffffffffffffffffffffff808216875270010000000000000000000000000000000090910416858501528184019490945284516060808201875260028401546bffffffffffffffffffffffff80821684526c01000000000000000000000000820416838701527801000000000000000000000000000000000000000000000000900463ffffffff168288015282870191909152600383015485169082015260048201549093166080840152835180830185526005820154815260a084015283519182019093526006830154815260c082015260079091015460ff16151560e082015290565b6116916110a2565b61169a57600080fd5b600c8054600101908190556040517f10c87b0600000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________906310c87b06906107d49060009087908790600401613ed1565b6117026110a2565b61170b57600080fd5b600c8054600101908190556040517fe80f802400000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________9063e80f8024906107d49060009087908790600401613de5565b6117736110a2565b61177c57600080fd5b61178581611eb9565b50565b611790612d4f565b611798612d4f565b6108d983600161189d565b6117ab612d4f565b6117b48261183e565b506000908152600160209081526040918290208251918201909252600590910154815290565b6117e2612d4f565b6117eb8261183e565b6108298261180060008263ffffffff6119e516565b6000919063ffffffff611f6716565b73ffffffffffffffffffffffffffffffffffffffff166000908152600491909101602052604090205460ff1690565b61178560008001548210600d547f4d61726b6574204f4f420000000000000000000000000000000000000000000061208e565b6000908152600191909101602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6118a5612d4f565b6118ad612d4f565b6000546118b8612e80565b6118c18261213f565b905060005b82811015611908576118e86118e36000898463ffffffff61196916565b612195565b611900576118fe8260008363ffffffff6121af16565b505b6001016118c6565b5061191c600087838863ffffffff61228916565b9350935050509250929050565b73ffffffffffffffffffffffffffffffffffffffff808316600090815260038501602090815260408083209385168352929052205460ff165b9392505050565b611971612d62565b50815173ffffffffffffffffffffffffffffffffffffffff1660009081526002840160209081526040808320828601518452825280832084845282529182902082518084019093525460ff8116151583526fffffffffffffffffffffffffffffffff61010090910416908201529392505050565b6119ed612d79565b506000908152600191909101602090815260409182902082516060810184526002909101546bffffffffffffffffffffffff80821683526c0100000000000000000000000082041692820192909252780100000000000000000000000000000000000000000000000090910463ffffffff169181019190915290565b611a71612d79565b611a79612d4f565b611a8a85858563ffffffff611f6716565b9050611ab88382611aa1888863ffffffff611cbb16565b604080516020810190915260078a015481526123dc565b95945050505050565b611ac9612d4f565b600082815260018401602052604090206003015473ffffffffffffffffffffffffffffffffffffffff16611afb612d4f565b73ffffffffffffffffffffffffffffffffffffffff82166341976e09611b27878763ffffffff61187116565b6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611b5f9190613c6a565b60206040518083038186803b158015611b7757600080fd5b505afa158015611b8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611baf91908101906134cc565b8051909150611c029015157f53746f72616765000000000000000000000000000000000000000000000000007f50726963652063616e6e6f74206265207a65726f00000000000000000000000087612546565b949350505050565b611c12612d62565b602083015183516fffffffffffffffffffffffffffffffff9091169015611c7e57604080518082019091526001815260208481015190820190611c739084906bffffffffffffffffffffffff16670de0b6b3a764000063ffffffff6125e416565b815250915050610c0c565b604080518082019091526000815283516020820190611c739084906bffffffffffffffffffffffff16670de0b6b3a764000063ffffffff61260616565b611cc3612d62565b506000818152600180840160209081526040928390208351808501909452909101546fffffffffffffffffffffffffffffffff8082168452700100000000000000000000000000000000909104169082015292915050565b611d23612d4f565b60068085015460008581526001870160209081526040918290208251918201909252920154825290611d5f908290611d5a90612653565b61268a565b9050611d9a81611d5a876001016000878152602001908152602001600020600601604051806020016040529081600082015481525050612653565b604080516020810190915290815295945050505050565b611db9612d62565b611dc1612d79565b611dd1848463ffffffff6119e516565b9050611ddb612d62565b611deb858563ffffffff611cbb16565b90506000611dff868663ffffffff61187116565b9050611e09612d62565b6040518060400160405280600115158152602001611e2784306126a3565b90529050611e33612d62565b611e3b612d62565b611e458587612748565b9092509050611e6a82611e5e858463ffffffff6127f016565b9063ffffffff6127f016565b9998505050505050505050565b805173ffffffffffffffffffffffffffffffffffffffff1660009081526002929092016020908152604080842092820151845291905290206001015460ff1690565b73ffffffffffffffffffffffffffffffffffffffff8116611ed957600080fd5b600b5460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b611f6f612d4f565b611f77612d62565b611f87858563ffffffff611cbb16565b9050611f91612d62565b611f99612d62565b611fa38386612748565b91509150611faf612d4f565b600087815260018901602052604090206004015473ffffffffffffffffffffffffffffffffffffffff1663e8177dcf611fee8a8a63ffffffff61187116565b846020015186602001516040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161203293929190613c93565b60206040518083038186803b15801561204a57600080fd5b505afa15801561205e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061208291908101906134cc565b98975050505050505050565b826108125761209c8261280a565b7f3a200000000000000000000000000000000000000000000000000000000000006120c68361280a565b6040516020016120d893929190613be4565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a000000000000000000000000000000000000000000000000000000000825261213691600401613d1e565b60405180910390fd5b612147612e80565b60405180602001604052808360405190808252806020026020018201604052801561218c57816020015b612179612e93565b8152602001906001900390816121715790505b50905292915050565b602001516fffffffffffffffffffffffffffffffff161590565b60006121c1848363ffffffff61290516565b156121ce57506000611962565b6121de838363ffffffff611ac116565b84518051849081106121ec57fe5b602090810291909101810151604090810192909252600084815260018601909152206007015460ff161561227f5760018460000151838151811061222c57fe5b6020908102919091010151901515905261224c838363ffffffff611cbb16565b51845180518490811061225b57fe5b6020908102919091018101516fffffffffffffffffffffffffffffffff9092169101525b5060019392505050565b612291612d4f565b612299612d4f565b6122a1612d4f565b6122a9612d4f565b60006122b487612933565b905060005b818110156123cd576122d1888263ffffffff61290516565b6122da576123c5565b6122e2612d62565b6122f38b8b8463ffffffff61293816565b90506122fe816129a7565b1561230957506123c5565b600061233061231e8b8563ffffffff6129af16565b5160208401519063ffffffff6129d916565b905061233a612d4f565b612342612a00565b9050891561237a57600084815260018e0160209081526040918290208251918201909252600590910154815261237790612653565b90505b8251156123a35761239c61238e8383612a22565b88519063ffffffff612a3b16565b87526123c1565b6123be6123b0838361268a565b87519063ffffffff612a3b16565b86525b5050505b6001016122b9565b50919890975095505050505050565b6123e4612d79565b6123ec612d62565b6123f4612d62565b6123fe8588612748565b91509150600061240c612a4d565b905060006124446124368a6040015163ffffffff168463ffffffff16612a5d90919063ffffffff16565b89519063ffffffff6129d916565b90506000612451856129a7565b1561245e57506000612490565b612468828861268a565b90508460200151846020015110156124905761248d81856020015187602001516125e4565b90505b8181111561249a57fe5b60408051606081019091528a5181906124e3906124de906bffffffffffffffffffffffff166124d28188670de0b6b3a76400006125e4565b9063ffffffff612a3b16565b612a72565b6bffffffffffffffffffffffff908116825260208d81015192019161251a916124de91166124d28187670de0b6b3a76400006125e4565b6bffffffffffffffffffffffff1681526020018463ffffffff1681525095505050505050949350505050565b836125de576125548361280a565b7f3a2000000000000000000000000000000000000000000000000000000000000061257e8461280a565b7f203c0000000000000000000000000000000000000000000000000000000000006125a885612ad0565b6040516120d89594939291907f3e0000000000000000000000000000000000000000000000000000000000000090602001613c0c565b50505050565b6000611c02826125fa868663ffffffff6129d916565b9063ffffffff612bfe16565b6000831580612613575082155b1561262a57612623600083612bfe565b9050611962565b611c0260016124d2846125fa836126478a8a63ffffffff6129d916565b9063ffffffff612a5d16565b61265b612d4f565b60408051602081019091528251819061268290670de0b6b3a764000063ffffffff612a3b16565b905292915050565b6000610c09838360000151670de0b6b3a76400006125e4565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8416906370a08231906126f8908590600401613c6a565b60206040518083038186803b15801561271057600080fd5b505afa158015612724573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c099190810190613508565b612750612d62565b612758612d62565b612760612d62565b5060408051808201909152600181526020858101516fffffffffffffffffffffffffffffffff1690820152612793612d62565b50604080518082019091526000815285516fffffffffffffffffffffffffffffffff1660208201526127c3612d62565b6127cd8387611c0a565b90506127d7612d62565b6127e18388611c0a565b91989197509095505050505050565b6127f8612d62565b610c098361280584612c20565b612c47565b6060808260405160200161281e9190613bcf565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052905060205b80156128ee5781517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091019082908290811061288a57fe5b6020910101517f010000000000000000000000000000000000000000000000000000000000000090819004027fff0000000000000000000000000000000000000000000000000000000000000016156128e9576001018152905061082c565b612851565b505060408051600081526020810190915292915050565b60008260000151828151811061291757fe5b6020026020010151604001516000015160001415905092915050565b515190565b612940612d62565b612948612d62565b61295985858563ffffffff61196916565b905061296481612195565b1561297957612971612cd9565b915050611962565b612981612d79565b612991868563ffffffff6119e516565b905061299d8282611c0a565b9695505050505050565b602001511590565b6129b7612d4f565b82518051839081106129c557fe5b602002602001015160400151905092915050565b6000826129e857506000610c0c565b828202828482816129f557fe5b0414610c0957600080fd5b612a08612d4f565b506040805160208101909152670de0b6b3a7640000815290565b6000610c0983670de0b6b3a764000084600001516125e4565b600082820183811015610c0957600080fd5b6000612a5842612cf9565b905090565b600082821115612a6c57600080fd5b50900390565b6000816108296bffffffffffffffffffffffff821682147f4d617468000000000000000000000000000000000000000000000000000000007f556e73616665206361737420746f2075696e743936000000000000000000000061208e565b606081612b11575060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015261082c565b8160005b8115612b2957600101600a82049150612b15565b6060816040519080825280601f01601f191660200182016040528015612b56576020820181803883390190505b508593509050815b8015612bf5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01600a84066030017f010000000000000000000000000000000000000000000000000000000000000002828281518110612bbb57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a84049350612b5e565b50949350505050565b6000808211612c0c57600080fd5b6000828481612c1757fe5b04949350505050565b612c28612d62565b5060408051808201909152815115815260208083015190820152919050565b612c4f612d62565b612c57612d62565b8251845115159015151415612c8a5783511515815260208085015190840151612c809190612a3b565b6020820152610c09565b8260200151846020015110612cb35783511515815260208085015190840151612c809190612a5d565b82511515815260208084015190850151612ccd9190612a5d565b60208201529392505050565b612ce1612d62565b50604080518082019091526000808252602082015290565b60008161082963ffffffff821682147f4d617468000000000000000000000000000000000000000000000000000000007f556e73616665206361737420746f2075696e743332000000000000000000000061208e565b6040518060200160405280600081525090565b604080518082019091526000808252602082015290565b604080516060810182526000808252602082018190529181019190915290565b6040518060800160405280612dac612d4f565b8152602001612db9612d4f565b8152602001612dc6612d4f565b8152602001612dd3612d4f565b905290565b604051806101600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001612e09612d62565b8152602001612e16612d79565b81526000602082018190526040820152606001612e31612d4f565b8152602001612e3e612d4f565b8152600060209091015290565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b6040518060200160405280606081525090565b6040805160608101825260008082526020820152908101612dd3612d4f565b6000610c098235614015565b600082601f830112612ecf57600080fd5b8135612ee2612edd82613f9b565b613f74565b81815260209384019390925082018360005b83811015612f205781358601612f0a888261308d565b8452506020928301929190910190600101612ef4565b5050505092915050565b600082601f830112612f3b57600080fd5b8135612f49612edd82613f9b565b91508181835260208401935060208101905083856040840282011115612f6e57600080fd5b60005b83811015612f205781612f84888261320b565b84525060209092019160409190910190600101612f71565b600082601f830112612fad57600080fd5b8135612fbb612edd82613f9b565b91508181835260208401935060208101905083856040840282011115612fe057600080fd5b60005b83811015612f205781612ff68882613252565b84525060209092019160409190910190600101612fe3565b6000610c098235614020565b600082601f83011261302b57600080fd5b8135613039612edd82613fbc565b9150808252602083016020830185838301111561305557600080fd5b613060838284614139565b50505092915050565b6000610c0982356140ef565b6000610c0982356140fa565b6000610c098235614109565b600061016082840312156130a057600080fd5b6130ab610100613f74565b905060006130b98484613075565b82525060206130ca848483016132b7565b60208301525060406130de84828501613169565b60408301525060c06130f2848285016132b7565b60608301525060e0613106848285016132b7565b60808301525061010061311b84828501612eb2565b60a083015250610120613130848285016132b7565b60c08301525061014082013567ffffffffffffffff81111561315157600080fd5b61315d8482850161301a565b60e08301525092915050565b60006080828403121561317b57600080fd5b6131856080613f74565b90506000613193848461300e565b82525060206131a484848301613081565b60208301525060406131b884828501613081565b60408301525060606131cc848285016132b7565b60608301525092915050565b6000602082840312156131ea57600080fd5b6131f46020613f74565b9050600061320284846132b7565b82525092915050565b60006040828403121561321d57600080fd5b6132276040613f74565b905060006132358484612eb2565b8252506020613246848483016132b7565b60208301525092915050565b60006040828403121561326457600080fd5b61326e6040613f74565b9050600061327c8484612eb2565b82525060206132468484830161300e565b60006020828403121561329f57600080fd5b6132a96020613f74565b9050600061320284846132c3565b6000610c09823561406f565b6000610c09825161406f565b6000602082840312156132e157600080fd5b6000611c028484612eb2565b6000806040838503121561330057600080fd5b600061330c8585612eb2565b925050602061331d85828601612eb2565b9150509250929050565b6000806040838503121561333a57600080fd5b60006133468585612eb2565b925050602061331d8582860161300e565b600080600080600060a0868803121561336f57600080fd5b600061337b8888612eb2565b955050602061338c88828901613069565b945050604061339d88828901613069565b93505060606133ae888289016131d8565b92505060806133bf888289016131d8565b9150509295509295909350565b600080604083850312156133df57600080fd5b823567ffffffffffffffff8111156133f657600080fd5b61340285828601612f2a565b925050602083013567ffffffffffffffff81111561341f57600080fd5b61331d85828601612ebe565b60006020828403121561343d57600080fd5b813567ffffffffffffffff81111561345457600080fd5b611c0284828501612f9c565b60006020828403121561347257600080fd5b6000611c0284846131d8565b60006040828403121561349057600080fd5b6000611c02848461320b565b600080606083850312156134af57600080fd5b60006134bb858561320b565b925050604061331d858286016132b7565b6000602082840312156134de57600080fd5b6000611c02848461328d565b6000602082840312156134fc57600080fd5b6000611c0284846132b7565b60006020828403121561351a57600080fd5b6000611c0284846132c3565b6000806040838503121561353957600080fd5b600061330c85856132b7565b6000806040838503121561355857600080fd5b600061334685856132b7565b6000806040838503121561357757600080fd5b600061358385856132b7565b925050602061331d85828601613069565b600080604083850312156135a757600080fd5b60006135b385856132b7565b925050602061331d858286016131d8565b600080604083850312156135d757600080fd5b60006135e385856132b7565b925050602061331d858286016132b7565b60006136008383613640565b505060200190565b6000610c0983836138ac565b600061362083836139e0565b505060400190565b60006136208383613a9e565b60006136208383613b91565b61364981614015565b82525050565b600061365a82614008565b613664818561400c565b935061366f83614002565b60005b8281101561369a576136858683516135f4565b955061369082614002565b9150600101613672565b5093949350505050565b60006136af82614008565b6136b9818561400c565b9350836020820285016136cb85614002565b60005b848110156137025783830388526136e6838351613608565b92506136f182614002565b6020989098019791506001016136ce565b50909695505050505050565b600061371982614008565b613723818561400c565b935061372e83614002565b60005b8281101561369a57613744868351613614565b955061374f82614002565b9150600101613731565b600061376482614008565b61376e818561400c565b935061377983614002565b60005b8281101561369a5761378f868351613628565b955061379a82614002565b915060010161377c565b60006137af82614008565b6137b9818561400c565b93506137c483614002565b60005b8281101561369a576137da868351613634565b95506137e582614002565b91506001016137c7565b61364981614020565b61364961380482614025565b61406f565b6136496138048261404a565b6136496138048261406f565b600061382c82614008565b613836818561082c565b9350613846818560208601614145565b9290920192915050565b600061385b82614008565b613865818561400c565b9350613875818560208601614145565b61387e81614171565b9093019392505050565b613649816140ef565b61364981614118565b61364981614123565b6136498161412e565b80516000906101608401906138c18582613891565b5060208301516138d46020860182613bab565b5060408301516138e7604086018261394e565b5060608301516138fa60c0860182613bab565b50608083015161390d60e0860182613bab565b5060a0830151613921610100860182613640565b5060c0830151613935610120860182613bab565b5060e0830151848203610140860152611ab88282613850565b8051608083019061395f84826137ef565b506020820151613972602085018261389a565b506040820151613985604085018261389a565b5060608201516125de6060850182613bab565b805160208301906125de8482613bab565b805160608301906139ba8482613bc6565b5060208201516139cd6020850182613bc6565b5060408201516125de6040850182613bb4565b805160408301906139f18482613640565b5060208201516125de6020850182613bab565b8051610160830190613a168482613640565b506020820151613a296020850182613b80565b506040820151613a3c60608501826139a9565b506060820151613a4f60c0850182613888565b506080820151613a6260e0850182613888565b5060a0820151613a76610100850182613998565b5060c0820151613a8a610120850182613998565b5060e08201516125de6101408501826137ef565b80516040830190613aaf84826137ef565b5060208201516125de6020850182613ba2565b805160c0830190613ad38482613bbd565b506020820151613ae66020850182613bbd565b506040820151613af96040850182613bbd565b506060820151613b0c6060850182613bbd565b506080820151613b1f6080850182613bbd565b5060a08201516125de60a0850182613ba2565b80516080830190613b438482613998565b506020820151613b566020850182613998565b506040820151613b696040850182613998565b5060608201516125de6060850182613998565b9052565b80516040830190613aaf8482613ba2565b805160408301906139f184826137ef565b6136498161409a565b6136498161406f565b613649816140c8565b613649816140d1565b613649816140de565b6000613bdb8284613815565b50602001919050565b6000613bf08286613821565b9150613bfc8285613809565b600282019150611ab88284613821565b6000613c188289613821565b9150613c248288613809565b600282019150613c348287613821565b9150613c408286613809565b600282019150613c508285613821565b9150613c5c82846137f8565b506001019695505050505050565b60208101610c0c8284613640565b60408101613c868285613640565b61196260208301846137ef565b60608101613ca18286613640565b613cae6020830185613bab565b611c026040830184613bab565b60608082528101613ccc818661364f565b90508181036020830152613ce08185613759565b90508181036040830152611ab881846137a4565b60208101610c0c82846137ef565b60208101610c0c8284613888565b60208101610c0c82846138a3565b60208082528101610c098184613850565b60208101610c0c8284613998565b60608101610c0c82846139a9565b6101608101610c0c8284613a04565b6102008101613d698287613a04565b613d776101608301866139a9565b613d856101c0830185613998565b611ab86101e0830184613998565b60408101610c0c8284613a9e565b60c08101610c0c8284613ac2565b60808101610c0c8284613b32565b60608101613dcb8286613b7c565b613dd86020830185613640565b611c026040830184613640565b60608101613df38286613b7c565b613e006020830185613640565b611c0260408301846137ef565b60c08101613e1b8289613b7c565b613e286020830188613640565b613e356040830187613888565b613e426060830186613888565b613e4f6080830185613998565b613e5c60a0830184613998565b979650505050505050565b60608101613e758286613b7c565b8181036020830152613e87818561370e565b90508181036040830152611ab881846136a4565b60408101613ea98285613b7c565b6119626020830184613998565b60608101613ec48286613b7c565b613dd86020830185613bab565b60608101613edf8286613b7c565b613e006020830185613bab565b60608101613efa8286613b7c565b613f076020830185613bab565b611c026040830184613888565b60608101613f228286613b7c565b613f2f6020830185613bab565b611c026040830184613998565b60408101610c0c8284613b80565b60408101613ea98285613998565b60408101610c0c8284613b91565b60208101610c0c8284613bab565b60405181810167ffffffffffffffff81118282101715613f9357600080fd5b604052919050565b600067ffffffffffffffff821115613fb257600080fd5b5060209081020190565b600067ffffffffffffffff821115613fd357600080fd5b506020601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160190565b60200190565b5190565b90815260200190565b6000610829826140af565b151590565b7fff000000000000000000000000000000000000000000000000000000000000001690565b7fffff0000000000000000000000000000000000000000000000000000000000001690565b90565b60006009821061407e57fe5b5090565b60006002821061407e57fe5b60006003821061407e57fe5b6fffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b63ffffffff1690565b67ffffffffffffffff1690565b6bffffffffffffffffffffffff1690565b600061082982614015565b60006009821061407e57600080fd5b60006002821061407e57600080fd5b600061082982614072565b600061082982614082565b60006108298261408e565b82818337506000910152565b60005b83811015614160578181015183820152602001614148565b838111156125de5750506000910152565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169056fea265627a7a723058202e97c161197e8d0a0ddde7f3dc576ece355bfb2905392a20cb466df6752052cb6c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610348576000357c0100000000000000000000000000000000000000000000000000000000900480638928378e116101cf578063d5ecf7c511610116578063eb44fdd3116100bf578063f2fde38b11610099578063f2fde38b14610717578063f94160521461072a578063fd04b6061461073d578063fd47eda61461075057610348565b8063eb44fdd3146106d1578063ef6957d0146106f1578063f2901ae21461070457610348565b8063e5520228116100f0578063e5520228146106a1578063e8e72f75146106a9578063eb1c6e6b146106bc57610348565b8063d5ecf7c51461065b578063deec053d1461066e578063e51bfcb41461068157610348565b8063b548b89211610178578063c190c2ec11610152578063c190c2ec14610608578063cb04a34c14610628578063d24c48bc1461064857610348565b8063b548b892146105ca578063c0bb72b7146105ed578063c14609421461060057610348565b80638f6bc659116101a95780638f6bc65914610591578063982f323c146105a4578063a67a6a45146105b757610348565b80638928378e1461056e5780638da5cb5b146105815780638f32d59b1461058957610348565b8063387a498a116102935780635ac7d17c1161023c578063715018a611610216578063715018a61461054b5780637e9eaf411461055357806385b53fc81461055b57610348565b80635ac7d17c1461050157806369794795146105145780636a8194e71461052957610348565b80634be874141161026d5780634be87414146104c65780634f3c1542146104d957806356ea84b2146104e157610348565b8063387a498a146104805780633a031bf01461049357806347d1b53c146104a657610348565b8063197f0f05116102f55780632a560845116102cf5780632a560845146104475780632e822af31461045a5780633063bce21461046d57610348565b8063197f0f05146103ff5780631a7777bb14610412578063295c39a51461043257610348565b8063121fb72f11610326578063121fb72f146103ab578063124f914c146103be57806313368364146103df57610348565b8063042069d61461034d578063052f72d714610362578063062bd3e91461038b575b600080fd5b61036061035b366004613594565b610763565b005b6103756103703660046132cf565b610817565b6040516103829190613cf4565b60405180910390f35b61039e6103993660046134ea565b610831565b6040516103829190613c6a565b6103606103b9366004613564565b61084d565b6103d16103cc36600461347e565b6108be565b604051610382929190613f4a565b6103f26103ed3660046134ea565b6108e2565b6040516103829190613d02565b6103f261040d3660046134ea565b610919565b6104256104203660046134ea565b610950565b6040516103829190613d2f565b61043a610987565b6040516103829190613f66565b61043a6104553660046132ed565b61098d565b610360610468366004613460565b610a67565b61036061047b366004613460565b610b18565b61036061048e366004613460565b610b87565b6103756104a13660046132ed565b610bf6565b6104b96104b436600461349c565b610c12565b6040516103829190613d93565b6103606104d4366004613594565b610c35565b610425610ca6565b6104f46104ef3660046134ea565b610cc2565b6040516103829190613d3d565b61037561050f3660046134ea565b610cf7565b61051c610d1b565b6040516103829190613daf565b61053c61053736600461347e565b610d77565b60405161038293929190613cbb565b610360610ee5565b610425610f65565b61036061056936600461342b565b610f81565b61042561057c3660046134ea565b611064565b61039e611086565b6103756110a2565b61043a61059f366004613526565b6110c0565b6103606105b2366004613357565b611133565b6103606105c53660046133cc565b6111f0565b6105dd6105d83660046134ea565b611250565b6040516103829493929190613d5a565b6103606105fb366004613460565b6112ac565b61042561131b565b61061b61061636600461349c565b611337565b6040516103829190613f58565b61063b6106363660046134ea565b611377565b6040516103829190613f3c565b6104256106563660046135c4565b611399565b61061b6106693660046134ea565b6113c5565b6104f461067c3660046134ea565b6113e7565b61069461068f36600461347e565b611409565b6040516103829190613d10565b61042561141b565b6103606106b7366004613564565b611437565b6106c46114a8565b6040516103829190613da1565b6106e46106df3660046134ea565b61154a565b6040516103829190613d4b565b6103606106ff366004613545565b611689565b610360610712366004613327565b6116fa565b6103606107253660046132cf565b61176b565b6103d161073836600461347e565b611788565b61042561074b3660046134ea565b6117a3565b61042561075e3660046134ea565b6117da565b61076b6110a2565b61077457600080fd5b600c8054600101908190556040517f8854ab3e00000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________90638854ab3e906107d49060009087908790600401613f14565b60006040518083038186803b1580156107ec57600080fd5b505af4158015610800573d6000803e3d6000fd5b50505050600c54811461081257600080fd5b505050565b6000610829818363ffffffff61180f16565b90505b919050565b600061083c8261183e565b61082960008363ffffffff61187116565b6108556110a2565b61085e57600080fd5b600c8054600101908190556040517faa92e34800000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________9063aa92e348906107d49060009087908790600401613eec565b6108c6612d4f565b6108ce612d4f565b6108d983600061189d565b91509150915091565b60006108ed8261183e565b5060009081526001602052604090206003015473ffffffffffffffffffffffffffffffffffffffff1690565b60006109248261183e565b5060009081526001602052604090206004015473ffffffffffffffffffffffffffffffffffffffff1690565b610958612d4f565b6109618261183e565b506000908152600160209081526040918290208251918201909252600690910154815290565b60005490565b60006109976110a2565b6109a057600080fd5b600c8054600101908190556040517fdd32998a00000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________9063dd32998a90610a009060009088908890600401613dbd565b60206040518083038186803b158015610a1857600080fd5b505af4158015610a2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a509190810190613508565b9150600c548114610a6057600080fd5b5092915050565b610a6f6110a2565b610a7857600080fd5b600c8054600101908190556040517ff9cacc4c00000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________9063f9cacc4c90610ad6906000908690600401613e9b565b60006040518083038186803b158015610aee57600080fd5b505af4158015610b02573d6000803e3d6000fd5b50505050600c548114610b1457600080fd5b5050565b610b206110a2565b610b2957600080fd5b600c8054600101908190556040517f0f44e6bc00000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________90630f44e6bc90610ad6906000908690600401613e9b565b610b8f6110a2565b610b9857600080fd5b600c8054600101908190556040517f311401d000000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________9063311401d090610ad6906000908690600401613e9b565b6000610c0981848463ffffffff61192916565b90505b92915050565b610c1a612d62565b610c238261183e565b610c096000848463ffffffff61196916565b610c3d6110a2565b610c4657600080fd5b600c8054600101908190556040517f7335079b00000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________90637335079b906107d49060009087908790600401613f14565b610cae612d4f565b506040805160208101909152600554815290565b610cca612d79565b610cd38261183e565b61082982610ce860008263ffffffff6119e516565b6000919063ffffffff611a6916565b6000610d028261183e565b5060009081526001602052604090206007015460ff1690565b610d23612d99565b506040805160a0810182526005546080820190815281528151602081810184526006548252808301919091528251808201845260075481528284015282519081019092526008548252606081019190915290565b6060806060600080600001549050606081604051908082528060200260200182016040528015610db1578160200160208202803883390190505b509050606082604051908082528060200260200182016040528015610df057816020015b610ddd612d62565b815260200190600190039081610dd55790505b509050606083604051908082528060200260200182016040528015610e2f57816020015b610e1c612d62565b815260200190600190039081610e145790505b50905060005b84811015610ed657610e4681610831565b848281518110610e5257fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050610e968982610c12565b838281518110610ea257fe5b6020026020010181905250610eb78982611337565b828281518110610ec357fe5b6020908102919091010152600101610e35565b50919790965090945092505050565b610eed6110a2565b610ef657600080fd5b600b5460405160009173ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600b80547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b610f6d612d4f565b506040805160208101909152600854815290565b60005b8151811015610b14576000828281518110610f9b57fe5b60200260200101516000015190506000838381518110610fb757fe5b60209081029190910181015181015133600081815260038452604080822073ffffffffffffffffffffffffffffffffffffffff8816835290945283902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683151517905591519092507f4d7f317d2088d039c2a95a09fcbf9cc9191fad5905f883c937cc3d317c4a6327906110529085908590613c78565b60405180910390a25050600101610f84565b61106c612d4f565b6110758261183e565b61082960008363ffffffff611ac116565b600b5473ffffffffffffffffffffffffffffffffffffffff1690565b600b5473ffffffffffffffffffffffffffffffffffffffff16331490565b60006110ca6110a2565b6110d357600080fd5b600c8054600101908190556040517fb25328e000000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________9063b25328e090610a009060009088908890600401613eb6565b61113b6110a2565b61114457600080fd5b600c8054600101908190556040517f48d0648400000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________906348d06484906111aa906000908a908a908a908a908a90600401613e0d565b60006040518083038186803b1580156111c257600080fd5b505af41580156111d6573d6000803e3d6000fd5b50505050600c5481146111e857600080fd5b505050505050565b600c8054600101908190556040517fbd76ecfd00000000000000000000000000000000000000000000000000000000815273__OperationImpl_________________________9063bd76ecfd906107d49060009087908790600401613e67565b611258612dd8565b611260612d79565b611268612d4f565b611270612d4f565b6112798561183e565b6112828561154a565b61128b86610cc2565b61129487611064565b61129d886117da565b93509350935093509193509193565b6112b46110a2565b6112bd57600080fd5b600c8054600101908190556040517f54dd351600000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________906354dd351690610ad6906000908690600401613e9b565b611323612d4f565b506040805160208101909152600654815290565b61133f612d62565b6113488261183e565b610c0961135d6000858563ffffffff61196916565b61137284610ce860008263ffffffff6119e516565b611c0a565b61137f612d62565b6113888261183e565b61082960008363ffffffff611cbb16565b6113a1612d4f565b6113aa8361183e565b6113b38261183e565b610c096000848463ffffffff611d1b16565b6113cd612d62565b6113d68261183e565b61082960008363ffffffff611db116565b6113ef612d79565b6113f88261183e565b61082960008363ffffffff6119e516565b6000610829818363ffffffff611e7716565b611423612d4f565b506040805160208101909152600754815290565b61143f6110a2565b61144857600080fd5b600c8054600101908190556040517f8c5dabd100000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________90638c5dabd1906107d49060009087908790600401613eec565b6114b0612e4b565b506040805160c08101825260095467ffffffffffffffff808216835268010000000000000000808304821660208501527001000000000000000000000000000000008304821694840194909452780100000000000000000000000000000000000000000000000090910481166060830152600a549081166080830152919091046fffffffffffffffffffffffffffffffff1660a082015290565b611552612dd8565b61155b8261183e565b50600090815260016020818152604092839020835161010081018552815473ffffffffffffffffffffffffffffffffffffffff908116825285518087018752948301546fffffffffffffffffffffffffffffffff808216875270010000000000000000000000000000000090910416858501528184019490945284516060808201875260028401546bffffffffffffffffffffffff80821684526c01000000000000000000000000820416838701527801000000000000000000000000000000000000000000000000900463ffffffff168288015282870191909152600383015485169082015260048201549093166080840152835180830185526005820154815260a084015283519182019093526006830154815260c082015260079091015460ff16151560e082015290565b6116916110a2565b61169a57600080fd5b600c8054600101908190556040517f10c87b0600000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________906310c87b06906107d49060009087908790600401613ed1565b6117026110a2565b61170b57600080fd5b600c8054600101908190556040517fe80f802400000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________9063e80f8024906107d49060009087908790600401613de5565b6117736110a2565b61177c57600080fd5b61178581611eb9565b50565b611790612d4f565b611798612d4f565b6108d983600161189d565b6117ab612d4f565b6117b48261183e565b506000908152600160209081526040918290208251918201909252600590910154815290565b6117e2612d4f565b6117eb8261183e565b6108298261180060008263ffffffff6119e516565b6000919063ffffffff611f6716565b73ffffffffffffffffffffffffffffffffffffffff166000908152600491909101602052604090205460ff1690565b61178560008001548210600d547f4d61726b6574204f4f420000000000000000000000000000000000000000000061208e565b6000908152600191909101602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6118a5612d4f565b6118ad612d4f565b6000546118b8612e80565b6118c18261213f565b905060005b82811015611908576118e86118e36000898463ffffffff61196916565b612195565b611900576118fe8260008363ffffffff6121af16565b505b6001016118c6565b5061191c600087838863ffffffff61228916565b9350935050509250929050565b73ffffffffffffffffffffffffffffffffffffffff808316600090815260038501602090815260408083209385168352929052205460ff165b9392505050565b611971612d62565b50815173ffffffffffffffffffffffffffffffffffffffff1660009081526002840160209081526040808320828601518452825280832084845282529182902082518084019093525460ff8116151583526fffffffffffffffffffffffffffffffff61010090910416908201529392505050565b6119ed612d79565b506000908152600191909101602090815260409182902082516060810184526002909101546bffffffffffffffffffffffff80821683526c0100000000000000000000000082041692820192909252780100000000000000000000000000000000000000000000000090910463ffffffff169181019190915290565b611a71612d79565b611a79612d4f565b611a8a85858563ffffffff611f6716565b9050611ab88382611aa1888863ffffffff611cbb16565b604080516020810190915260078a015481526123dc565b95945050505050565b611ac9612d4f565b600082815260018401602052604090206003015473ffffffffffffffffffffffffffffffffffffffff16611afb612d4f565b73ffffffffffffffffffffffffffffffffffffffff82166341976e09611b27878763ffffffff61187116565b6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611b5f9190613c6a565b60206040518083038186803b158015611b7757600080fd5b505afa158015611b8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611baf91908101906134cc565b8051909150611c029015157f53746f72616765000000000000000000000000000000000000000000000000007f50726963652063616e6e6f74206265207a65726f00000000000000000000000087612546565b949350505050565b611c12612d62565b602083015183516fffffffffffffffffffffffffffffffff9091169015611c7e57604080518082019091526001815260208481015190820190611c739084906bffffffffffffffffffffffff16670de0b6b3a764000063ffffffff6125e416565b815250915050610c0c565b604080518082019091526000815283516020820190611c739084906bffffffffffffffffffffffff16670de0b6b3a764000063ffffffff61260616565b611cc3612d62565b506000818152600180840160209081526040928390208351808501909452909101546fffffffffffffffffffffffffffffffff8082168452700100000000000000000000000000000000909104169082015292915050565b611d23612d4f565b60068085015460008581526001870160209081526040918290208251918201909252920154825290611d5f908290611d5a90612653565b61268a565b9050611d9a81611d5a876001016000878152602001908152602001600020600601604051806020016040529081600082015481525050612653565b604080516020810190915290815295945050505050565b611db9612d62565b611dc1612d79565b611dd1848463ffffffff6119e516565b9050611ddb612d62565b611deb858563ffffffff611cbb16565b90506000611dff868663ffffffff61187116565b9050611e09612d62565b6040518060400160405280600115158152602001611e2784306126a3565b90529050611e33612d62565b611e3b612d62565b611e458587612748565b9092509050611e6a82611e5e858463ffffffff6127f016565b9063ffffffff6127f016565b9998505050505050505050565b805173ffffffffffffffffffffffffffffffffffffffff1660009081526002929092016020908152604080842092820151845291905290206001015460ff1690565b73ffffffffffffffffffffffffffffffffffffffff8116611ed957600080fd5b600b5460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b611f6f612d4f565b611f77612d62565b611f87858563ffffffff611cbb16565b9050611f91612d62565b611f99612d62565b611fa38386612748565b91509150611faf612d4f565b600087815260018901602052604090206004015473ffffffffffffffffffffffffffffffffffffffff1663e8177dcf611fee8a8a63ffffffff61187116565b846020015186602001516040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161203293929190613c93565b60206040518083038186803b15801561204a57600080fd5b505afa15801561205e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061208291908101906134cc565b98975050505050505050565b826108125761209c8261280a565b7f3a200000000000000000000000000000000000000000000000000000000000006120c68361280a565b6040516020016120d893929190613be4565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a000000000000000000000000000000000000000000000000000000000825261213691600401613d1e565b60405180910390fd5b612147612e80565b60405180602001604052808360405190808252806020026020018201604052801561218c57816020015b612179612e93565b8152602001906001900390816121715790505b50905292915050565b602001516fffffffffffffffffffffffffffffffff161590565b60006121c1848363ffffffff61290516565b156121ce57506000611962565b6121de838363ffffffff611ac116565b84518051849081106121ec57fe5b602090810291909101810151604090810192909252600084815260018601909152206007015460ff161561227f5760018460000151838151811061222c57fe5b6020908102919091010151901515905261224c838363ffffffff611cbb16565b51845180518490811061225b57fe5b6020908102919091018101516fffffffffffffffffffffffffffffffff9092169101525b5060019392505050565b612291612d4f565b612299612d4f565b6122a1612d4f565b6122a9612d4f565b60006122b487612933565b905060005b818110156123cd576122d1888263ffffffff61290516565b6122da576123c5565b6122e2612d62565b6122f38b8b8463ffffffff61293816565b90506122fe816129a7565b1561230957506123c5565b600061233061231e8b8563ffffffff6129af16565b5160208401519063ffffffff6129d916565b905061233a612d4f565b612342612a00565b9050891561237a57600084815260018e0160209081526040918290208251918201909252600590910154815261237790612653565b90505b8251156123a35761239c61238e8383612a22565b88519063ffffffff612a3b16565b87526123c1565b6123be6123b0838361268a565b87519063ffffffff612a3b16565b86525b5050505b6001016122b9565b50919890975095505050505050565b6123e4612d79565b6123ec612d62565b6123f4612d62565b6123fe8588612748565b91509150600061240c612a4d565b905060006124446124368a6040015163ffffffff168463ffffffff16612a5d90919063ffffffff16565b89519063ffffffff6129d916565b90506000612451856129a7565b1561245e57506000612490565b612468828861268a565b90508460200151846020015110156124905761248d81856020015187602001516125e4565b90505b8181111561249a57fe5b60408051606081019091528a5181906124e3906124de906bffffffffffffffffffffffff166124d28188670de0b6b3a76400006125e4565b9063ffffffff612a3b16565b612a72565b6bffffffffffffffffffffffff908116825260208d81015192019161251a916124de91166124d28187670de0b6b3a76400006125e4565b6bffffffffffffffffffffffff1681526020018463ffffffff1681525095505050505050949350505050565b836125de576125548361280a565b7f3a2000000000000000000000000000000000000000000000000000000000000061257e8461280a565b7f203c0000000000000000000000000000000000000000000000000000000000006125a885612ad0565b6040516120d89594939291907f3e0000000000000000000000000000000000000000000000000000000000000090602001613c0c565b50505050565b6000611c02826125fa868663ffffffff6129d916565b9063ffffffff612bfe16565b6000831580612613575082155b1561262a57612623600083612bfe565b9050611962565b611c0260016124d2846125fa836126478a8a63ffffffff6129d916565b9063ffffffff612a5d16565b61265b612d4f565b60408051602081019091528251819061268290670de0b6b3a764000063ffffffff612a3b16565b905292915050565b6000610c09838360000151670de0b6b3a76400006125e4565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8416906370a08231906126f8908590600401613c6a565b60206040518083038186803b15801561271057600080fd5b505afa158015612724573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c099190810190613508565b612750612d62565b612758612d62565b612760612d62565b5060408051808201909152600181526020858101516fffffffffffffffffffffffffffffffff1690820152612793612d62565b50604080518082019091526000815285516fffffffffffffffffffffffffffffffff1660208201526127c3612d62565b6127cd8387611c0a565b90506127d7612d62565b6127e18388611c0a565b91989197509095505050505050565b6127f8612d62565b610c098361280584612c20565b612c47565b6060808260405160200161281e9190613bcf565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052905060205b80156128ee5781517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091019082908290811061288a57fe5b6020910101517f010000000000000000000000000000000000000000000000000000000000000090819004027fff0000000000000000000000000000000000000000000000000000000000000016156128e9576001018152905061082c565b612851565b505060408051600081526020810190915292915050565b60008260000151828151811061291757fe5b6020026020010151604001516000015160001415905092915050565b515190565b612940612d62565b612948612d62565b61295985858563ffffffff61196916565b905061296481612195565b1561297957612971612cd9565b915050611962565b612981612d79565b612991868563ffffffff6119e516565b905061299d8282611c0a565b9695505050505050565b602001511590565b6129b7612d4f565b82518051839081106129c557fe5b602002602001015160400151905092915050565b6000826129e857506000610c0c565b828202828482816129f557fe5b0414610c0957600080fd5b612a08612d4f565b506040805160208101909152670de0b6b3a7640000815290565b6000610c0983670de0b6b3a764000084600001516125e4565b600082820183811015610c0957600080fd5b6000612a5842612cf9565b905090565b600082821115612a6c57600080fd5b50900390565b6000816108296bffffffffffffffffffffffff821682147f4d617468000000000000000000000000000000000000000000000000000000007f556e73616665206361737420746f2075696e743936000000000000000000000061208e565b606081612b11575060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015261082c565b8160005b8115612b2957600101600a82049150612b15565b6060816040519080825280601f01601f191660200182016040528015612b56576020820181803883390190505b508593509050815b8015612bf5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01600a84066030017f010000000000000000000000000000000000000000000000000000000000000002828281518110612bbb57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a84049350612b5e565b50949350505050565b6000808211612c0c57600080fd5b6000828481612c1757fe5b04949350505050565b612c28612d62565b5060408051808201909152815115815260208083015190820152919050565b612c4f612d62565b612c57612d62565b8251845115159015151415612c8a5783511515815260208085015190840151612c809190612a3b565b6020820152610c09565b8260200151846020015110612cb35783511515815260208085015190840151612c809190612a5d565b82511515815260208084015190850151612ccd9190612a5d565b60208201529392505050565b612ce1612d62565b50604080518082019091526000808252602082015290565b60008161082963ffffffff821682147f4d617468000000000000000000000000000000000000000000000000000000007f556e73616665206361737420746f2075696e743332000000000000000000000061208e565b6040518060200160405280600081525090565b604080518082019091526000808252602082015290565b604080516060810182526000808252602082018190529181019190915290565b6040518060800160405280612dac612d4f565b8152602001612db9612d4f565b8152602001612dc6612d4f565b8152602001612dd3612d4f565b905290565b604051806101600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001612e09612d62565b8152602001612e16612d79565b81526000602082018190526040820152606001612e31612d4f565b8152602001612e3e612d4f565b8152600060209091015290565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b6040518060200160405280606081525090565b6040805160608101825260008082526020820152908101612dd3612d4f565b6000610c098235614015565b600082601f830112612ecf57600080fd5b8135612ee2612edd82613f9b565b613f74565b81815260209384019390925082018360005b83811015612f205781358601612f0a888261308d565b8452506020928301929190910190600101612ef4565b5050505092915050565b600082601f830112612f3b57600080fd5b8135612f49612edd82613f9b565b91508181835260208401935060208101905083856040840282011115612f6e57600080fd5b60005b83811015612f205781612f84888261320b565b84525060209092019160409190910190600101612f71565b600082601f830112612fad57600080fd5b8135612fbb612edd82613f9b565b91508181835260208401935060208101905083856040840282011115612fe057600080fd5b60005b83811015612f205781612ff68882613252565b84525060209092019160409190910190600101612fe3565b6000610c098235614020565b600082601f83011261302b57600080fd5b8135613039612edd82613fbc565b9150808252602083016020830185838301111561305557600080fd5b613060838284614139565b50505092915050565b6000610c0982356140ef565b6000610c0982356140fa565b6000610c098235614109565b600061016082840312156130a057600080fd5b6130ab610100613f74565b905060006130b98484613075565b82525060206130ca848483016132b7565b60208301525060406130de84828501613169565b60408301525060c06130f2848285016132b7565b60608301525060e0613106848285016132b7565b60808301525061010061311b84828501612eb2565b60a083015250610120613130848285016132b7565b60c08301525061014082013567ffffffffffffffff81111561315157600080fd5b61315d8482850161301a565b60e08301525092915050565b60006080828403121561317b57600080fd5b6131856080613f74565b90506000613193848461300e565b82525060206131a484848301613081565b60208301525060406131b884828501613081565b60408301525060606131cc848285016132b7565b60608301525092915050565b6000602082840312156131ea57600080fd5b6131f46020613f74565b9050600061320284846132b7565b82525092915050565b60006040828403121561321d57600080fd5b6132276040613f74565b905060006132358484612eb2565b8252506020613246848483016132b7565b60208301525092915050565b60006040828403121561326457600080fd5b61326e6040613f74565b9050600061327c8484612eb2565b82525060206132468484830161300e565b60006020828403121561329f57600080fd5b6132a96020613f74565b9050600061320284846132c3565b6000610c09823561406f565b6000610c09825161406f565b6000602082840312156132e157600080fd5b6000611c028484612eb2565b6000806040838503121561330057600080fd5b600061330c8585612eb2565b925050602061331d85828601612eb2565b9150509250929050565b6000806040838503121561333a57600080fd5b60006133468585612eb2565b925050602061331d8582860161300e565b600080600080600060a0868803121561336f57600080fd5b600061337b8888612eb2565b955050602061338c88828901613069565b945050604061339d88828901613069565b93505060606133ae888289016131d8565b92505060806133bf888289016131d8565b9150509295509295909350565b600080604083850312156133df57600080fd5b823567ffffffffffffffff8111156133f657600080fd5b61340285828601612f2a565b925050602083013567ffffffffffffffff81111561341f57600080fd5b61331d85828601612ebe565b60006020828403121561343d57600080fd5b813567ffffffffffffffff81111561345457600080fd5b611c0284828501612f9c565b60006020828403121561347257600080fd5b6000611c0284846131d8565b60006040828403121561349057600080fd5b6000611c02848461320b565b600080606083850312156134af57600080fd5b60006134bb858561320b565b925050604061331d858286016132b7565b6000602082840312156134de57600080fd5b6000611c02848461328d565b6000602082840312156134fc57600080fd5b6000611c0284846132b7565b60006020828403121561351a57600080fd5b6000611c0284846132c3565b6000806040838503121561353957600080fd5b600061330c85856132b7565b6000806040838503121561355857600080fd5b600061334685856132b7565b6000806040838503121561357757600080fd5b600061358385856132b7565b925050602061331d85828601613069565b600080604083850312156135a757600080fd5b60006135b385856132b7565b925050602061331d858286016131d8565b600080604083850312156135d757600080fd5b60006135e385856132b7565b925050602061331d858286016132b7565b60006136008383613640565b505060200190565b6000610c0983836138ac565b600061362083836139e0565b505060400190565b60006136208383613a9e565b60006136208383613b91565b61364981614015565b82525050565b600061365a82614008565b613664818561400c565b935061366f83614002565b60005b8281101561369a576136858683516135f4565b955061369082614002565b9150600101613672565b5093949350505050565b60006136af82614008565b6136b9818561400c565b9350836020820285016136cb85614002565b60005b848110156137025783830388526136e6838351613608565b92506136f182614002565b6020989098019791506001016136ce565b50909695505050505050565b600061371982614008565b613723818561400c565b935061372e83614002565b60005b8281101561369a57613744868351613614565b955061374f82614002565b9150600101613731565b600061376482614008565b61376e818561400c565b935061377983614002565b60005b8281101561369a5761378f868351613628565b955061379a82614002565b915060010161377c565b60006137af82614008565b6137b9818561400c565b93506137c483614002565b60005b8281101561369a576137da868351613634565b95506137e582614002565b91506001016137c7565b61364981614020565b61364961380482614025565b61406f565b6136496138048261404a565b6136496138048261406f565b600061382c82614008565b613836818561082c565b9350613846818560208601614145565b9290920192915050565b600061385b82614008565b613865818561400c565b9350613875818560208601614145565b61387e81614171565b9093019392505050565b613649816140ef565b61364981614118565b61364981614123565b6136498161412e565b80516000906101608401906138c18582613891565b5060208301516138d46020860182613bab565b5060408301516138e7604086018261394e565b5060608301516138fa60c0860182613bab565b50608083015161390d60e0860182613bab565b5060a0830151613921610100860182613640565b5060c0830151613935610120860182613bab565b5060e0830151848203610140860152611ab88282613850565b8051608083019061395f84826137ef565b506020820151613972602085018261389a565b506040820151613985604085018261389a565b5060608201516125de6060850182613bab565b805160208301906125de8482613bab565b805160608301906139ba8482613bc6565b5060208201516139cd6020850182613bc6565b5060408201516125de6040850182613bb4565b805160408301906139f18482613640565b5060208201516125de6020850182613bab565b8051610160830190613a168482613640565b506020820151613a296020850182613b80565b506040820151613a3c60608501826139a9565b506060820151613a4f60c0850182613888565b506080820151613a6260e0850182613888565b5060a0820151613a76610100850182613998565b5060c0820151613a8a610120850182613998565b5060e08201516125de6101408501826137ef565b80516040830190613aaf84826137ef565b5060208201516125de6020850182613ba2565b805160c0830190613ad38482613bbd565b506020820151613ae66020850182613bbd565b506040820151613af96040850182613bbd565b506060820151613b0c6060850182613bbd565b506080820151613b1f6080850182613bbd565b5060a08201516125de60a0850182613ba2565b80516080830190613b438482613998565b506020820151613b566020850182613998565b506040820151613b696040850182613998565b5060608201516125de6060850182613998565b9052565b80516040830190613aaf8482613ba2565b805160408301906139f184826137ef565b6136498161409a565b6136498161406f565b613649816140c8565b613649816140d1565b613649816140de565b6000613bdb8284613815565b50602001919050565b6000613bf08286613821565b9150613bfc8285613809565b600282019150611ab88284613821565b6000613c188289613821565b9150613c248288613809565b600282019150613c348287613821565b9150613c408286613809565b600282019150613c508285613821565b9150613c5c82846137f8565b506001019695505050505050565b60208101610c0c8284613640565b60408101613c868285613640565b61196260208301846137ef565b60608101613ca18286613640565b613cae6020830185613bab565b611c026040830184613bab565b60608082528101613ccc818661364f565b90508181036020830152613ce08185613759565b90508181036040830152611ab881846137a4565b60208101610c0c82846137ef565b60208101610c0c8284613888565b60208101610c0c82846138a3565b60208082528101610c098184613850565b60208101610c0c8284613998565b60608101610c0c82846139a9565b6101608101610c0c8284613a04565b6102008101613d698287613a04565b613d776101608301866139a9565b613d856101c0830185613998565b611ab86101e0830184613998565b60408101610c0c8284613a9e565b60c08101610c0c8284613ac2565b60808101610c0c8284613b32565b60608101613dcb8286613b7c565b613dd86020830185613640565b611c026040830184613640565b60608101613df38286613b7c565b613e006020830185613640565b611c0260408301846137ef565b60c08101613e1b8289613b7c565b613e286020830188613640565b613e356040830187613888565b613e426060830186613888565b613e4f6080830185613998565b613e5c60a0830184613998565b979650505050505050565b60608101613e758286613b7c565b8181036020830152613e87818561370e565b90508181036040830152611ab881846136a4565b60408101613ea98285613b7c565b6119626020830184613998565b60608101613ec48286613b7c565b613dd86020830185613bab565b60608101613edf8286613b7c565b613e006020830185613bab565b60608101613efa8286613b7c565b613f076020830185613bab565b611c026040830184613888565b60608101613f228286613b7c565b613f2f6020830185613bab565b611c026040830184613998565b60408101610c0c8284613b80565b60408101613ea98285613998565b60408101610c0c8284613b91565b60208101610c0c8284613bab565b60405181810167ffffffffffffffff81118282101715613f9357600080fd5b604052919050565b600067ffffffffffffffff821115613fb257600080fd5b5060209081020190565b600067ffffffffffffffff821115613fd357600080fd5b506020601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160190565b60200190565b5190565b90815260200190565b6000610829826140af565b151590565b7fff000000000000000000000000000000000000000000000000000000000000001690565b7fffff0000000000000000000000000000000000000000000000000000000000001690565b90565b60006009821061407e57fe5b5090565b60006002821061407e57fe5b60006003821061407e57fe5b6fffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b63ffffffff1690565b67ffffffffffffffff1690565b6bffffffffffffffffffffffff1690565b600061082982614015565b60006009821061407e57600080fd5b60006002821061407e57600080fd5b600061082982614072565b600061082982614082565b60006108298261408e565b82818337506000910152565b60005b83811015614160578181015183820152602001614148565b838111156125de5750506000910152565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169056fea265627a7a723058202e97c161197e8d0a0ddde7f3dc576ece355bfb2905392a20cb466df6752052cb6c6578706572696d656e74616cf50037",
  "sourceMap": "1015:360:33:-;;;1537:24:30;;;1155:218:33;8:9:-1;5:2;;;30:1;27;20:12;5:2;1155:218:33;;;;;;;;;;;;;;;;;;;;;;515:6:2;:19;;-1:-1:-1;;;;;;515:19:2;524:10;515:19;;;;;549:40;;-1:-1:-1;;;;;582:6:2;;;;;515;;549:40;;515:6;;549:40;576:1:3;560:13;:17;1294:31:33;;;:18;:31;;;;;;;;;;;;;;;-1:-1:-1;1294:31:33;;;;;;;;;1335;;:18;:31;;;;;;;;;;;;;;-1:-1:-1;;1335:31:33;;;-1:-1:-1;;;;;1335:31:33;;;;-1:-1:-1;;;;;;;;1335:31:33;;;;;;;;-1:-1:-1;;;;;;;;1335:31:33;;;;;;;;;;;;;-1:-1:-1;;;;;1335:31:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;1335:31:33;-1:-1:-1;;;;;1335:31:33;;;;;;;;;1015:360;;31:339:-1;;150:4;138:9;133:3;129:19;125:30;122:2;;;168:1;165;158:12;122:2;186:20;201:4;186:20;;;177:29;-1:-1;257:1;288:60;344:3;324:9;288:60;;;264:85;;-1:-1;275:5;116:254;-1:-1;;116:254;409:1196;;538:4;526:9;521:3;517:19;513:30;510:2;;;556:1;553;546:12;510:2;574:20;589:4;574:20;;;565:29;-1:-1;654:1;685:59;740:3;720:9;685:59;;;661:84;;-1:-1;822:2;855:59;910:3;886:22;;;855:59;;;848:4;841:5;837:16;830:85;766:160;987:2;1020:59;1075:3;1066:6;1055:9;1051:22;1020:59;;;1013:4;1006:5;1002:16;995:85;936:155;1153:2;1186:59;1241:3;1232:6;1221:9;1217:22;1186:59;;;1179:4;1172:5;1168:16;1161:85;1101:156;1319:3;1353:59;1408:3;1399:6;1388:9;1384:22;1353:59;;;1346:4;1339:5;1335:16;1328:85;1267:157;1489:3;1523:60;1579:3;1570:6;1559:9;1555:22;1523:60;;;1516:4;1509:5;1505:16;1498:86;1434:161;504:1101;;;;;1644:930;;1773:4;1761:9;1756:3;1752:19;1748:30;1745:2;;;1791:1;1788;1781:12;1745:2;1809:20;1824:4;1809:20;;;1800:29;-1:-1;1886:1;1917:79;1992:3;1972:9;1917:79;;;1893:104;;-1:-1;2071:2;2104:79;2179:3;2155:22;;;2104:79;;;2097:4;2090:5;2086:16;2079:105;2018:177;2253:2;2286:79;2361:3;2352:6;2341:9;2337:22;2286:79;;;2279:4;2272:5;2268:16;2261:105;2205:172;2439:2;2472:80;2548:3;2539:6;2528:9;2524:22;2472:80;;;2465:4;2458:5;2454:16;2447:106;2387:177;1739:835;;;;;2956:122;;3034:39;3065:6;3059:13;3034:39;;;3025:48;3019:59;-1:-1;;;3019:59;3085:122;;3163:39;3194:6;3188:13;3163:39;;3214:120;;3291:38;3321:6;3315:13;3291:38;;3341:517;;;3531:3;3519:9;3510:7;3506:23;3502:33;3499:2;;;3548:1;3545;3538:12;3499:2;3583:1;3600:93;3685:7;3665:9;3600:93;;;3590:103;;3562:137;3730:3;3749:93;3834:7;3825:6;3814:9;3810:22;3749:93;;;3739:103;;3709:139;3493:365;;;;;;3865:256;3927:2;3921:9;3953:17;;;-1:-1;;;;;4013:34;;4049:22;;;4010:62;4007:2;;;4085:1;4082;4075:12;4007:2;4101;4094:22;3905:216;;-1:-1;3905:216;4128:120;-1:-1;;;;;4197:46;;4180:68;4255:79;4324:5;4307:27;4341:103;-1:-1;;;;;4409:30;;4392:52;;1015:360:33;;;;;;",
  "deployedSourceMap": "1015:360:33:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1015:360:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5012:292:29;;;;;;;;;:::i;:::-;;16905:174:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4126:210;;;;;;;;;:::i;:::-;;;;;;;;4013:292:29;;;;;;;;;:::i;13515:255:30:-;;;;;;;;;:::i;:::-;;;;;;;;;5809:225;;;;;;;;;:::i;:::-;;;;;;;;6214:234;;;;;;;;;:::i;7295:236::-;;;;;;;;;:::i;:::-;;;;;;;;3835:125;;;:::i;:::-;;;;;;;;2237:317:29;;;;;;;;;:::i;6644:258::-;;;;;;;;;:::i;5878:238::-;;;;;;;;;:::i;6285:240::-;;;;;;;;;:::i;16408:202:30:-;;;;;;;;;:::i;11974:255::-;;;;;;;;;:::i;:::-;;;;;;;;4520:292:29;;;;;;;;;:::i;1795:150:30:-;;;:::i;5378:257::-;;;;;;;;;:::i;:::-;;;;;;;;7795:213;;;;;;;;;:::i;3154:143::-;;;:::i;:::-;;;;;;;;15195:761;;;;;;;;;:::i;:::-;;;;;;;;;;1347:137:2;;;:::i;2869:162:30:-;;;:::i;1886:371:32:-;;;;;;;;;:::i;8198:219:30:-;;;;;;;;;:::i;659:77:2:-;;;:::i;979:90::-;;;:::i;1830:313:29:-;;;;;;;;;:::i;2710:469::-;;;;;;;;;:::i;2053:260:31:-;;;;;;;;;:::i;10561:491:30:-;;;;;;;;;:::i;:::-;;;;;;;;;;;5488:224:29;;;;;;;;;:::i;2164:162:30:-;;;:::i;12457:369::-;;;;;;;;;:::i;:::-;;;;;;;;4540:223;;;;;;;;;:::i;:::-;;;;;;;;9327:346;;;;;;;;;:::i;11460:226::-;;;;;;;;;:::i;4949:223::-;;;;;;;;;:::i;13019:184::-;;;;;;;;;:::i;:::-;;;;;;;;2543:152;;;:::i;3669:277:29:-;;;;;;;;;:::i;3531:143:30:-;;;:::i;:::-;;;;;;;;9889:211;;;;;;;;;:::i;:::-;;;;;;;;3344:261:29;;;;;;;;;:::i;7140:269::-;;;;;;;;;:::i;1655:107:2:-;;;;;;;;;:::i;14527:262:30:-;;;;;;;;;:::i;6760:236::-;;;;;;;;;:::i;8602:294::-;;;;;;;;;:::i;5012:292:29:-;863:9:2;:7;:9::i;:::-;855:18;;;;;;993:13:3;:18;;1010:1;993:18;;;;;5186:111:29;;;;;:9;;:31;;:111;;993:13:3;;5252:8:29;;5274:13;;5186:111;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5186:111:29;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5186:111:29;;;;1102:13:3;;1086:12;:29;1078:38;;;;;;883:1:2;5012:292:29;;:::o;16905:174:30:-;17011:4;17038:34;17011:4;17063:8;17038:34;:24;:34;:::i;:::-;17031:41;;16905:174;;;;:::o;4126:210::-;4234:7;4257:29;4277:8;4257:19;:29::i;:::-;4303:26;:7;4320:8;4303:26;:16;:26;:::i;4013:292:29:-;863:9:2;:7;:9::i;:::-;855:18;;;;;;993:13:3;:18;;1010:1;993:18;;;;;4185:113:29;;;;;:9;;:32;;:113;;993:13:3;;4252:8:29;;4274:14;;4185:113;;;;13515:255:30;13629:21;;:::i;:::-;13652;;:::i;:::-;13696:67;13721:7;13757:5;13696:24;:67::i;:::-;13689:74;;;;13515:255;;;:::o;5809:225::-;5916:12;5944:29;5964:8;5944:19;:29::i;:::-;-1:-1:-1;5990:7:30;:25;;;:15;:25;;;;;:37;;;;;;5809:225::o;6214:234::-;6324:15;6355:29;6375:8;6355:19;:29::i;:::-;-1:-1:-1;6401:7:30;:25;;;:15;:25;;;;;:40;;;;;;6214:234::o;7295:236::-;7404:19;;:::i;:::-;7439:29;7459:8;7439:19;:29::i;:::-;-1:-1:-1;7485:7:30;:25;;;:15;:25;;;;;;;;;7478:46;;;;;;;;7485:39;;;;7478:46;;;;7295:236::o;3835:125::-;3905:7;3935:18;3835:125;:::o;2237:317:29:-;2404:7;863:9:2;:7;:9::i;:::-;855:18;;;;;;993:13:3;:18;;1010:1;993:18;;;;;2434:113:29;;;;;:9;;:40;;:113;;993:13:3;;2509:5:29;;2528:9;;2434:113;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2434:113:29;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2434:113:29;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2434:113:29;;;;;;;;;2427:120;;1102:13:3;;1086:12;:29;1078:38;;;;;;883:1:2;2237:317:29;;;;:::o;6644:258::-;863:9:2;:7;:9::i;:::-;855:18;;;;;;993:13:3;:18;;1010:1;993:18;;;;;6800:95:29;;;;;:9;;:34;;:95;;993:13:3;;6869:16:29;;6800:95;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6800:95:29;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6800:95:29;;;;1102:13:3;;1086:12;:29;1078:38;;;;;;883:1:2;6644:258:29;:::o;5878:238::-;863:9:2;:7;:9::i;:::-;855:18;;;;;;993:13:3;:18;;1010:1;993:18;;;;;6023:86:29;;;;;:9;;:35;;:86;;993:13:3;;6093:6:29;;6023:86;;;;6285:240;863:9:2;:7;:9::i;:::-;855:18;;;;;;993:13:3;:18;;1010:1;993:18;;;;;6431:87:29;;;;;:9;;:30;;:87;;993:13:3;;6496:12:29;;6431:87;;;;16408:202:30;16536:4;16563:40;16536:4;16587:5;16594:8;16563:40;:23;:40;:::i;:::-;16556:47;;16408:202;;;;;:::o;11974:255::-;12111:16;;:::i;:::-;12143:29;12163:8;12143:19;:29::i;:::-;12189:33;:7;12204;12213:8;12189:33;:14;:33;:::i;4520:292:29:-;863:9:2;:7;:9::i;:::-;855:18;;;;;;993:13:3;:18;;1010:1;993:18;;;;;4694:111:29;;;;;:9;;:31;;:111;;993:13:3;;4760:8:29;;4782:13;;4694:111;;;;1795:150:30;1866:19;;:::i;:::-;-1:-1:-1;1901:37:30;;;;;;;;;1908:18;1901:37;;;1795:150;:::o;5378:257::-;5486:21;;:::i;:::-;5523:29;5543:8;5523:19;:29::i;:::-;5569:59;5591:8;5601:26;:7;5591:8;5601:26;:16;:26;:::i;:::-;5569:7;;:59;;:21;:59;:::i;7795:213::-;7900:4;7920:29;7940:8;7920:19;:29::i;:::-;-1:-1:-1;7966:7:30;:25;;;:15;:25;;;;;:35;;;;;;7795:213::o;3154:143::-;3224:25;;:::i;:::-;-1:-1:-1;3265:25:30;;;;;;;;3272:18;3265:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3265:25:30;;;;;;;;;;;;;;;;;;;;3154:143;:::o;15195:761::-;15324:16;15354:18;15386;15429;15450:7;:18;;;15429:39;;15478:23;15518:10;15504:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;15504:25:30;;15478:51;;15539:23;15581:10;15565:27;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;15539:53;;15602:23;15644:10;15628:27;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;15602:53:30;-1:-1:-1;15671:9:30;15666:200;15690:10;15686:1;:14;15666:200;;;15733:24;15755:1;15733:21;:24::i;:::-;15721:6;15728:1;15721:9;;;;;;;;;;;;;:36;;;;;;;;;;;15781:25;15795:7;15804:1;15781:13;:25::i;:::-;15771:4;15776:1;15771:7;;;;;;;;;;;;;:35;;;;15830:25;15844:7;15853:1;15830:13;:25::i;:::-;15820:4;15825:1;15820:7;;;;;;;;;;;;;;;;;:35;15702:3;;15666:200;;;-1:-1:-1;15897:6:30;;15917:4;;-1:-1:-1;15897:6:30;;-1:-1:-1;15195:761:30;-1:-1:-1;;;15195:761:30:o;1347:137:2:-;863:9;:7;:9::i;:::-;855:18;;;;;;1429:6;;1408:40;;1445:1;;1408:40;1429:6;;1408:40;;1445:1;;1408:40;1458:6;:19;;;;;;1347:137::o;2869:162:30:-;2945:21;;:::i;:::-;-1:-1:-1;2982:42:30;;;;;;;;;2989:35;2982:42;;;2869:162;:::o;1886:371:32:-;1983:9;1978:273;2002:4;:11;1998:1;:15;1978:273;;;2034:16;2053:4;2058:1;2053:7;;;;;;;;;;;;;;:16;;;2034:35;;2083:12;2098:4;2103:1;2098:7;;;;;;;;;;;;;;;;;;;:15;;;2145:10;2127:7;:29;;;:17;:29;;;;;;;:39;;;;;;;;;;:49;;;;;;;;;;2195:45;;2098:15;;-1:-1:-1;2195:45:32;;;;2127:39;;2098:15;;2195:45;;;;;;;;;;-1:-1:-1;;2015:3:32;;1978:273;;8198:219:30;8299:21;;:::i;:::-;8336:29;8356:8;8336:19;:29::i;:::-;8382:28;:7;8401:8;8382:28;:18;:28;:::i;659:77:2:-;723:6;;;;659:77;:::o;979:90::-;1056:6;;;;1042:10;:20;;979:90::o;1830:313:29:-;1995:7;863:9:2;:7;:9::i;:::-;855:18;;;;;;993:13:3;:18;;1010:1;993:18;;;;;2025:111:29;;;;;:9;;:35;;:111;;993:13:3;;2095:8:29;;2117:9;;2025:111;;;;2710:469;863:9:2;:7;:9::i;:::-;855:18;;;;;;993:13:3;:18;;1010:1;993:18;;;;;2991:181:29;;;;;:9;;:24;;:181;;993:13:3;;3050:5:29;;3069:11;;3094:14;;3122:13;;3149;;2991:181;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2991:181:29;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2991:181:29;;;;1102:13:3;;1086:12;:29;1078:38;;;;;;883:1:2;2710:469:29;;;;;:::o;2053:260:31:-;993:13:3;:18;;1010:1;993:18;;;;;2211:95:31;;;;;:13;;:21;;:95;;993:13:3;;2267:8:31;;2289:7;;2211:95;;;;10561:491:30;10678:21;;:::i;:::-;10713;;:::i;:::-;10748;;:::i;:::-;10783:20;;:::i;:::-;10828:29;10848:8;10828:19;:29::i;:::-;10888:19;10898:8;10888:9;:19::i;:::-;10921:31;10943:8;10921:21;:31::i;:::-;10966:24;10981:8;10966:14;:24::i;:::-;11004:31;11026:8;11004:21;:31::i;:::-;10867:178;;;;;;;;10561:491;;;;;:::o;5488:224:29:-;863:9:2;:7;:9::i;:::-;855:18;;;;;;993:13:3;:18;;1010:1;993:18;;;;;5626:79:29;;;;;:9;;:29;;:79;;993:13:3;;5690:5:29;;5626:79;;;;2164:162:30;2241:19;;:::i;:::-;-1:-1:-1;2276:43:30;;;;;;;;;2283:36;2276:43;;;2164:162;:::o;12457:369::-;12594:16;;:::i;:::-;12626:29;12646:8;12626:19;:29::i;:::-;12672:147;12703:33;:7;12718;12727:8;12703:33;:14;:33;:::i;:::-;12750:59;12772:8;12782:26;:7;12772:8;12782:26;:16;:26;:::i;12750:59::-;12672:17;:147::i;4540:223::-;4644:21;;:::i;:::-;4681:29;4701:8;4681:19;:29::i;:::-;4727;:7;4747:8;4727:29;:19;:29;:::i;9327:346::-;9475:19;;:::i;:::-;9510:33;9530:12;9510:19;:33::i;:::-;9553;9573:12;9553:19;:33::i;:::-;9603:63;:7;9639:12;9653;9603:63;:35;:63;:::i;11460:226::-;11565:16;;:::i;:::-;11597:29;11617:8;11597:19;:29::i;:::-;11643:36;:7;11670:8;11643:36;:26;:36;:::i;4949:223::-;5056:21;;:::i;:::-;5093:29;5113:8;5093:19;:29::i;:::-;5139:26;:7;5156:8;5139:26;:16;:26;:::i;13019:184::-;13133:14;13170:26;13133:14;13188:7;13170:26;:17;:26;:::i;2543:152::-;2615:19;;:::i;:::-;-1:-1:-1;2650:38:30;;;;;;;;;2657:31;2650:38;;;2543:152;:::o;3669:277:29:-;863:9:2;:7;:9::i;:::-;855:18;;;;;;993:13:3;:18;;1010:1;993:18;;;;;3832:107:29;;;;;:9;;:29;;:107;;993:13:3;;3896:8:29;;3918:11;;3832:107;;;;3531:143:30;3601:25;;:::i;:::-;-1:-1:-1;3642:25:30;;;;;;;;3649:18;3642:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3531:143::o;9889:211::-;9985:21;;:::i;:::-;10022:29;10042:8;10022:19;:29::i;:::-;-1:-1:-1;10068:7:30;:25;;;:15;:25;;;;;;;;;10061:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9889:211::o;3344:261:29:-;863:9:2;:7;:9::i;:::-;855:18;;;;;;993:13:3;:18;;1010:1;993:18;;;;;3495:103:29;;;;;:9;;:27;;:103;;993:13:3;;3557:8:29;;3579:9;;3495:103;;;;7140:269;863:9:2;:7;:9::i;:::-;855:18;;;;;;993:13:3;:18;;1010:1;993:18;;;;;7295:107:29;;;;;:9;;:32;;:107;;993:13:3;;7362:8:29;;7384;;7295:107;;;;1655::2;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;14527:262:30:-;14649:21;;:::i;:::-;14672;;:::i;:::-;14716:66;14741:7;14777:4;14716:24;:66::i;6760:236::-;6869:19;;:::i;:::-;6904:29;6924:8;6904:19;:29::i;:::-;-1:-1:-1;6950:7:30;:25;;;:15;:25;;;;;;;;;6943:46;;;;;;;;6950:39;;;;6943:46;;;;6760:236::o;8602:294::-;8710:20;;:::i;:::-;8746:29;8766:8;8746:19;:29::i;:::-;8792:97;8831:8;8853:26;:7;8831:8;8853:26;:16;:26;:::i;:::-;8792:7;;:97;;:25;:97;:::i;11146:207:53:-;11315:31;;11288:4;11315:31;;;:21;;;;;:31;;;;;;;;;11146:207::o;17198:220:30:-;17302:109;17339:7;:18;;;17328:8;:29;17371:4;;17302:109;:12;:109::i;4217:200:53:-;4351:7;4381:23;;;:13;;;;;:23;;;;;:29;;;;4217:200::o;17509:610:30:-;17665:21;;:::i;:::-;17688;;:::i;:::-;17725:18;17746;17801:30;;:::i;:::-;17834:24;17847:10;17834:12;:24::i;:::-;17801:57;-1:-1:-1;17873:9:30;17868:167;17892:10;17888:1;:14;17868:167;;;17928:35;:26;:7;17943;17952:1;17928:26;:14;:26;:::i;:::-;:33;:35::i;:::-;17923:102;;17983:27;:5;17999:7;18008:1;17983:27;:15;:27;:::i;:::-;;17923:102;17904:3;;17868:167;;;-1:-1:-1;18052:60:30;:7;18077;18086:5;18093:18;18052:60;:24;:60;:::i;:::-;18045:67;;;;;;17509:610;;;;;:::o;11359:230:53:-;11550:22;;;;11523:4;11550:22;;;:15;;;:22;;;;;;;;:32;;;;;;;;;;;;11359:230;;;;;;:::o;5908:279::-;6077:16;;:::i;:::-;-1:-1:-1;6131:13:53;;6116:29;;;;;;:14;;;:29;;;;;;;;6146:14;;;;6116:45;;;;;;;:64;;;;;;;;;6109:71;;;;;;;;;;;;;;;;;;;;;;;;;;5908:279;;;;;:::o;4649:214::-;4783:21;;:::i;:::-;-1:-1:-1;4827:23:53;;;;:13;;;;;:23;;;;;;;;;4820:36;;;;;;;4827:29;;;;4820:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4649:214::o;7203:463::-;7379:21;;:::i;:::-;7416:25;;:::i;:::-;7444:40;:5;7468:8;7478:5;7444:40;:23;:40;:::i;:::-;7416:68;-1:-1:-1;7502:157:53;7542:5;7416:68;7579:27;:5;7597:8;7579:27;:17;:27;:::i;:::-;7502:157;;;;;;;;;7620:29;;;7502:157;;;:26;:157::i;:::-;7495:164;7203:463;-1:-1:-1;;;;;7203:463:53:o;8324:492::-;8460:21;;:::i;:::-;8497:19;8532:23;;;:13;;;:23;;;;;:35;;;;;8578:27;;:::i;:::-;8608:15;;;;8624:24;:5;8639:8;8624:24;:14;:24;:::i;:::-;8608:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8608:41:53;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8608:41:53;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8608:41:53;;;;;;;;;8685:11;;8578:71;;-1:-1:-1;8659:128:53;;8685:16;;8715:4;8659:128;8769:8;8659:12;:128::i;:::-;8804:5;8324:492;-1:-1:-1;;;;8324:492:53:o;3844:552:49:-;3975:16;;:::i;:::-;4036:11;;;;4062:10;;4028:20;;;;;4058:332;;;4095:119;;;;;;;;;4129:4;4095:119;;;4180:12;;;;4095:119;;;;4158:41;;:10;;:41;;1197:6;4158:41;:21;:41;:::i;:::-;4095:119;;;4088:126;;;;;4058:332;4252:127;;;;;;;;;-1:-1:-1;4252:127:49;;4345:12;;4252:127;;;;4316:48;;:10;;:48;;1197:6;4316:48;:28;:48;:::i;4423:220:53:-;4560:21;;:::i;:::-;-1:-1:-1;4604:23:53;;;;:13;;;;:23;;;;;;;;;4597:39;;;;;;;;4604:32;;;4597:39;;;;;;;;;;;;;;;;4423:220;;;;:::o;6647:550::-;6834:19;;:::i;:::-;6886:34;;;;:40;6869:14;6981:27;;;6886:34;6981:13;;:27;;;;;;;;;6965:58;;;;;;;;6981:41;;6965:58;;;6886:40;6945:79;;6886:40;;6965:58;;:15;:58::i;:::-;6945:11;:79::i;:::-;6936:88;;7043:79;7055:6;7063:58;7079:5;:13;;:27;7093:12;7079:27;;;;;;;;;;;:41;;7063:58;;;;;;;;;;;;;;;;;:15;:58::i;7043:79::-;7139:51;;;;;;;;;;;;;6647:550;-1:-1:-1;;;;;6647:550:53:o;4869:785::-;5013:16;;:::i;:::-;5045:27;;:::i;:::-;5075:24;:5;5090:8;5075:24;:14;:24;:::i;:::-;5045:54;;5109:30;;:::i;:::-;5142:27;:5;5160:8;5142:27;:17;:27;:::i;:::-;5109:60;-1:-1:-1;5180:13:53;5196:24;:5;5211:8;5196:24;:14;:24;:::i;:::-;5180:40;;5231:27;;:::i;:::-;5261:103;;;;;;;;5291:4;5261:103;;;;;;5316:37;5332:5;5347:4;5316:15;:37::i;:::-;5261:103;;5231:133;-1:-1:-1;5389:26:53;;:::i;:::-;5429;;:::i;:::-;5468:39;5491:8;5501:5;5468:22;:39::i;:::-;5375:132;;-1:-1:-1;5375:132:53;-1:-1:-1;5607:40:53;5375:132;5607:25;:10;5375:132;5607:25;:14;:25;:::i;:::-;:29;:40;:29;:40;:::i;:::-;5600:47;4869:785;-1:-1:-1;;;;;;;;;4869:785:53:o;5660:242::-;5858:13;;5843:29;;5806:14;5843:29;;;:14;;;;;:29;;;;;;;;5873:14;;;;5843:45;;;;;;;:52;;;;;;5660:242::o;1906:183:2:-;1979:22;;;1971:31;;;;;;2038:6;;2017:38;;;;;;;2038:6;;2017:38;;2038:6;;2017:38;2065:6;:17;;;;;;;;;;;;;;;1906:183::o;7672:646:53:-;7852:20;;:::i;:::-;7888:30;;:::i;:::-;7921:27;:5;7939:8;7921:27;:17;:27;:::i;:::-;7888:60;;7972:26;;:::i;:::-;8012;;:::i;:::-;8051:39;8074:8;8084:5;8051:22;:39::i;:::-;7958:132;;;;8101:25;;:::i;:::-;8129:23;;;;:13;;;:23;;;;;:38;;;;;:54;8197:24;8129:5;8143:8;8197:24;:14;:24;:::i;:::-;8235:9;:15;;;8264:9;:15;;;8129:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8129:160:53;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8129:160:53;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8129:160:53;;;;;;;;;8101:188;7672:646;-1:-1:-1;;;;;;;;7672:646:53:o;1293:426:52:-;1427:4;1422:291;;1541:24;1560:4;1541:18;:24::i;:::-;1591:5;1622:26;1641:6;1622:18;:26::i;:::-;1499:171;;;;;;;;;;;;;;;22:32:-1;26:21;;;22:32;6:49;;1499:171:52;;;;1447:255;;;;;;;;;;;;;;;;;1286:219:45;1383:18;;:::i;:::-;1424:74;;;;;;;;1476:10;1459:28;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;1424:74:45;;1417:81;1286:219;-1:-1:-1;;1286:219:45:o;3594:137:56:-;3712:7;;;:12;;;;3594:137::o;1711:549:45:-;1880:4;1904:25;:5;1920:8;1904:25;:15;:25;:::i;:::-;1900:68;;;-1:-1:-1;1952:5:45;1945:12;;1900:68;2009:26;:5;2026:8;2009:26;:16;:26;:::i;:::-;1977:13;;:23;;1991:8;;1977:23;;;;;;;;;;;;;;;;;:29;;;;:58;;;;2049:23;;;;:13;;;:23;;;;:33;;;;;2045:188;;;2134:4;2098:5;:13;;;2112:8;2098:23;;;;;;;;;;;;;;;;;;:40;;;;;2188:27;:5;2206:8;2188:27;:17;:27;:::i;:::-;:34;2152:13;;:23;;2166:8;;2152:23;;;;;;;;;;;;;;;;;:70;;;;:33;;:70;2045:188;-1:-1:-1;2249:4:45;1711:549;;;;;:::o;8822:1261:53:-;9048:21;;:::i;:::-;9071;;:::i;:::-;9108:33;;:::i;:::-;9151;;:::i;:::-;9195:18;9216:21;:5;:19;:21::i;:::-;9195:42;-1:-1:-1;9252:9:53;9247:786;9271:10;9267:1;:14;9247:786;;;9307:18;:5;9323:1;9307:18;:15;:18;:::i;:::-;9302:66;;9345:8;;9302:66;9382:24;;:::i;:::-;9409;:5;9422:7;9431:1;9409:24;:12;:24;:::i;:::-;9382:51;;9452:16;:7;:14;:16::i;:::-;9448:63;;;9488:8;;;9448:63;9525:18;9546:42;9564:17;:5;9579:1;9564:17;:14;:17;:::i;:::-;:23;9546:13;;;;;:42;:17;:42;:::i;:::-;9525:63;;9602:26;;:::i;:::-;9631:13;:11;:13::i;:::-;9602:42;;9662:18;9658:113;;;9725:16;;;;:13;;;:16;;;;;;;;;9709:47;;;;;;;;9725:30;;;;9709:47;;;;;:15;:47::i;:::-;9700:56;;9658:113;9789:12;;9785:238;;;9841:54;9863:31;9875:10;9887:6;9863:11;:31::i;:::-;9841:17;;;:54;:21;:54;:::i;:::-;9821:74;;9785:238;;;9954:54;9976:31;9988:10;10000:6;9976:11;:31::i;:::-;9954:17;;;:54;:21;:54;:::i;:::-;9934:74;;9785:238;9247:786;;;;9283:3;;9247:786;;;-1:-1:-1;10051:11:53;;10064;;-1:-1:-1;8822:1261:53;-1:-1:-1;;;;;;8822:1261:53:o;2228:1299:49:-;2444:12;;:::i;:::-;2486:26;;:::i;:::-;2526;;:::i;:::-;2565:30;2579:8;2589:5;2565:13;:30::i;:::-;2472:123;;;;2653:18;2674;:16;:18::i;:::-;2653:39;;2702:22;2727:58;2742:42;2767:5;:16;;;2742:42;;2750:11;2742:20;;:24;;:42;;;;:::i;:::-;2727:10;;;:58;:14;:58;:::i;:::-;2702:83;;2843:22;2879:23;2892:9;2879:12;:23::i;:::-;2875:328;;;-1:-1:-1;2935:1:49;2875:328;;;2984:41;2996:14;3012:12;2984:11;:41::i;:::-;2967:58;;3061:9;:15;;;3043:9;:15;;;:33;3039:154;;;3113:65;3129:14;3145:9;:15;;;3162:9;:15;;;3113;:65::i;:::-;3096:82;;3039:154;3237:14;3219;:32;;3212:40;;;;3270:250;;;;;;;;;3354:12;;3270:250;;3298:76;;:69;;;;:51;:69;3328:14;1197:6;3298:15;:51::i;:::-;:55;:69;:55;:69;:::i;:::-;:74;:76::i;:::-;3270:250;;;;;;;3452:12;;;;3270:250;;;3396:76;;:69;;;:51;:69;3426:14;1197:6;3396:15;:51::i;:76::-;3270:250;;;;;;3498:11;3270:250;;;;;3263:257;;;;;;;2228:1299;;;;;;:::o;1725:561:52:-;1885:4;1880:400;;1999:24;2018:4;1999:18;:24::i;:::-;2049:5;2080:26;2099:6;2080:18;:26::i;:::-;2132:6;2164:19;2174:8;2164:9;:19::i;:::-;1957:280;;;;;;;;;2209:6;;1957:280;;;;1880:400;1725:561;;;;:::o;1117:228:50:-;1270:7;1300:38;1326:11;1300:21;:6;1311:9;1300:21;:10;:21;:::i;:::-;:25;:38;:25;:38;:::i;1432:409::-;1592:7;1619:11;;;:29;;-1:-1:-1;1634:14:50;;1619:29;1615:151;;;1727:28;1740:1;1743:11;1727:12;:28::i;:::-;1720:35;;;;1615:151;1782:52;1832:1;1782:45;1815:11;1782:28;1832:1;1782:21;:6;1793:9;1782:21;:10;:21;:::i;:::-;:25;:28;:25;:28;:::i;1290:168:46:-;1383:11;;:::i;:::-;1417:34;;;;;;;;;1431:7;;1417:34;;1431:17;;1013:6;1431:17;:11;:17;:::i;:::-;1417:34;;1410:41;1290:168;-1:-1:-1;;1290:168:46:o;1464:188::-;1577:7;1607:38;1623:6;1631:1;:7;;;1013:6;1607:15;:38::i;1180:185:55:-;1328:30;;;;;1298:7;;1328:23;;;;;;:30;;1352:5;;1328:30;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1328:30:55;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1328:30:55;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1328:30:55;;;;;;;;5147:601:49;5291:16;;:::i;:::-;5309;;:::i;:::-;5341:26;;:::i;:::-;-1:-1:-1;5370:81:49;;;;;;;;;5400:4;5370:81;;;5425:15;;;;5370:81;;;;;;5461:26;;:::i;:::-;-1:-1:-1;5490:82:49;;;;;;;;;-1:-1:-1;5490:82:49;;5546:15;;5490:82;;;;;;5582:26;;:::i;:::-;5611;5620:9;5631:5;5611:8;:26::i;:::-;5582:55;;5647:26;;:::i;:::-;5676;5685:9;5696:5;5676:8;:26::i;:::-;5720:9;;;;-1:-1:-1;5147:601:49;;-1:-1:-1;;;;;;5147:601:49:o;4096:169:56:-;4206:10;;:::i;:::-;4239:19;4243:1;4246:11;4255:1;4246:8;:11::i;:::-;4239:3;:19::i;6358:966:52:-;6461:12;6536:19;6575:5;6558:23;;;;;;;;;;;;;22:32:-1;26:21;;;22:32;6:49;;6558:23:52;;;;-1:-1:-1;49:4;6687:571:52;6708:5;;6687:571;;6959:9;;6861:3;;;;;6959:6;;6861:3;;6959:9;;;;;;;;;;;;;;;;;:14;;;6955:293;;7014:1;7010:5;7140:22;;7147:6;-1:-1:-1;7220:13:52;;6955:293;6687:571;;;-1:-1:-1;;7305:12:52;;;7315:1;7305:12;;;;;;;;;7298:19;-1:-1:-1;;6358:966:52:o;2490:206:45:-;2622:4;2649:5;:13;;;2663:8;2649:23;;;;;;;;;;;;;;:29;;;:35;;;2688:1;2649:40;;2642:47;;2490:206;;;;:::o;2317:167::-;2457:13;:20;;2317:167::o;6193:448:53:-;6362:16;;:::i;:::-;6394:20;;:::i;:::-;6417:31;:5;6430:7;6439:8;6417:31;:12;:31;:::i;:::-;6394:54;;6463:12;:3;:10;:12::i;:::-;6459:65;;;6498:15;:13;:15::i;:::-;6491:22;;;;;6459:65;6534:27;;:::i;:::-;6564:24;:5;6579:8;6564:24;:14;:24;:::i;:::-;6534:54;;6605:29;6623:3;6628:5;6605:17;:29::i;:::-;6598:36;6193:448;-1:-1:-1;;;;;;6193:448:53:o;5723:137:56:-;5841:7;;;:12;;5723:137::o;2910:211:45:-;3041:21;;:::i;:::-;3085:13;;:23;;3099:8;;3085:23;;;;;;;;;;;;:29;;;3078:36;;2910:211;;;;:::o;229:421:1:-;287:7;527:6;523:45;;-1:-1:-1;556:1:1;549:8;;523:45;590:5;;;594:1;590;:5;:1;613:5;;;;;:10;605:19;;;;;1160:124:46;1222:11;;:::i;:::-;-1:-1:-1;1256:21:46;;;;;;;;;1013:6;1256:21;;1160:124;:::o;1658:188::-;1771:7;1801:38;1817:6;1013;1831:1;:7;;;1801:15;:38::i;1431:145:1:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;909:132:54;979:6;1008:26;1018:15;1008:9;:26::i;:::-;1001:33;;909:132;:::o;1205:145:1:-;1263:7;1295:1;1290;:6;;1282:15;;;;;;-1:-1:-1;1319:5:1;;;1205:145::o;2148:290:50:-;2239:6;2284;2301:107;2327:16;;;;;2357:4;2301:107;:12;:107::i;7330:912:52:-;7424:12;7456:10;7452:51;;-1:-1:-1;7482:10:52;;;;;;;;;;;;;;;;;;;7452:51;7564:5;7552:9;7603:69;7610:6;;7603:69;;7632:8;;7659:2;7654:7;;;;7603:69;;;7713:17;7743:6;7733:17;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;7733:17:52;87:34:-1;135:17;;-1:-1;7733:17:52;-1:-1:-1;7842:5:52;;-1:-1:-1;7713:37:52;-1:-1:-1;7874:6:52;7857:357;7882:5;;7857:357;;8035:3;;8131:2;8127:1;:6;901:2;8113:21;8102:34;;8092:4;8097:1;8092:7;;;;;;;;;;;:44;;;;;;;;;;-1:-1:-1;8201:2:52;8196:7;;;;7857:357;;;-1:-1:-1;8231:4:52;7330:912;-1:-1:-1;;;;7330:912:52:o;778:296:1:-;836:7;933:1;929;:5;921:14;;;;;;945:9;961:1;957;:5;;;;;;;778:296;-1:-1:-1;;;;778:296:1:o;5201:203:56:-;5294:10;;:::i;:::-;-1:-1:-1;5327:70:56;;;;;;;;;5352:6;;5351:7;5327:70;;;5379:7;;;;5327:70;;;;5201:203;;;:::o;4271:610::-;4381:10;;:::i;:::-;4407:17;;:::i;:::-;4448:6;;4438;;:16;;;;;;4434:418;;;4484:6;;4470:20;;;;4532:7;;;;;4541;;;;4519:30;;4532:7;4519:12;:30::i;:::-;4504:12;;;:45;4434:418;;;4595:1;:7;;;4584:1;:7;;;:18;4580:262;;4636:6;;4622:20;;;;4688:7;;;;;4697;;;;4675:30;;4688:7;4675:12;:30::i;4580:262::-;4758:6;;4744:20;;;;4810:7;;;;;4819;;;;4797:30;;4810:7;4797:12;:30::i;:::-;4782:12;;;:45;:12;4271:610;-1:-1:-1;;;4271:610:56:o;3922:168::-;3988:10;;:::i;:::-;-1:-1:-1;4021:62:56;;;;;;;;;-1:-1:-1;4021:62:56;;;;;;;3922:168;:::o;2444:290:50:-;2535:6;2580;2597:107;2623:16;;;;;2653:4;2597:107;:12;:107::i;1015:360:33:-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;1015:360:33;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;1015:360:33;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;1015:360:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;1015:360:33;;;;;;;;;;;;:::i;5:118:-1:-;;72:46;110:6;97:20;72:46;;166:753;;308:3;301:4;293:6;289:17;285:27;275:2;;326:1;323;316:12;275:2;363:6;350:20;385:105;400:89;482:6;400:89;;;385:105;;;518:21;;;562:4;550:17;;;;376:114;;-1:-1;575:14;;550:17;670:1;655:258;680:6;677:1;674:13;655:258;;;763:3;750:17;742:6;738:30;787:62;845:3;833:10;787:62;;;775:75;;-1:-1;873:4;864:14;;;;892;;;;;702:1;695:9;655:258;;;659:14;268:651;;;;;;;;957:764;;1093:3;1086:4;1078:6;1074:17;1070:27;1060:2;;1111:1;1108;1101:12;1060:2;1148:6;1135:20;1170:99;1185:83;1261:6;1185:83;;1170:99;1161:108;;1286:5;1311:6;1304:5;1297:21;1341:4;1333:6;1329:17;1319:27;;1363:4;1358:3;1354:14;1347:21;;1416:6;1463:3;1455:4;1447:6;1443:17;1438:3;1434:27;1431:36;1428:2;;;1480:1;1477;1470:12;1428:2;1505:1;1490:225;1515:6;1512:1;1509:13;1490:225;;;1573:3;1595:56;1647:3;1635:10;1595:56;;;1583:69;;-1:-1;1675:4;1666:14;;;;1703:4;1694:14;;;;;1537:1;1530:9;1490:225;;1769:785;;1912:3;1905:4;1897:6;1893:17;1889:27;1879:2;;1930:1;1927;1920:12;1879:2;1967:6;1954:20;1989:106;2004:90;2087:6;2004:90;;1989:106;1980:115;;2112:5;2137:6;2130:5;2123:21;2167:4;2159:6;2155:17;2145:27;;2189:4;2184:3;2180:14;2173:21;;2242:6;2289:3;2281:4;2273:6;2269:17;2264:3;2260:27;2257:36;2254:2;;;2306:1;2303;2296:12;2254:2;2331:1;2316:232;2341:6;2338:1;2335:13;2316:232;;;2399:3;2421:63;2480:3;2468:10;2421:63;;;2409:76;;-1:-1;2508:4;2499:14;;;;2536:4;2527:14;;;;;2363:1;2356:9;2316:232;;2562:112;;2626:43;2661:6;2648:20;2626:43;;2682:432;;2779:3;2772:4;2764:6;2760:17;2756:27;2746:2;;2797:1;2794;2787:12;2746:2;2834:6;2821:20;2856:60;2871:44;2908:6;2871:44;;2856:60;2847:69;;2936:6;2929:5;2922:21;2972:4;2964:6;2960:17;3005:4;2998:5;2994:16;3040:3;3031:6;3026:3;3022:16;3019:25;3016:2;;;3057:1;3054;3047:12;3016:2;3067:41;3101:6;3096:3;3091;3067:41;;;2739:375;;;;;;;;3122:168;;3214:71;3277:6;3264:20;3214:71;;3466:150;;3549:62;3603:6;3590:20;3549:62;;3623:164;;3713:69;3774:6;3761:20;3713:69;;3991:1525;;4105:5;4093:9;4088:3;4084:19;4080:31;4077:2;;;4124:1;4121;4114:12;4077:2;4142:21;4157:5;4142:21;;;4133:30;-1:-1;4219:1;4250:65;4311:3;4291:9;4250:65;;;4226:90;;-1:-1;4382:2;4415:49;4460:3;4436:22;;;4415:49;;;4408:4;4401:5;4397:16;4390:75;4337:139;4528:2;4561:75;4632:3;4623:6;4612:9;4608:22;4561:75;;;4554:4;4547:5;4543:16;4536:101;4486:162;4709:3;4743:49;4788:3;4779:6;4768:9;4764:22;4743:49;;;4736:4;4729:5;4725:16;4718:75;4658:146;4867:3;4901:49;4946:3;4937:6;4926:9;4922:22;4901:49;;;4894:4;4887:5;4883:16;4876:75;4814:148;5020:3;5054:49;5099:3;5090:6;5079:9;5075:22;5054:49;;;5047:4;5040:5;5036:16;5029:75;4972:143;5175:3;5209:49;5254:3;5245:6;5234:9;5230:22;5209:49;;;5202:4;5195:5;5191:16;5184:75;5125:145;5348:3;5337:9;5333:19;5320:33;5373:18;5365:6;5362:30;5359:2;;;5405:1;5402;5395:12;5359:2;5440:54;5490:3;5481:6;5470:9;5466:22;5440:54;;;5433:4;5426:5;5422:16;5415:80;5280:226;4071:1445;;;;;5554:803;;5669:4;5657:9;5652:3;5648:19;5644:30;5641:2;;;5687:1;5684;5677:12;5641:2;5705:20;5720:4;5705:20;;;5696:29;-1:-1;5775:1;5806:46;5848:3;5828:9;5806:46;;;5782:71;;-1:-1;5922:2;5955:72;6023:3;5999:22;;;5955:72;;;5948:4;5941:5;5937:16;5930:98;5874:165;6088:2;6121:69;6186:3;6177:6;6166:9;6162:22;6121:69;;;6114:4;6107:5;6103:16;6096:95;6049:153;6253:2;6286:49;6331:3;6322:6;6311:9;6307:22;6286:49;;;6279:4;6272:5;6268:16;6261:75;6212:135;5635:722;;;;;6390:321;;6502:4;6490:9;6485:3;6481:19;6477:30;6474:2;;;6520:1;6517;6510:12;6474:2;6538:20;6553:4;6538:20;;;6529:29;-1:-1;6609:1;6640:49;6685:3;6665:9;6640:49;;;6616:74;;-1:-1;6627:5;6468:243;-1:-1;;6468:243;6744:463;;6852:4;6840:9;6835:3;6831:19;6827:30;6824:2;;;6870:1;6867;6860:12;6824:2;6888:20;6903:4;6888:20;;;6879:29;-1:-1;6959:1;6990:49;7035:3;7015:9;6990:49;;;6966:74;;-1:-1;7103:2;7136:49;7181:3;7157:22;;;7136:49;;;7129:4;7122:5;7118:16;7111:75;7061:136;6818:389;;;;;7750:471;;7865:4;7853:9;7848:3;7844:19;7840:30;7837:2;;;7883:1;7880;7873:12;7837:2;7901:20;7916:4;7901:20;;;7892:29;-1:-1;7975:1;8006:49;8051:3;8031:9;8006:49;;;7982:74;;-1:-1;8120:2;8153:46;8195:3;8171:22;;;8153:46;;8256:344;;8380:4;8368:9;8363:3;8359:19;8355:30;8352:2;;;8398:1;8395;8388:12;8352:2;8416:20;8431:4;8416:20;;;8407:29;-1:-1;8487:1;8518:60;8574:3;8554:9;8518:60;;9341:118;;9408:46;9446:6;9433:20;9408:46;;9466:122;;9544:39;9575:6;9569:13;9544:39;;9595:241;;9699:2;9687:9;9678:7;9674:23;9670:32;9667:2;;;9715:1;9712;9705:12;9667:2;9750:1;9767:53;9812:7;9792:9;9767:53;;9843:366;;;9964:2;9952:9;9943:7;9939:23;9935:32;9932:2;;;9980:1;9977;9970:12;9932:2;10015:1;10032:53;10077:7;10057:9;10032:53;;;10022:63;;9994:97;10122:2;10140:53;10185:7;10176:6;10165:9;10161:22;10140:53;;;10130:63;;10101:98;9926:283;;;;;;10216:360;;;10334:2;10322:9;10313:7;10309:23;10305:32;10302:2;;;10350:1;10347;10340:12;10302:2;10385:1;10402:53;10447:7;10427:9;10402:53;;;10392:63;;10364:97;10492:2;10510:50;10552:7;10543:6;10532:9;10528:22;10510:50;;10583:929;;;;;;10848:3;10836:9;10827:7;10823:23;10819:33;10816:2;;;10865:1;10862;10855:12;10816:2;10900:1;10917:53;10962:7;10942:9;10917:53;;;10907:63;;10879:97;11007:2;11025:75;11092:7;11083:6;11072:9;11068:22;11025:75;;;11015:85;;10986:120;11137:2;11155:78;11225:7;11216:6;11205:9;11201:22;11155:78;;;11145:88;;11116:123;11270:2;11288:76;11356:7;11347:6;11336:9;11332:22;11288:76;;;11278:86;;11249:121;11401:3;11420:76;11488:7;11479:6;11468:9;11464:22;11420:76;;;11410:86;;11380:122;10810:702;;;;;;;;;11519:726;;;11734:2;11722:9;11713:7;11709:23;11705:32;11702:2;;;11750:1;11747;11740:12;11702:2;11785:31;;11836:18;11825:30;;11822:2;;;11868:1;11865;11858:12;11822:2;11888:97;11977:7;11968:6;11957:9;11953:22;11888:97;;;11878:107;;11764:227;12050:2;12039:9;12035:18;12022:32;12074:18;12066:6;12063:30;12060:2;;;12106:1;12103;12096:12;12060:2;12126:103;12221:7;12212:6;12201:9;12197:22;12126:103;;12252:429;;12407:2;12395:9;12386:7;12382:23;12378:32;12375:2;;;12423:1;12420;12413:12;12375:2;12458:31;;12509:18;12498:30;;12495:2;;;12541:1;12538;12531:12;12495:2;12561:104;12657:7;12648:6;12637:9;12633:22;12561:104;;12688:287;;12815:2;12803:9;12794:7;12790:23;12786:32;12783:2;;;12831:1;12828;12821:12;12783:2;12866:1;12883:76;12951:7;12931:9;12883:76;;12982:287;;13109:2;13097:9;13088:7;13084:23;13080:32;13077:2;;;13125:1;13122;13115:12;13077:2;13160:1;13177:76;13245:7;13225:9;13177:76;;13276:412;;;13420:2;13408:9;13399:7;13395:23;13391:32;13388:2;;;13436:1;13433;13426:12;13388:2;13471:1;13488:76;13556:7;13536:9;13488:76;;;13478:86;;13450:120;13601:2;13619:53;13664:7;13655:6;13644:9;13640:22;13619:53;;13695:311;;13834:2;13822:9;13813:7;13809:23;13805:32;13802:2;;;13850:1;13847;13840:12;13802:2;13885:1;13902:88;13982:7;13962:9;13902:88;;14625:241;;14729:2;14717:9;14708:7;14704:23;14700:32;14697:2;;;14745:1;14742;14735:12;14697:2;14780:1;14797:53;14842:7;14822:9;14797:53;;14873:263;;14988:2;14976:9;14967:7;14963:23;14959:32;14956:2;;;15004:1;15001;14994:12;14956:2;15039:1;15056:64;15112:7;15092:9;15056:64;;15143:366;;;15264:2;15252:9;15243:7;15239:23;15235:32;15232:2;;;15280:1;15277;15270:12;15232:2;15315:1;15332:53;15377:7;15357:9;15332:53;;15516:360;;;15634:2;15622:9;15613:7;15609:23;15605:32;15602:2;;;15650:1;15647;15640:12;15602:2;15685:1;15702:53;15747:7;15727:9;15702:53;;15883:416;;;16029:2;16017:9;16008:7;16004:23;16000:32;15997:2;;;16045:1;16042;16035:12;15997:2;16080:1;16097:53;16142:7;16122:9;16097:53;;;16087:63;;16059:97;16187:2;16205:78;16275:7;16266:6;16255:9;16251:22;16205:78;;16723:412;;;16867:2;16855:9;16846:7;16842:23;16838:32;16835:2;;;16883:1;16880;16873:12;16835:2;16918:1;16935:53;16980:7;16960:9;16935:53;;;16925:63;;16897:97;17025:2;17043:76;17111:7;17102:6;17091:9;17087:22;17043:76;;17142:366;;;17263:2;17251:9;17242:7;17238:23;17234:32;17231:2;;;17279:1;17276;17269:12;17231:2;17314:1;17331:53;17376:7;17356:9;17331:53;;;17321:63;;17293:97;17421:2;17439:53;17484:7;17475:6;17464:9;17460:22;17439:53;;17516:173;;17603:46;17645:3;17637:6;17603:46;;;-1:-1;;17678:4;17669:14;;17596:93;17698:273;;17857:108;17961:3;17953:6;17857:108;;17980:269;;18113:96;18205:3;18197:6;18113:96;;;-1:-1;;18238:4;18229:14;;18106:143;18258:249;;18381:86;18463:3;18455:6;18381:86;;18516:249;;18639:86;18721:3;18713:6;18639:86;;18773:110;18846:31;18871:5;18846:31;;;18841:3;18834:44;18828:55;;;19308:621;;19453:54;19501:5;19453:54;;;19520:86;19599:6;19594:3;19520:86;;;19513:93;;19626:56;19676:5;19626:56;;;19703:1;19688:219;19713:6;19710:1;19707:13;19688:219;;;19760:63;19819:3;19810:6;19804:13;19760:63;;;19753:70;;19840:60;19893:6;19840:60;;;19830:70;-1:-1;19735:1;19728:9;19688:219;;;-1:-1;19920:3;;19432:497;-1:-1;;;;19432:497;20004:1003;;20207:79;20280:5;20207:79;;;20299:119;20411:6;20406:3;20299:119;;;20292:126;;20441:3;20483:4;20475:6;20471:17;20466:3;20462:27;20509:81;20584:5;20509:81;;;20611:1;20596:372;20621:6;20618:1;20615:13;20596:372;;;20683:9;20677:4;20673:20;20668:3;20661:33;20709:122;20826:4;20817:6;20811:13;20709:122;;;20701:130;;20848:85;20926:6;20848:85;;;20956:4;20947:14;;;;;20838:95;-1:-1;20643:1;20636:9;20596:372;;;-1:-1;20981:4;;20186:821;-1:-1;;;;;;20186:821;21070:797;;21261:73;21328:5;21261:73;;;21347:113;21453:6;21448:3;21347:113;;;21340:120;;21480:75;21549:5;21480:75;;;21576:1;21561:284;21586:6;21583:1;21580:13;21561:284;;;21633:109;21738:3;21729:6;21723:13;21633:109;;;21626:116;;21759:79;21831:6;21759:79;;;21749:89;-1:-1;21608:1;21601:9;21561:284;;21924:765;;22105:72;22171:5;22105:72;;;22190:104;22287:6;22282:3;22190:104;;;22183:111;;22314:74;22382:5;22314:74;;;22409:1;22394:273;22419:6;22416:1;22413:13;22394:273;;;22466:99;22561:3;22552:6;22546:13;22466:99;;;22459:106;;22582:78;22653:6;22582:78;;;22572:88;-1:-1;22441:1;22434:9;22394:273;;22746:765;;22927:72;22993:5;22927:72;;;23012:104;23109:6;23104:3;23012:104;;;23005:111;;23136:74;23204:5;23136:74;;;23231:1;23216:273;23241:6;23238:1;23235:13;23216:273;;;23288:99;23383:3;23374:6;23368:13;23288:99;;;23281:106;;23404:78;23475:6;23404:78;;;23394:88;-1:-1;23263:1;23256:9;23216:273;;23519:101;23586:28;23608:5;23586:28;;23987:155;24086:50;24105:30;24129:5;24105:30;;;24086:50;;24149:155;24248:50;24267:30;24291:5;24267:30;;24311:159;24412:52;24432:31;24457:5;24432:31;;24477:356;;24605:38;24637:5;24605:38;;;24655:88;24736:6;24731:3;24655:88;;;24648:95;;24748:52;24793:6;24788:3;24781:4;24774:5;24770:16;24748:52;;;24812:16;;;;;24585:248;-1:-1;;24585:248;24840:331;;24944:34;24972:5;24944:34;;;24990:68;25051:6;25046:3;24990:68;;;24983:75;;25063:52;25108:6;25103:3;25096:4;25089:5;25085:16;25063:52;;;25136:29;25158:6;25136:29;;;25127:39;;;;24924:247;-1:-1;;;24924:247;25178:166;25276:62;25332:5;25276:62;;26254:152;26349:51;26394:5;26349:51;;26413:166;26515:58;26567:5;26515:58;;26753:146;26846:47;26887:5;26846:47;;27321:1666;27546:22;;27321:1666;;27474:5;27465:15;;;27574:83;27469:3;27546:22;27574:83;;;27495:168;27740:4;27733:5;27729:16;27723:23;27752:70;27816:4;27811:3;27807:14;27794:11;27752:70;;;27673:155;27902:4;27895:5;27891:16;27885:23;27914:126;28034:4;28029:3;28025:14;28012:11;27914:126;;;27838:208;28129:4;28122:5;28118:16;28112:23;28141:70;28205:4;28200:3;28196:14;28183:11;28141:70;;;28056:161;28302:4;28295:5;28291:16;28285:23;28314:70;28378:4;28373:3;28369:14;28356:11;28314:70;;;28227:163;28470:4;28463:5;28459:16;28453:23;28482:71;28546:5;28541:3;28537:15;28524:11;28482:71;;;28400:159;28641:4;28634:5;28630:16;28624:23;28653:71;28717:5;28712:3;28708:15;28695:11;28653:71;;;28569:161;28802:4;28795:5;28791:16;28785:23;28855:3;28849:4;28845:14;28837:5;28832:3;28828:15;28821:39;28875:74;28944:4;28931:11;28875:74;;29053:851;29265:22;;29200:4;29191:14;;;29293:63;29195:3;29265:22;29293:63;;;29220:142;29442:4;29435:5;29431:16;29425:23;29454:91;29539:4;29534:3;29530:14;29517:11;29454:91;;;29372:179;29622:4;29615:5;29611:16;29605:23;29634:88;29716:4;29711:3;29707:14;29694:11;29634:88;;;29561:167;29801:4;29794:5;29790:16;29784:23;29813:70;29877:4;29872:3;29868:14;29855:11;29813:70;;29960:315;30165:22;;30099:4;30090:14;;;30193:61;30094:3;30165:22;30193:61;;31079:624;31287:22;;31220:4;31211:14;;;31315:59;31215:3;31287:22;31315:59;;;31240:140;31454:4;31447:5;31443:16;31437:23;31466:60;31520:4;31515:3;31511:14;31498:11;31466:60;;;31390:142;31610:4;31603:5;31599:16;31593:23;31622:60;31676:4;31671:3;31667:14;31654:11;31622:60;;32429:479;32628:22;;32562:4;32553:14;;;32656:69;32557:3;32628:22;32656:69;;;32582:149;32805:4;32798:5;32794:16;32788:23;32817:70;32881:4;32876:3;32872:14;32859:11;32817:70;;32968:1651;33178:22;;33111:5;33102:15;;;33206:61;33106:3;33178:22;33206:61;;;33132:141;33349:4;33342:5;33338:16;33332:23;33361:112;33467:4;33462:3;33458:14;33445:11;33361:112;;;33283:196;33552:4;33545:5;33541:16;33535:23;33564:106;33664:4;33659:3;33655:14;33642:11;33564:106;;;33489:187;33755:4;33748:5;33744:16;33738:23;33767:84;33845:4;33840:3;33836:14;33823:11;33767:84;;;33686:171;33939:4;33932:5;33928:16;33922:23;33951:87;34032:4;34027:3;34023:14;34010:11;33951:87;;;33867:177;34125:4;34118:5;34114:16;34108:23;34137:105;34235:5;34230:3;34226:15;34213:11;34137:105;;;34054:194;34329:4;34322:5;34318:16;34312:23;34341:105;34439:5;34434:3;34430:15;34417:11;34341:105;;;34258:194;34529:4;34522:5;34518:16;34512:23;34541:57;34591:5;34586:3;34582:15;34569:11;34541:57;;34669:459;34871:22;;34806:4;34797:14;;;34899:55;34801:3;34871:22;34899:55;;;34826:134;35033:4;35026:5;35022:16;35016:23;35045:62;35101:4;35096:3;35092:14;35079:11;35045:62;;36441:1152;36667:22;;36592:4;36583:14;;;36695:59;36587:3;36667:22;36695:59;;;36612:148;36848:4;36841:5;36837:16;36831:23;36860:60;36914:4;36909:3;36905:14;36892:11;36860:60;;;36770:156;37009:4;37002:5;36998:16;36992:23;37021:60;37075:4;37070:3;37066:14;37053:11;37021:60;;;36936:151;37171:4;37164:5;37160:16;37154:23;37183:60;37237:4;37232:3;37228:14;37215:11;37183:60;;;37097:152;37333:4;37326:5;37322:16;37316:23;37345:60;37399:4;37394:3;37390:14;37377:11;37345:60;;;37259:152;37498:4;37491:5;37487:16;37481:23;37510:62;37566:4;37561:3;37557:14;37544:11;37510:62;;37661:992;37884:22;;37812:4;37803:14;;;37912:103;37807:3;37884:22;37912:103;;;37832:189;38106:4;38099:5;38095:16;38089:23;38118:104;38216:4;38211:3;38207:14;38194:11;38118:104;;;38031:197;38308:4;38301:5;38297:16;38291:23;38320:104;38418:4;38413:3;38409:14;38396:11;38320:104;;;38238:192;38514:4;38507:5;38503:16;38497:23;38526:106;38626:4;38621:3;38617:14;38604:11;38526:106;;38660:123;38760:18;;38754:29;38843:478;39057:22;;38990:4;38981:14;;;39085:61;38985:3;39057:22;39085:61;;41028:459;41230:22;;41165:4;41156:14;;;41258:55;41160:3;41230:22;41258:55;;41989:110;42062:31;42087:5;42062:31;;42106:110;42179:31;42204:5;42179:31;;42610:107;42681:30;42705:5;42681:30;;42724:107;42795:30;42819:5;42795:30;;42838:107;42909:30;42933:5;42909:30;;42952:244;;43071:75;43142:3;43133:6;43071:75;;;-1:-1;43168:2;43159:12;;43059:137;-1:-1;43059:137;43203:553;;43419:93;43508:3;43499:6;43419:93;;;43412:100;;43523:73;43592:3;43583:6;43523:73;;;43618:1;43613:3;43609:11;43602:18;;43638:93;43727:3;43718:6;43638:93;;43763:978;;44077:93;44166:3;44157:6;44077:93;;;44070:100;;44181:73;44250:3;44241:6;44181:73;;;44276:1;44271:3;44267:11;44260:18;;44296:93;44385:3;44376:6;44296:93;;;44289:100;;44400:73;44469:3;44460:6;44400:73;;;44495:1;44490:3;44486:11;44479:18;;44515:93;44604:3;44595:6;44515:93;;;44508:100;;44619:73;44688:3;44679:6;44619:73;;;-1:-1;44714:1;44705:11;;44058:683;-1:-1;;;;;;44058:683;44748:213;44866:2;44851:18;;44880:71;44855:9;44924:6;44880:71;;44968:312;45108:2;45093:18;;45122:71;45097:9;45166:6;45122:71;;;45204:66;45266:2;45255:9;45251:18;45242:6;45204:66;;45287:435;45461:2;45446:18;;45475:71;45450:9;45519:6;45475:71;;;45557:72;45625:2;45614:9;45610:18;45601:6;45557:72;;;45640;45708:2;45697:9;45693:18;45684:6;45640:72;;45729:1023;46125:2;46139:47;;;46110:18;;46200:108;46110:18;46294:6;46200:108;;;46192:116;;46356:9;46350:4;46346:20;46341:2;46330:9;46326:18;46319:48;46381:144;46520:4;46511:6;46381:144;;;46373:152;;46573:9;46567:4;46563:20;46558:2;46547:9;46543:18;46536:48;46598:144;46737:4;46728:6;46598:144;;46759:201;46871:2;46856:18;;46885:65;46860:9;46923:6;46885:65;;46967:263;47110:2;47095:18;;47124:96;47099:9;47193:6;47124:96;;47501:233;47629:2;47614:18;;47643:81;47618:9;47697:6;47643:81;;47741:301;47879:2;47893:47;;;47864:18;;47954:78;47864:18;48018:6;47954:78;;48049:305;48213:2;48198:18;;48227:117;48202:9;48317:6;48227:117;;48361:309;48527:2;48512:18;;48541:119;48516:9;48633:6;48541:119;;48677:314;48845:3;48830:19;;48860:121;48834:9;48954:6;48860:121;;48998:934;49392:3;49377:19;;49407:121;49381:9;49501:6;49407:121;;;49539;49655:3;49644:9;49640:19;49631:6;49539:121;;;49671;49787:3;49776:9;49772:19;49763:6;49671:121;;;49803:119;49917:3;49906:9;49902:19;49893:6;49803:119;;49939:301;50101:2;50086:18;;50115:115;50090:9;50203:6;50115:115;;50875:330;51051:3;51036:19;;51066:129;51040:9;51168:6;51066:129;;51212:330;51388:3;51373:19;;51403:129;51377:9;51505:6;51403:129;;51549:509;51752:2;51737:18;;51766:100;51741:9;51839:6;51766:100;;;51877:80;51953:2;51942:9;51938:18;51929:6;51877:80;;;51968;52044:2;52033:9;52029:18;52020:6;51968:80;;52065:497;52262:2;52247:18;;52276:100;52251:9;52349:6;52276:100;;;52387:80;52463:2;52452:9;52448:18;52439:6;52387:80;;;52478:74;52548:2;52537:9;52533:18;52524:6;52478:74;;52569:1147;52995:3;52980:19;;53010:100;52984:9;53083:6;53010:100;;;53121:80;53197:2;53186:9;53182:18;53173:6;53121:80;;;53212:102;53310:2;53299:9;53295:18;53286:6;53212:102;;;53325:105;53426:2;53415:9;53411:18;53402:6;53325:105;;;53441:127;53563:3;53552:9;53548:19;53539:6;53441:127;;;53579;53701:3;53690:9;53686:19;53677:6;53579:127;;;52966:750;;;;;;;;;;53723:981;54114:2;54099:18;;54128:100;54103:9;54201:6;54128:100;;;54276:9;54270:4;54266:20;54261:2;54250:9;54246:18;54239:48;54301:154;54450:4;54441:6;54301:154;;;54293:162;;54503:9;54497:4;54493:20;54488:2;54477:9;54473:18;54466:48;54528:166;54689:4;54680:6;54528:166;;54711:482;54932:2;54917:18;;54946:100;54921:9;55019:6;54946:100;;;55057:126;55179:2;55168:9;55164:18;55155:6;55057:126;;55693:509;55896:2;55881:18;;55910:100;55885:9;55983:6;55910:100;;;56021:80;56097:2;56086:9;56082:18;56073:6;56021:80;;56209:497;56406:2;56391:18;;56420:100;56395:9;56493:6;56420:100;;;56531:80;56607:2;56596:9;56592:18;56583:6;56531:80;;56713:559;56941:2;56926:18;;56955:100;56930:9;57028:6;56955:100;;;57066:80;57142:2;57131:9;57127:18;57118:6;57066:80;;;57157:105;57258:2;57247:9;57243:18;57234:6;57157:105;;57839:601;58088:2;58073:18;;58102:100;58077:9;58175:6;58102:100;;;58213:80;58289:2;58278:9;58274:18;58265:6;58213:80;;;58304:126;58426:2;58415:9;58411:18;58402:6;58304:126;;58447:321;58619:2;58604:18;;58633:125;58608:9;58731:6;58633:125;;59091:516;59333:2;59318:18;;59347:119;59322:9;59439:6;59347:119;;59614:301;59776:2;59761:18;;59790:115;59765:9;59878:6;59790:115;;59922:213;60040:2;60025:18;;60054:71;60029:9;60098:6;60054:71;;60142:256;60204:2;60198:9;60230:17;;;60305:18;60290:34;;60326:22;;;60287:62;60284:2;;;60362:1;60359;60352:12;60284:2;60378;60371:22;60182:216;;-1:-1;60182:216;60405:283;;60589:18;60581:6;60578:30;60575:2;;;60621:1;60618;60611:12;60575:2;-1:-1;60650:4;60638:17;;;60668:15;;60512:176;61270:254;;61409:18;61401:6;61398:30;61395:2;;;61441:1;61438;61431:12;61395:2;-1:-1;61514:4;61485;61462:17;;;;61481:9;61458:33;61504:15;;61332:192;61533:121;61642:4;61630:17;;61611:43;62271:107;62361:12;;62345:33;63948:178;64066:19;;;64115:4;64106:14;;64059:67;65472:105;;65541:31;65566:5;65541:31;;65584:92;65657:13;65650:21;;65633:43;65683:151;65762:66;65751:78;;65734:100;65841:151;65920:66;65909:78;;65892:100;65999:79;66068:5;66051:27;66085:133;;66179:1;66172:5;66169:12;66159:2;;66185:9;66159:2;-1:-1;66208:5;66153:65;66225:140;;66326:1;66319:5;66316:12;66306:2;;66332:9;66516:129;;66606:1;66599:5;66596:12;66586:2;;66612:9;66652:120;66732:34;66721:46;;66704:68;66779:128;66859:42;66848:54;;66831:76;67000:95;67079:10;67068:22;;67051:44;67102:103;67181:18;67170:30;;67153:52;67212:111;67291:26;67280:38;;67263:60;67541:130;;67635:31;67660:5;67635:31;;67812:136;;67906:1;67899:5;67896:12;67886:2;;67922:1;67919;67912:12;67955:143;;68056:1;68049:5;68046:12;68036:2;;68072:1;68069;68062:12;69114:145;;69207:47;69248:5;69207:47;;69266:159;;69366:54;69414:5;69366:54;;69592:137;;69681:43;69718:5;69681:43;;69737:145;69818:6;69813:3;69808;69795:30;-1:-1;69874:1;69856:16;;69849:27;69788:94;69891:268;69956:1;69963:101;69977:6;69974:1;69971:13;69963:101;;;70044:11;;;70038:18;70025:11;;;70018:39;69999:2;69992:10;69963:101;;;70079:6;70076:1;70073:13;70070:2;;;-1:-1;;70144:1;70126:16;;70119:27;69940:219;70408:97;70496:2;70476:14;70492:7;70472:28;;70456:49",
  "source": "/*\n\n    Copyright 2019 dYdX Trading Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n*/\n\npragma solidity 0.5.7;\npragma experimental ABIEncoderV2;\n\nimport { Admin } from \"./Admin.sol\";\nimport { Getters } from \"./Getters.sol\";\nimport { Operation } from \"./Operation.sol\";\nimport { Permission } from \"./Permission.sol\";\nimport { State } from \"./State.sol\";\nimport { Storage } from \"./lib/Storage.sol\";\n\n\n/**\n * @title SoloMargin\n * @author dYdX\n *\n * Main contract that inherits from other contracts\n */\ncontract SoloMargin is\n    State,\n    Admin,\n    Getters,\n    Operation,\n    Permission\n{\n    // ============ Constructor ============\n\n    constructor(\n        Storage.RiskParams memory riskParams,\n        Storage.RiskLimits memory riskLimits\n    )\n        public\n    {\n        g_state.riskParams = riskParams;\n        g_state.riskLimits = riskLimits;\n    }\n}\n",
  "sourcePath": "/home/terra/opensource/solo/contracts/protocol/SoloMargin.sol",
  "ast": {
    "absolutePath": "project:/contracts/protocol/SoloMargin.sol",
    "exportedSymbols": {
      "SoloMargin": [
        13270
      ]
    },
    "id": 13271,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13226,
        "literals": [
          "solidity",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "603:22:33"
      },
      {
        "id": 13227,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "626:33:33"
      },
      {
        "absolutePath": "project:/contracts/protocol/Admin.sol",
        "file": "./Admin.sol",
        "id": 13229,
        "nodeType": "ImportDirective",
        "scope": 13271,
        "sourceUnit": 12418,
        "src": "661:36:33",
        "symbolAliases": [
          {
            "foreign": 13228,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/protocol/Getters.sol",
        "file": "./Getters.sol",
        "id": 13231,
        "nodeType": "ImportDirective",
        "scope": 13271,
        "sourceUnit": 13114,
        "src": "698:40:33",
        "symbolAliases": [
          {
            "foreign": 13230,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/protocol/Operation.sol",
        "file": "./Operation.sol",
        "id": 13233,
        "nodeType": "ImportDirective",
        "scope": 13271,
        "sourceUnit": 13152,
        "src": "739:44:33",
        "symbolAliases": [
          {
            "foreign": 13232,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/protocol/Permission.sol",
        "file": "./Permission.sol",
        "id": 13235,
        "nodeType": "ImportDirective",
        "scope": 13271,
        "sourceUnit": 13225,
        "src": "784:46:33",
        "symbolAliases": [
          {
            "foreign": 13234,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/protocol/State.sol",
        "file": "./State.sol",
        "id": 13237,
        "nodeType": "ImportDirective",
        "scope": 13271,
        "sourceUnit": 13279,
        "src": "831:36:33",
        "symbolAliases": [
          {
            "foreign": 13236,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/protocol/lib/Storage.sol",
        "file": "./lib/Storage.sol",
        "id": 13239,
        "nodeType": "ImportDirective",
        "scope": 13271,
        "sourceUnit": 20758,
        "src": "868:44:33",
        "symbolAliases": [
          {
            "foreign": 13238,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13240,
              "name": "State",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13278,
              "src": "1042:5:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_State_$13278",
                "typeString": "contract State"
              }
            },
            "id": 13241,
            "nodeType": "InheritanceSpecifier",
            "src": "1042:5:33"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13242,
              "name": "Admin",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12417,
              "src": "1053:5:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Admin_$12417",
                "typeString": "contract Admin"
              }
            },
            "id": 13243,
            "nodeType": "InheritanceSpecifier",
            "src": "1053:5:33"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13244,
              "name": "Getters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13113,
              "src": "1064:7:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Getters_$13113",
                "typeString": "contract Getters"
              }
            },
            "id": 13245,
            "nodeType": "InheritanceSpecifier",
            "src": "1064:7:33"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13246,
              "name": "Operation",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13151,
              "src": "1077:9:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Operation_$13151",
                "typeString": "contract Operation"
              }
            },
            "id": 13247,
            "nodeType": "InheritanceSpecifier",
            "src": "1077:9:33"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13248,
              "name": "Permission",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13224,
              "src": "1092:10:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Permission_$13224",
                "typeString": "contract Permission"
              }
            },
            "id": 13249,
            "nodeType": "InheritanceSpecifier",
            "src": "1092:10:33"
          }
        ],
        "contractDependencies": [
          482,
          513,
          12417,
          13113,
          13151,
          13224,
          13278
        ],
        "contractKind": "contract",
        "documentation": "@title SoloMargin\n@author dYdX\n * Main contract that inherits from other contracts",
        "fullyImplemented": true,
        "id": 13270,
        "linearizedBaseContracts": [
          13270,
          13224,
          13151,
          13113,
          12417,
          513,
          482,
          13278
        ],
        "name": "SoloMargin",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 13268,
              "nodeType": "Block",
              "src": "1284:89:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 13256,
                        "name": "g_state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13277,
                        "src": "1294:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$19461_storage",
                          "typeString": "struct Storage.State storage ref"
                        }
                      },
                      "id": 13258,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "riskParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19458,
                      "src": "1294:18:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RiskParams_$19421_storage",
                        "typeString": "struct Storage.RiskParams storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13259,
                      "name": "riskParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13251,
                      "src": "1315:10:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RiskParams_$19421_memory_ptr",
                        "typeString": "struct Storage.RiskParams memory"
                      }
                    },
                    "src": "1294:31:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RiskParams_$19421_storage",
                      "typeString": "struct Storage.RiskParams storage ref"
                    }
                  },
                  "id": 13261,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:31:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 13262,
                        "name": "g_state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13277,
                        "src": "1335:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$19461_storage",
                          "typeString": "struct Storage.State storage ref"
                        }
                      },
                      "id": 13264,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "riskLimits",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19460,
                      "src": "1335:18:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RiskLimits_$19434_storage",
                        "typeString": "struct Storage.RiskLimits storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13265,
                      "name": "riskLimits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13253,
                      "src": "1356:10:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RiskLimits_$19434_memory_ptr",
                        "typeString": "struct Storage.RiskLimits memory"
                      }
                    },
                    "src": "1335:31:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RiskLimits_$19434_storage",
                      "typeString": "struct Storage.RiskLimits storage ref"
                    }
                  },
                  "id": 13267,
                  "nodeType": "ExpressionStatement",
                  "src": "1335:31:33"
                }
              ]
            },
            "documentation": null,
            "id": 13269,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13251,
                  "name": "riskParams",
                  "nodeType": "VariableDeclaration",
                  "scope": 13269,
                  "src": "1176:36:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RiskParams_$19421_memory_ptr",
                    "typeString": "struct Storage.RiskParams"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13250,
                    "name": "Storage.RiskParams",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 19421,
                    "src": "1176:18:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RiskParams_$19421_storage_ptr",
                      "typeString": "struct Storage.RiskParams"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13253,
                  "name": "riskLimits",
                  "nodeType": "VariableDeclaration",
                  "scope": 13269,
                  "src": "1222:36:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RiskLimits_$19434_memory_ptr",
                    "typeString": "struct Storage.RiskLimits"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13252,
                    "name": "Storage.RiskLimits",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 19434,
                    "src": "1222:18:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RiskLimits_$19434_storage_ptr",
                      "typeString": "struct Storage.RiskLimits"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1166:98:33"
            },
            "returnParameters": {
              "id": 13255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1284:0:33"
            },
            "scope": 13270,
            "src": "1155:218:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 13271,
        "src": "1015:360:33"
      }
    ],
    "src": "603:773:33"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/protocol/SoloMargin.sol",
      "exportedSymbols": {
        "SoloMargin": [
          13270
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.5",
            ".7"
          ]
        },
        "id": 13226,
        "name": "PragmaDirective",
        "src": "603:22:33"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 13227,
        "name": "PragmaDirective",
        "src": "626:33:33"
      },
      {
        "attributes": {
          "SourceUnit": 12418,
          "absolutePath": "project:/contracts/protocol/Admin.sol",
          "file": "./Admin.sol",
          "scope": 13271,
          "symbolAliases": [
            {
              "foreign": 13228,
              "local": null
            }
          ],
          "unitAlias": ""
        },
        "id": 13229,
        "name": "ImportDirective",
        "src": "661:36:33"
      },
      {
        "attributes": {
          "SourceUnit": 13114,
          "absolutePath": "project:/contracts/protocol/Getters.sol",
          "file": "./Getters.sol",
          "scope": 13271,
          "symbolAliases": [
            {
              "foreign": 13230,
              "local": null
            }
          ],
          "unitAlias": ""
        },
        "id": 13231,
        "name": "ImportDirective",
        "src": "698:40:33"
      },
      {
        "attributes": {
          "SourceUnit": 13152,
          "absolutePath": "project:/contracts/protocol/Operation.sol",
          "file": "./Operation.sol",
          "scope": 13271,
          "symbolAliases": [
            {
              "foreign": 13232,
              "local": null
            }
          ],
          "unitAlias": ""
        },
        "id": 13233,
        "name": "ImportDirective",
        "src": "739:44:33"
      },
      {
        "attributes": {
          "SourceUnit": 13225,
          "absolutePath": "project:/contracts/protocol/Permission.sol",
          "file": "./Permission.sol",
          "scope": 13271,
          "symbolAliases": [
            {
              "foreign": 13234,
              "local": null
            }
          ],
          "unitAlias": ""
        },
        "id": 13235,
        "name": "ImportDirective",
        "src": "784:46:33"
      },
      {
        "attributes": {
          "SourceUnit": 13279,
          "absolutePath": "project:/contracts/protocol/State.sol",
          "file": "./State.sol",
          "scope": 13271,
          "symbolAliases": [
            {
              "foreign": 13236,
              "local": null
            }
          ],
          "unitAlias": ""
        },
        "id": 13237,
        "name": "ImportDirective",
        "src": "831:36:33"
      },
      {
        "attributes": {
          "SourceUnit": 20758,
          "absolutePath": "project:/contracts/protocol/lib/Storage.sol",
          "file": "./lib/Storage.sol",
          "scope": 13271,
          "symbolAliases": [
            {
              "foreign": 13238,
              "local": null
            }
          ],
          "unitAlias": ""
        },
        "id": 13239,
        "name": "ImportDirective",
        "src": "868:44:33"
      },
      {
        "attributes": {
          "contractDependencies": [
            482,
            513,
            12417,
            13113,
            13151,
            13224,
            13278
          ],
          "contractKind": "contract",
          "documentation": "@title SoloMargin\n@author dYdX\n * Main contract that inherits from other contracts",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            13270,
            13224,
            13151,
            13113,
            12417,
            513,
            482,
            13278
          ],
          "name": "SoloMargin",
          "scope": 13271
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "State",
                  "referencedDeclaration": 13278,
                  "type": "contract State"
                },
                "id": 13240,
                "name": "UserDefinedTypeName",
                "src": "1042:5:33"
              }
            ],
            "id": 13241,
            "name": "InheritanceSpecifier",
            "src": "1042:5:33"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Admin",
                  "referencedDeclaration": 12417,
                  "type": "contract Admin"
                },
                "id": 13242,
                "name": "UserDefinedTypeName",
                "src": "1053:5:33"
              }
            ],
            "id": 13243,
            "name": "InheritanceSpecifier",
            "src": "1053:5:33"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Getters",
                  "referencedDeclaration": 13113,
                  "type": "contract Getters"
                },
                "id": 13244,
                "name": "UserDefinedTypeName",
                "src": "1064:7:33"
              }
            ],
            "id": 13245,
            "name": "InheritanceSpecifier",
            "src": "1064:7:33"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Operation",
                  "referencedDeclaration": 13151,
                  "type": "contract Operation"
                },
                "id": 13246,
                "name": "UserDefinedTypeName",
                "src": "1077:9:33"
              }
            ],
            "id": 13247,
            "name": "InheritanceSpecifier",
            "src": "1077:9:33"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Permission",
                  "referencedDeclaration": 13224,
                  "type": "contract Permission"
                },
                "id": 13248,
                "name": "UserDefinedTypeName",
                "src": "1092:10:33"
              }
            ],
            "id": 13249,
            "name": "InheritanceSpecifier",
            "src": "1092:10:33"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 13270,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "riskParams",
                      "scope": 13269,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Storage.RiskParams",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Storage.RiskParams",
                          "referencedDeclaration": 19421,
                          "type": "struct Storage.RiskParams"
                        },
                        "id": 13250,
                        "name": "UserDefinedTypeName",
                        "src": "1176:18:33"
                      }
                    ],
                    "id": 13251,
                    "name": "VariableDeclaration",
                    "src": "1176:36:33"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "riskLimits",
                      "scope": 13269,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Storage.RiskLimits",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Storage.RiskLimits",
                          "referencedDeclaration": 19434,
                          "type": "struct Storage.RiskLimits"
                        },
                        "id": 13252,
                        "name": "UserDefinedTypeName",
                        "src": "1222:18:33"
                      }
                    ],
                    "id": 13253,
                    "name": "VariableDeclaration",
                    "src": "1222:36:33"
                  }
                ],
                "id": 13254,
                "name": "ParameterList",
                "src": "1166:98:33"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 13255,
                "name": "ParameterList",
                "src": "1284:0:33"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct Storage.RiskParams storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "riskParams",
                              "referencedDeclaration": 19458,
                              "type": "struct Storage.RiskParams storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 13277,
                                  "type": "struct Storage.State storage ref",
                                  "value": "g_state"
                                },
                                "id": 13256,
                                "name": "Identifier",
                                "src": "1294:7:33"
                              }
                            ],
                            "id": 13258,
                            "name": "MemberAccess",
                            "src": "1294:18:33"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 13251,
                              "type": "struct Storage.RiskParams memory",
                              "value": "riskParams"
                            },
                            "id": 13259,
                            "name": "Identifier",
                            "src": "1315:10:33"
                          }
                        ],
                        "id": 13260,
                        "name": "Assignment",
                        "src": "1294:31:33"
                      }
                    ],
                    "id": 13261,
                    "name": "ExpressionStatement",
                    "src": "1294:31:33"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct Storage.RiskLimits storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "riskLimits",
                              "referencedDeclaration": 19460,
                              "type": "struct Storage.RiskLimits storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 13277,
                                  "type": "struct Storage.State storage ref",
                                  "value": "g_state"
                                },
                                "id": 13262,
                                "name": "Identifier",
                                "src": "1335:7:33"
                              }
                            ],
                            "id": 13264,
                            "name": "MemberAccess",
                            "src": "1335:18:33"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 13253,
                              "type": "struct Storage.RiskLimits memory",
                              "value": "riskLimits"
                            },
                            "id": 13265,
                            "name": "Identifier",
                            "src": "1356:10:33"
                          }
                        ],
                        "id": 13266,
                        "name": "Assignment",
                        "src": "1335:31:33"
                      }
                    ],
                    "id": 13267,
                    "name": "ExpressionStatement",
                    "src": "1335:31:33"
                  }
                ],
                "id": 13268,
                "name": "Block",
                "src": "1284:89:33"
              }
            ],
            "id": 13269,
            "name": "FunctionDefinition",
            "src": "1155:218:33"
          }
        ],
        "id": 13270,
        "name": "ContractDefinition",
        "src": "1015:360:33"
      }
    ],
    "id": 13271,
    "name": "SourceUnit",
    "src": "603:773:33"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Linux.g++"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-04-29T09:51:29.279Z",
  "devdoc": {
    "author": "dYdX * Main contract that inherits from other contracts",
    "methods": {
      "getAccountBalances((address,uint256))": {
        "params": {
          "account": "The account to query"
        },
        "return": "The following values:                  - The ERC20 token address for each market                  - The account's principal value for each market                  - The account's (supplied or borrowed) number of tokens for each market"
      },
      "getAccountPar((address,uint256),uint256)": {
        "params": {
          "account": "The account to query",
          "marketId": "The market to query"
        },
        "return": "The principal value"
      },
      "getAccountStatus((address,uint256))": {
        "params": {
          "account": "The account to query"
        },
        "return": "The account's status"
      },
      "getAccountValues((address,uint256))": {
        "params": {
          "account": "The account to query"
        },
        "return": "The following values:                  - The supplied value of the account                  - The borrowed value of the account"
      },
      "getAccountWei((address,uint256),uint256)": {
        "params": {
          "account": "The account to query",
          "marketId": "The market to query"
        },
        "return": "The token amount"
      },
      "getAdjustedAccountValues((address,uint256))": {
        "params": {
          "account": "The account to query"
        },
        "return": "The following values:                  - The supplied value of the account (adjusted for marginPremium)                  - The borrowed value of the account (adjusted for marginPremium)"
      },
      "getEarningsRate()": {
        "return": "The global earnings rate"
      },
      "getIsGlobalOperator(address)": {
        "params": {
          "operator": "The address to query"
        },
        "return": "True if operator is a global operator"
      },
      "getIsLocalOperator(address,address)": {
        "params": {
          "operator": "The possible operator",
          "owner": "The owner of the accounts"
        },
        "return": "True if operator is approved for owner's accounts"
      },
      "getLiquidationSpread()": {
        "return": "The global liquidation spread"
      },
      "getLiquidationSpreadForPair(uint256,uint256)": {
        "params": {
          "heldMarketId": "The market for which the account has collateral",
          "owedMarketId": "The market for which the account has borrowed tokens"
        },
        "return": "The adjusted liquidation spread"
      },
      "getMarginRatio()": {
        "return": "The global margin-ratio"
      },
      "getMarket(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "A Storage.Market struct with the current state of the market"
      },
      "getMarketCachedIndex(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "The most recent index"
      },
      "getMarketCurrentIndex(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "The estimated current index"
      },
      "getMarketInterestRate(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "The current interest rate"
      },
      "getMarketInterestSetter(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "The interest-setter address"
      },
      "getMarketIsClosing(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "True if the market is closing"
      },
      "getMarketMarginPremium(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "The market's margin premium"
      },
      "getMarketPrice(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "The price of each atomic unit of the token"
      },
      "getMarketPriceOracle(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "The price oracle address"
      },
      "getMarketSpreadPremium(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "The market's spread premium"
      },
      "getMarketTokenAddress(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "The token address"
      },
      "getMarketTotalPar(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "The total principal amounts"
      },
      "getMarketWithInfo(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "A tuple containing the values:                   - A Storage.Market struct with the current state of the market                   - The current estimated interest index                   - The current token price                   - The current market interest rate"
      },
      "getMinBorrowedValue()": {
        "return": "The global minimum borrow value"
      },
      "getNumExcessTokens(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "The number of excess tokens"
      },
      "getNumMarkets()": {
        "return": "The number of markets"
      },
      "getRiskLimits()": {
        "return": "All global risk parameter limnits"
      },
      "getRiskParams()": {
        "return": "All global risk parameters"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "operate((address,uint256)[],(uint8,uint256,(bool,uint8,uint8,uint256),uint256,uint256,address,uint256,bytes)[])": {
        "params": {
          "accounts": "A list of all accounts that will be used in this operation. Cannot contain                  duplicates. In each action, the relevant account will be referred-to by its                  index in the list.",
          "actions": "An ordered list of all actions that will be taken in this operation. The                  actions will be processed in order."
        }
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "setOperators((address,bool)[])": {
        "params": {
          "args": "A list of OperatorArgs which have an address and a boolean. The boolean value              denotes whether to approve (true) or revoke approval (false) for that address."
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "SoloMargin"
  },
  "userdoc": {
    "methods": {
      "getAccountBalances((address,uint256))": {
        "notice": "Get an account's summary for each market."
      },
      "getAccountPar((address,uint256),uint256)": {
        "notice": "Get the principal value for a particular account and market."
      },
      "getAccountStatus((address,uint256))": {
        "notice": "Get the status of an account (Normal, Liquidating, or Vaporizing)."
      },
      "getAccountValues((address,uint256))": {
        "notice": "Get the total supplied and total borrowed value of an account."
      },
      "getAccountWei((address,uint256),uint256)": {
        "notice": "Get the token balance for a particular account and market."
      },
      "getAdjustedAccountValues((address,uint256))": {
        "notice": "Get the total supplied and total borrowed values of an account adjusted by the marginPremium of each market. Supplied values are divided by (1 + marginPremium) for each market and borrowed values are multiplied by (1 + marginPremium) for each market. Comparing these adjusted values gives the margin-ratio of the account which will be compared to the global margin-ratio when determining if the account can be liquidated."
      },
      "getEarningsRate()": {
        "notice": "Get the global earnings-rate variable that determines what percentage of the interest paid by borrowers gets passed-on to suppliers."
      },
      "getIsGlobalOperator(address)": {
        "notice": "Return true if a particular address is approved as a global operator. Such an address can act on any account as if it were the operator's own."
      },
      "getIsLocalOperator(address,address)": {
        "notice": "Return true if a particular address is approved as an operator for an owner's accounts. Approved operators can act on the accounts of the owner as if it were the operator's own."
      },
      "getLiquidationSpread()": {
        "notice": "Get the global liquidation spread. This is the spread between oracle prices that incentivizes the liquidation of risky positions."
      },
      "getLiquidationSpreadForPair(uint256,uint256)": {
        "notice": "Get the adjusted liquidation spread for some market pair. This is equal to the global liquidation spread multiplied by (1 + spreadPremium) for each of the two markets."
      },
      "getMarginRatio()": {
        "notice": "Get the global minimum margin-ratio that every position must maintain to prevent being liquidated."
      },
      "getMarket(uint256)": {
        "notice": "Get basic information about a particular market."
      },
      "getMarketCachedIndex(uint256)": {
        "notice": "Get the most recently cached interest index for a market."
      },
      "getMarketCurrentIndex(uint256)": {
        "notice": "Get the interest index for a market if it were to be updated right now."
      },
      "getMarketInterestRate(uint256)": {
        "notice": "Get the current borrower interest rate for a market."
      },
      "getMarketInterestSetter(uint256)": {
        "notice": "Get the interest-setter address for a market."
      },
      "getMarketIsClosing(uint256)": {
        "notice": "Return true if a particular market is in closing mode. Additional borrows cannot be taken from a market that is closing."
      },
      "getMarketMarginPremium(uint256)": {
        "notice": "Get the margin premium for a market. A margin premium makes it so that any positions that include the market require a higher collateralization to avoid being liquidated."
      },
      "getMarketPrice(uint256)": {
        "notice": "Get the price of the token for a market."
      },
      "getMarketPriceOracle(uint256)": {
        "notice": "Get the price oracle address for a market."
      },
      "getMarketSpreadPremium(uint256)": {
        "notice": "Get the spread premium for a market. A spread premium makes it so that any liquidations that include the market have a higher spread than the global default."
      },
      "getMarketTokenAddress(uint256)": {
        "notice": "Get the ERC20 token address for a market."
      },
      "getMarketTotalPar(uint256)": {
        "notice": "Get the total principal amounts (borrowed and supplied) for a market."
      },
      "getMarketWithInfo(uint256)": {
        "notice": "Get comprehensive information about a particular market."
      },
      "getMinBorrowedValue()": {
        "notice": "Get the global minimum-borrow value which is the minimum value of any new borrow on Solo."
      },
      "getNumExcessTokens(uint256)": {
        "notice": "Get the number of excess tokens for a market. The number of excess tokens is calculated by taking the current number of tokens held in Solo, adding the number of tokens owed to Solo by borrowers, and subtracting the number of tokens owed to suppliers by Solo."
      },
      "getNumMarkets()": {
        "notice": "Get the total number of markets."
      },
      "getRiskLimits()": {
        "notice": "Get all risk parameter limits in a single struct. These are the maximum limits at which the risk parameters can be set by the admin of Solo."
      },
      "getRiskParams()": {
        "notice": "Get all risk parameters in a single struct."
      },
      "operate((address,uint256)[],(uint8,uint256,(bool,uint8,uint8,uint256),uint256,uint256,address,uint256,bytes)[])": {
        "notice": "The main entry-point to Solo that allows users and contracts to manage accounts. Take one or more actions on one or more accounts. The msg.sender must be the owner or operator of all accounts except for those being liquidated, vaporized, or traded with. One call to operate() is considered a singular \"operation\". Account collateralization is ensured only after the completion of the entire operation."
      },
      "ownerAddMarket(address,address,address,(uint256),(uint256))": {
        "notice": "Add a new market to Solo. Must be for a previously-unsupported ERC20 token."
      },
      "ownerSetEarningsRate((uint256))": {
        "notice": "Set the global earnings-rate variable that determines what percentage of the interest paid by borrowers gets passed-on to suppliers."
      },
      "ownerSetGlobalOperator(address,bool)": {
        "notice": "Approve (or disapprove) an address that is permissioned to be an operator for all accounts in Solo. Intended only to approve smart-contracts."
      },
      "ownerSetInterestSetter(uint256,address)": {
        "notice": "Set the interest-setter for a market."
      },
      "ownerSetIsClosing(uint256,bool)": {
        "notice": "Set (or unset) the status of a market to \"closing\". The borrowedValue of a market cannot increase while its status is \"closing\"."
      },
      "ownerSetLiquidationSpread((uint256))": {
        "notice": "Set the global liquidation spread. This is the spread between oracle prices that incentivizes the liquidation of risky positions."
      },
      "ownerSetMarginPremium(uint256,(uint256))": {
        "notice": "Set a premium on the minimum margin-ratio for a market. This makes it so that any positions that include this market require a higher collateralization to avoid being liquidated."
      },
      "ownerSetMarginRatio((uint256))": {
        "notice": "Set the global minimum margin-ratio that every position must maintain to prevent being liquidated."
      },
      "ownerSetMinBorrowedValue((uint256))": {
        "notice": "Set the global minimum-borrow value which is the minimum value of any new borrow on Solo."
      },
      "ownerSetPriceOracle(uint256,address)": {
        "notice": "Set the price oracle for a market."
      },
      "ownerSetSpreadPremium(uint256,(uint256))": {
        "notice": "Set a premium on the liquidation spread for a market. This makes it so that any liquidations that include this market have a higher spread than the global default."
      },
      "ownerWithdrawExcessTokens(uint256,address)": {
        "notice": "Withdraw an ERC20 token for which there is an associated market. Only excess tokens can be withdrawn. The number of excess tokens is calculated by taking the current number of tokens held in Solo, adding the number of tokens owed to Solo by borrowers, and subtracting the number of tokens owed to suppliers by Solo."
      },
      "ownerWithdrawUnsupportedTokens(address,address)": {
        "notice": "Withdraw an ERC20 token for which there is no associated market."
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "setOperators((address,bool)[])": {
        "notice": "Approves/disapproves any number of operators. An operator is an external address that has the same permissions to manipulate an account as the owner of the account. Operators are simply addresses and therefore may either be externally-owned Ethereum accounts OR smart contracts.     * Operators are also able to act as AutoTrader contracts on behalf of the account owner if the operator is a smart contract and implements the IAutoTrader interface."
      }
    }
  }
}
{
  "contractName": "TestSoloMargin",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "spreadPremium",
          "type": "tuple"
        }
      ],
      "name": "ownerSetSpreadPremium",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "getIsGlobalOperator",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getMarketTokenAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        },
        {
          "name": "interestSetter",
          "type": "address"
        }
      ],
      "name": "ownerSetInterestSetter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "name": "owner",
              "type": "address"
            },
            {
              "name": "number",
              "type": "uint256"
            }
          ],
          "name": "account",
          "type": "tuple"
        }
      ],
      "name": "getAccountValues",
      "outputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getMarketPriceOracle",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getMarketInterestSetter",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getMarketSpreadPremium",
      "outputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getNumMarkets",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "ownerWithdrawUnsupportedTokens",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "minBorrowedValue",
          "type": "tuple"
        }
      ],
      "name": "ownerSetMinBorrowedValue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "spread",
          "type": "tuple"
        }
      ],
      "name": "ownerSetLiquidationSpread",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "earningsRate",
          "type": "tuple"
        }
      ],
      "name": "ownerSetEarningsRate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "getIsLocalOperator",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "name": "owner",
              "type": "address"
            },
            {
              "name": "number",
              "type": "uint256"
            }
          ],
          "name": "account",
          "type": "tuple"
        },
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getAccountPar",
      "outputs": [
        {
          "components": [
            {
              "name": "sign",
              "type": "bool"
            },
            {
              "name": "value",
              "type": "uint128"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "marginPremium",
          "type": "tuple"
        }
      ],
      "name": "ownerSetMarginPremium",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMarginRatio",
      "outputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getMarketCurrentIndex",
      "outputs": [
        {
          "components": [
            {
              "name": "borrow",
              "type": "uint96"
            },
            {
              "name": "supply",
              "type": "uint96"
            },
            {
              "name": "lastUpdate",
              "type": "uint32"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getMarketIsClosing",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRiskParams",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "marginRatio",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "liquidationSpread",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "earningsRate",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "minBorrowedValue",
              "type": "tuple"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "name": "owner",
              "type": "address"
            },
            {
              "name": "number",
              "type": "uint256"
            }
          ],
          "name": "account",
          "type": "tuple"
        }
      ],
      "name": "getAccountBalances",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        },
        {
          "components": [
            {
              "name": "sign",
              "type": "bool"
            },
            {
              "name": "value",
              "type": "uint128"
            }
          ],
          "name": "",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "name": "sign",
              "type": "bool"
            },
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMinBorrowedValue",
      "outputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "operator",
              "type": "address"
            },
            {
              "name": "trusted",
              "type": "bool"
            }
          ],
          "name": "args",
          "type": "tuple[]"
        }
      ],
      "name": "setOperators",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getMarketPrice",
      "outputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        },
        {
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "ownerWithdrawExcessTokens",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "priceOracle",
          "type": "address"
        },
        {
          "name": "interestSetter",
          "type": "address"
        },
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "marginPremium",
          "type": "tuple"
        },
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "spreadPremium",
          "type": "tuple"
        }
      ],
      "name": "ownerAddMarket",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "owner",
              "type": "address"
            },
            {
              "name": "number",
              "type": "uint256"
            }
          ],
          "name": "accounts",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "name": "actionType",
              "type": "uint8"
            },
            {
              "name": "accountId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "name": "sign",
                  "type": "bool"
                },
                {
                  "name": "denomination",
                  "type": "uint8"
                },
                {
                  "name": "ref",
                  "type": "uint8"
                },
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "amount",
              "type": "tuple"
            },
            {
              "name": "primaryMarketId",
              "type": "uint256"
            },
            {
              "name": "secondaryMarketId",
              "type": "uint256"
            },
            {
              "name": "otherAddress",
              "type": "address"
            },
            {
              "name": "otherAccountId",
              "type": "uint256"
            },
            {
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "actions",
          "type": "tuple[]"
        }
      ],
      "name": "operate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getMarketWithInfo",
      "outputs": [
        {
          "components": [
            {
              "name": "token",
              "type": "address"
            },
            {
              "components": [
                {
                  "name": "borrow",
                  "type": "uint128"
                },
                {
                  "name": "supply",
                  "type": "uint128"
                }
              ],
              "name": "totalPar",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "borrow",
                  "type": "uint96"
                },
                {
                  "name": "supply",
                  "type": "uint96"
                },
                {
                  "name": "lastUpdate",
                  "type": "uint32"
                }
              ],
              "name": "index",
              "type": "tuple"
            },
            {
              "name": "priceOracle",
              "type": "address"
            },
            {
              "name": "interestSetter",
              "type": "address"
            },
            {
              "components": [
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "marginPremium",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "spreadPremium",
              "type": "tuple"
            },
            {
              "name": "isClosing",
              "type": "bool"
            }
          ],
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "name": "borrow",
              "type": "uint96"
            },
            {
              "name": "supply",
              "type": "uint96"
            },
            {
              "name": "lastUpdate",
              "type": "uint32"
            }
          ],
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "ratio",
          "type": "tuple"
        }
      ],
      "name": "ownerSetMarginRatio",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLiquidationSpread",
      "outputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "name": "owner",
              "type": "address"
            },
            {
              "name": "number",
              "type": "uint256"
            }
          ],
          "name": "account",
          "type": "tuple"
        },
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getAccountWei",
      "outputs": [
        {
          "components": [
            {
              "name": "sign",
              "type": "bool"
            },
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getMarketTotalPar",
      "outputs": [
        {
          "components": [
            {
              "name": "borrow",
              "type": "uint128"
            },
            {
              "name": "supply",
              "type": "uint128"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "heldMarketId",
          "type": "uint256"
        },
        {
          "name": "owedMarketId",
          "type": "uint256"
        }
      ],
      "name": "getLiquidationSpreadForPair",
      "outputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getNumExcessTokens",
      "outputs": [
        {
          "components": [
            {
              "name": "sign",
              "type": "bool"
            },
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getMarketCachedIndex",
      "outputs": [
        {
          "components": [
            {
              "name": "borrow",
              "type": "uint96"
            },
            {
              "name": "supply",
              "type": "uint96"
            },
            {
              "name": "lastUpdate",
              "type": "uint32"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "name": "owner",
              "type": "address"
            },
            {
              "name": "number",
              "type": "uint256"
            }
          ],
          "name": "account",
          "type": "tuple"
        }
      ],
      "name": "getAccountStatus",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEarningsRate",
      "outputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        },
        {
          "name": "priceOracle",
          "type": "address"
        }
      ],
      "name": "ownerSetPriceOracle",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRiskLimits",
      "outputs": [
        {
          "components": [
            {
              "name": "marginRatioMax",
              "type": "uint64"
            },
            {
              "name": "liquidationSpreadMax",
              "type": "uint64"
            },
            {
              "name": "earningsRateMax",
              "type": "uint64"
            },
            {
              "name": "marginPremiumMax",
              "type": "uint64"
            },
            {
              "name": "spreadPremiumMax",
              "type": "uint64"
            },
            {
              "name": "minBorrowedValueMax",
              "type": "uint128"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getMarket",
      "outputs": [
        {
          "components": [
            {
              "name": "token",
              "type": "address"
            },
            {
              "components": [
                {
                  "name": "borrow",
                  "type": "uint128"
                },
                {
                  "name": "supply",
                  "type": "uint128"
                }
              ],
              "name": "totalPar",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "borrow",
                  "type": "uint96"
                },
                {
                  "name": "supply",
                  "type": "uint96"
                },
                {
                  "name": "lastUpdate",
                  "type": "uint32"
                }
              ],
              "name": "index",
              "type": "tuple"
            },
            {
              "name": "priceOracle",
              "type": "address"
            },
            {
              "name": "interestSetter",
              "type": "address"
            },
            {
              "components": [
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "marginPremium",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "spreadPremium",
              "type": "tuple"
            },
            {
              "name": "isClosing",
              "type": "bool"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        },
        {
          "name": "isClosing",
          "type": "bool"
        }
      ],
      "name": "ownerSetIsClosing",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "operator",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ownerSetGlobalOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "name": "owner",
              "type": "address"
            },
            {
              "name": "number",
              "type": "uint256"
            }
          ],
          "name": "account",
          "type": "tuple"
        }
      ],
      "name": "getAdjustedAccountValues",
      "outputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getMarketMarginPremium",
      "outputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "getMarketInterestRate",
      "outputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "marginRatio",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "liquidationSpread",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "earningsRate",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "minBorrowedValue",
              "type": "tuple"
            }
          ],
          "name": "rp",
          "type": "tuple"
        },
        {
          "components": [
            {
              "name": "marginRatioMax",
              "type": "uint64"
            },
            {
              "name": "liquidationSpreadMax",
              "type": "uint64"
            },
            {
              "name": "earningsRateMax",
              "type": "uint64"
            },
            {
              "name": "marginPremiumMax",
              "type": "uint64"
            },
            {
              "name": "spreadPremiumMax",
              "type": "uint64"
            },
            {
              "name": "minBorrowedValueMax",
              "type": "uint128"
            }
          ],
          "name": "rl",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "trusted",
          "type": "bool"
        }
      ],
      "name": "LogOperatorSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "owner",
              "type": "address"
            },
            {
              "name": "number",
              "type": "uint256"
            }
          ],
          "name": "account",
          "type": "tuple"
        },
        {
          "name": "market",
          "type": "uint256"
        },
        {
          "components": [
            {
              "name": "sign",
              "type": "bool"
            },
            {
              "name": "value",
              "type": "uint128"
            }
          ],
          "name": "newPar",
          "type": "tuple"
        }
      ],
      "name": "setAccountBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "owner",
              "type": "address"
            },
            {
              "name": "number",
              "type": "uint256"
            }
          ],
          "name": "account",
          "type": "tuple"
        },
        {
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "setAccountStatus",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "market",
          "type": "uint256"
        },
        {
          "components": [
            {
              "name": "borrow",
              "type": "uint96"
            },
            {
              "name": "supply",
              "type": "uint96"
            },
            {
              "name": "lastUpdate",
              "type": "uint32"
            }
          ],
          "name": "index",
          "type": "tuple"
        }
      ],
      "name": "setMarketIndex",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"spreadPremium\",\"type\":\"tuple\"}],\"name\":\"ownerSetSpreadPremium\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getIsGlobalOperator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getMarketTokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"},{\"name\":\"interestSetter\",\"type\":\"address\"}],\"name\":\"ownerSetInterestSetter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"account\",\"type\":\"tuple\"}],\"name\":\"getAccountValues\",\"outputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getMarketPriceOracle\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getMarketInterestSetter\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getMarketSpreadPremium\",\"outputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNumMarkets\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"ownerWithdrawUnsupportedTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"minBorrowedValue\",\"type\":\"tuple\"}],\"name\":\"ownerSetMinBorrowedValue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"spread\",\"type\":\"tuple\"}],\"name\":\"ownerSetLiquidationSpread\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"earningsRate\",\"type\":\"tuple\"}],\"name\":\"ownerSetEarningsRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getIsLocalOperator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"account\",\"type\":\"tuple\"},{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getAccountPar\",\"outputs\":[{\"components\":[{\"name\":\"sign\",\"type\":\"bool\"},{\"name\":\"value\",\"type\":\"uint128\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"marginPremium\",\"type\":\"tuple\"}],\"name\":\"ownerSetMarginPremium\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMarginRatio\",\"outputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getMarketCurrentIndex\",\"outputs\":[{\"components\":[{\"name\":\"borrow\",\"type\":\"uint96\"},{\"name\":\"supply\",\"type\":\"uint96\"},{\"name\":\"lastUpdate\",\"type\":\"uint32\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getMarketIsClosing\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRiskParams\",\"outputs\":[{\"components\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"marginRatio\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"liquidationSpread\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"earningsRate\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"minBorrowedValue\",\"type\":\"tuple\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"account\",\"type\":\"tuple\"}],\"name\":\"getAccountBalances\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"},{\"components\":[{\"name\":\"sign\",\"type\":\"bool\"},{\"name\":\"value\",\"type\":\"uint128\"}],\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"name\":\"sign\",\"type\":\"bool\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMinBorrowedValue\",\"outputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"account\",\"type\":\"tuple\"},{\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"setAccountStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"name\":\"operator\",\"type\":\"address\"},{\"name\":\"trusted\",\"type\":\"bool\"}],\"name\":\"args\",\"type\":\"tuple[]\"}],\"name\":\"setOperators\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getMarketPrice\",\"outputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"},{\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"ownerWithdrawExcessTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"priceOracle\",\"type\":\"address\"},{\"name\":\"interestSetter\",\"type\":\"address\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"marginPremium\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"spreadPremium\",\"type\":\"tuple\"}],\"name\":\"ownerAddMarket\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"accounts\",\"type\":\"tuple[]\"},{\"components\":[{\"name\":\"actionType\",\"type\":\"uint8\"},{\"name\":\"accountId\",\"type\":\"uint256\"},{\"components\":[{\"name\":\"sign\",\"type\":\"bool\"},{\"name\":\"denomination\",\"type\":\"uint8\"},{\"name\":\"ref\",\"type\":\"uint8\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"amount\",\"type\":\"tuple\"},{\"name\":\"primaryMarketId\",\"type\":\"uint256\"},{\"name\":\"secondaryMarketId\",\"type\":\"uint256\"},{\"name\":\"otherAddress\",\"type\":\"address\"},{\"name\":\"otherAccountId\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"actions\",\"type\":\"tuple[]\"}],\"name\":\"operate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"market\",\"type\":\"uint256\"},{\"components\":[{\"name\":\"borrow\",\"type\":\"uint96\"},{\"name\":\"supply\",\"type\":\"uint96\"},{\"name\":\"lastUpdate\",\"type\":\"uint32\"}],\"name\":\"index\",\"type\":\"tuple\"}],\"name\":\"setMarketIndex\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getMarketWithInfo\",\"outputs\":[{\"components\":[{\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"name\":\"borrow\",\"type\":\"uint128\"},{\"name\":\"supply\",\"type\":\"uint128\"}],\"name\":\"totalPar\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"borrow\",\"type\":\"uint96\"},{\"name\":\"supply\",\"type\":\"uint96\"},{\"name\":\"lastUpdate\",\"type\":\"uint32\"}],\"name\":\"index\",\"type\":\"tuple\"},{\"name\":\"priceOracle\",\"type\":\"address\"},{\"name\":\"interestSetter\",\"type\":\"address\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"marginPremium\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"spreadPremium\",\"type\":\"tuple\"},{\"name\":\"isClosing\",\"type\":\"bool\"}],\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"borrow\",\"type\":\"uint96\"},{\"name\":\"supply\",\"type\":\"uint96\"},{\"name\":\"lastUpdate\",\"type\":\"uint32\"}],\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ratio\",\"type\":\"tuple\"}],\"name\":\"ownerSetMarginRatio\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLiquidationSpread\",\"outputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"account\",\"type\":\"tuple\"},{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getAccountWei\",\"outputs\":[{\"components\":[{\"name\":\"sign\",\"type\":\"bool\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getMarketTotalPar\",\"outputs\":[{\"components\":[{\"name\":\"borrow\",\"type\":\"uint128\"},{\"name\":\"supply\",\"type\":\"uint128\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"heldMarketId\",\"type\":\"uint256\"},{\"name\":\"owedMarketId\",\"type\":\"uint256\"}],\"name\":\"getLiquidationSpreadForPair\",\"outputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getNumExcessTokens\",\"outputs\":[{\"components\":[{\"name\":\"sign\",\"type\":\"bool\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"account\",\"type\":\"tuple\"},{\"name\":\"market\",\"type\":\"uint256\"},{\"components\":[{\"name\":\"sign\",\"type\":\"bool\"},{\"name\":\"value\",\"type\":\"uint128\"}],\"name\":\"newPar\",\"type\":\"tuple\"}],\"name\":\"setAccountBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getMarketCachedIndex\",\"outputs\":[{\"components\":[{\"name\":\"borrow\",\"type\":\"uint96\"},{\"name\":\"supply\",\"type\":\"uint96\"},{\"name\":\"lastUpdate\",\"type\":\"uint32\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"account\",\"type\":\"tuple\"}],\"name\":\"getAccountStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEarningsRate\",\"outputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"},{\"name\":\"priceOracle\",\"type\":\"address\"}],\"name\":\"ownerSetPriceOracle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRiskLimits\",\"outputs\":[{\"components\":[{\"name\":\"marginRatioMax\",\"type\":\"uint64\"},{\"name\":\"liquidationSpreadMax\",\"type\":\"uint64\"},{\"name\":\"earningsRateMax\",\"type\":\"uint64\"},{\"name\":\"marginPremiumMax\",\"type\":\"uint64\"},{\"name\":\"spreadPremiumMax\",\"type\":\"uint64\"},{\"name\":\"minBorrowedValueMax\",\"type\":\"uint128\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getMarket\",\"outputs\":[{\"components\":[{\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"name\":\"borrow\",\"type\":\"uint128\"},{\"name\":\"supply\",\"type\":\"uint128\"}],\"name\":\"totalPar\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"borrow\",\"type\":\"uint96\"},{\"name\":\"supply\",\"type\":\"uint96\"},{\"name\":\"lastUpdate\",\"type\":\"uint32\"}],\"name\":\"index\",\"type\":\"tuple\"},{\"name\":\"priceOracle\",\"type\":\"address\"},{\"name\":\"interestSetter\",\"type\":\"address\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"marginPremium\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"spreadPremium\",\"type\":\"tuple\"},{\"name\":\"isClosing\",\"type\":\"bool\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"},{\"name\":\"isClosing\",\"type\":\"bool\"}],\"name\":\"ownerSetIsClosing\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"operator\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ownerSetGlobalOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"account\",\"type\":\"tuple\"}],\"name\":\"getAdjustedAccountValues\",\"outputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getMarketMarginPremium\",\"outputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"getMarketInterestRate\",\"outputs\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"marginRatio\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"liquidationSpread\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"earningsRate\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"minBorrowedValue\",\"type\":\"tuple\"}],\"name\":\"rp\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"marginRatioMax\",\"type\":\"uint64\"},{\"name\":\"liquidationSpreadMax\",\"type\":\"uint64\"},{\"name\":\"earningsRateMax\",\"type\":\"uint64\"},{\"name\":\"marginPremiumMax\",\"type\":\"uint64\"},{\"name\":\"spreadPremiumMax\",\"type\":\"uint64\"},{\"name\":\"minBorrowedValueMax\",\"type\":\"uint128\"}],\"name\":\"rl\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"trusted\",\"type\":\"bool\"}],\"name\":\"LogOperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"getAccountBalances((address,uint256))\":{\"params\":{\"account\":\"The account to query\"},\"return\":\"The following values:                  - The ERC20 token address for each market                  - The account's principal value for each market                  - The account's (supplied or borrowed) number of tokens for each market\"},\"getAccountPar((address,uint256),uint256)\":{\"params\":{\"account\":\"The account to query\",\"marketId\":\"The market to query\"},\"return\":\"The principal value\"},\"getAccountStatus((address,uint256))\":{\"params\":{\"account\":\"The account to query\"},\"return\":\"The account's status\"},\"getAccountValues((address,uint256))\":{\"params\":{\"account\":\"The account to query\"},\"return\":\"The following values:                  - The supplied value of the account                  - The borrowed value of the account\"},\"getAccountWei((address,uint256),uint256)\":{\"params\":{\"account\":\"The account to query\",\"marketId\":\"The market to query\"},\"return\":\"The token amount\"},\"getAdjustedAccountValues((address,uint256))\":{\"params\":{\"account\":\"The account to query\"},\"return\":\"The following values:                  - The supplied value of the account (adjusted for marginPremium)                  - The borrowed value of the account (adjusted for marginPremium)\"},\"getEarningsRate()\":{\"return\":\"The global earnings rate\"},\"getIsGlobalOperator(address)\":{\"params\":{\"operator\":\"The address to query\"},\"return\":\"True if operator is a global operator\"},\"getIsLocalOperator(address,address)\":{\"params\":{\"operator\":\"The possible operator\",\"owner\":\"The owner of the accounts\"},\"return\":\"True if operator is approved for owner's accounts\"},\"getLiquidationSpread()\":{\"return\":\"The global liquidation spread\"},\"getLiquidationSpreadForPair(uint256,uint256)\":{\"params\":{\"heldMarketId\":\"The market for which the account has collateral\",\"owedMarketId\":\"The market for which the account has borrowed tokens\"},\"return\":\"The adjusted liquidation spread\"},\"getMarginRatio()\":{\"return\":\"The global margin-ratio\"},\"getMarket(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"A Storage.Market struct with the current state of the market\"},\"getMarketCachedIndex(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"The most recent index\"},\"getMarketCurrentIndex(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"The estimated current index\"},\"getMarketInterestRate(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"The current interest rate\"},\"getMarketInterestSetter(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"The interest-setter address\"},\"getMarketIsClosing(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"True if the market is closing\"},\"getMarketMarginPremium(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"The market's margin premium\"},\"getMarketPrice(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"The price of each atomic unit of the token\"},\"getMarketPriceOracle(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"The price oracle address\"},\"getMarketSpreadPremium(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"The market's spread premium\"},\"getMarketTokenAddress(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"The token address\"},\"getMarketTotalPar(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"The total principal amounts\"},\"getMarketWithInfo(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"A tuple containing the values:                   - A Storage.Market struct with the current state of the market                   - The current estimated interest index                   - The current token price                   - The current market interest rate\"},\"getMinBorrowedValue()\":{\"return\":\"The global minimum borrow value\"},\"getNumExcessTokens(uint256)\":{\"params\":{\"marketId\":\"The market to query\"},\"return\":\"The number of excess tokens\"},\"getNumMarkets()\":{\"return\":\"The number of markets\"},\"getRiskLimits()\":{\"return\":\"All global risk parameter limnits\"},\"getRiskParams()\":{\"return\":\"All global risk parameters\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"operate((address,uint256)[],(uint8,uint256,(bool,uint8,uint8,uint256),uint256,uint256,address,uint256,bytes)[])\":{\"params\":{\"accounts\":\"A list of all accounts that will be used in this operation. Cannot contain                  duplicates. In each action, the relevant account will be referred-to by its                  index in the list.\",\"actions\":\"An ordered list of all actions that will be taken in this operation. The                  actions will be processed in order.\"}},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"setOperators((address,bool)[])\":{\"params\":{\"args\":\"A list of OperatorArgs which have an address and a boolean. The boolean value              denotes whether to approve (true) or revoke approval (false) for that address.\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"getAccountBalances((address,uint256))\":{\"notice\":\"Get an account's summary for each market.\"},\"getAccountPar((address,uint256),uint256)\":{\"notice\":\"Get the principal value for a particular account and market.\"},\"getAccountStatus((address,uint256))\":{\"notice\":\"Get the status of an account (Normal, Liquidating, or Vaporizing).\"},\"getAccountValues((address,uint256))\":{\"notice\":\"Get the total supplied and total borrowed value of an account.\"},\"getAccountWei((address,uint256),uint256)\":{\"notice\":\"Get the token balance for a particular account and market.\"},\"getAdjustedAccountValues((address,uint256))\":{\"notice\":\"Get the total supplied and total borrowed values of an account adjusted by the marginPremium of each market. Supplied values are divided by (1 + marginPremium) for each market and borrowed values are multiplied by (1 + marginPremium) for each market. Comparing these adjusted values gives the margin-ratio of the account which will be compared to the global margin-ratio when determining if the account can be liquidated.\"},\"getEarningsRate()\":{\"notice\":\"Get the global earnings-rate variable that determines what percentage of the interest paid by borrowers gets passed-on to suppliers.\"},\"getIsGlobalOperator(address)\":{\"notice\":\"Return true if a particular address is approved as a global operator. Such an address can act on any account as if it were the operator's own.\"},\"getIsLocalOperator(address,address)\":{\"notice\":\"Return true if a particular address is approved as an operator for an owner's accounts. Approved operators can act on the accounts of the owner as if it were the operator's own.\"},\"getLiquidationSpread()\":{\"notice\":\"Get the global liquidation spread. This is the spread between oracle prices that incentivizes the liquidation of risky positions.\"},\"getLiquidationSpreadForPair(uint256,uint256)\":{\"notice\":\"Get the adjusted liquidation spread for some market pair. This is equal to the global liquidation spread multiplied by (1 + spreadPremium) for each of the two markets.\"},\"getMarginRatio()\":{\"notice\":\"Get the global minimum margin-ratio that every position must maintain to prevent being liquidated.\"},\"getMarket(uint256)\":{\"notice\":\"Get basic information about a particular market.\"},\"getMarketCachedIndex(uint256)\":{\"notice\":\"Get the most recently cached interest index for a market.\"},\"getMarketCurrentIndex(uint256)\":{\"notice\":\"Get the interest index for a market if it were to be updated right now.\"},\"getMarketInterestRate(uint256)\":{\"notice\":\"Get the current borrower interest rate for a market.\"},\"getMarketInterestSetter(uint256)\":{\"notice\":\"Get the interest-setter address for a market.\"},\"getMarketIsClosing(uint256)\":{\"notice\":\"Return true if a particular market is in closing mode. Additional borrows cannot be taken from a market that is closing.\"},\"getMarketMarginPremium(uint256)\":{\"notice\":\"Get the margin premium for a market. A margin premium makes it so that any positions that include the market require a higher collateralization to avoid being liquidated.\"},\"getMarketPrice(uint256)\":{\"notice\":\"Get the price of the token for a market.\"},\"getMarketPriceOracle(uint256)\":{\"notice\":\"Get the price oracle address for a market.\"},\"getMarketSpreadPremium(uint256)\":{\"notice\":\"Get the spread premium for a market. A spread premium makes it so that any liquidations that include the market have a higher spread than the global default.\"},\"getMarketTokenAddress(uint256)\":{\"notice\":\"Get the ERC20 token address for a market.\"},\"getMarketTotalPar(uint256)\":{\"notice\":\"Get the total principal amounts (borrowed and supplied) for a market.\"},\"getMarketWithInfo(uint256)\":{\"notice\":\"Get comprehensive information about a particular market.\"},\"getMinBorrowedValue()\":{\"notice\":\"Get the global minimum-borrow value which is the minimum value of any new borrow on Solo.\"},\"getNumExcessTokens(uint256)\":{\"notice\":\"Get the number of excess tokens for a market. The number of excess tokens is calculated by taking the current number of tokens held in Solo, adding the number of tokens owed to Solo by borrowers, and subtracting the number of tokens owed to suppliers by Solo.\"},\"getNumMarkets()\":{\"notice\":\"Get the total number of markets.\"},\"getRiskLimits()\":{\"notice\":\"Get all risk parameter limits in a single struct. These are the maximum limits at which the risk parameters can be set by the admin of Solo.\"},\"getRiskParams()\":{\"notice\":\"Get all risk parameters in a single struct.\"},\"operate((address,uint256)[],(uint8,uint256,(bool,uint8,uint8,uint256),uint256,uint256,address,uint256,bytes)[])\":{\"notice\":\"The main entry-point to Solo that allows users and contracts to manage accounts. Take one or more actions on one or more accounts. The msg.sender must be the owner or operator of all accounts except for those being liquidated, vaporized, or traded with. One call to operate() is considered a singular \\\"operation\\\". Account collateralization is ensured only after the completion of the entire operation.\"},\"ownerAddMarket(address,address,address,(uint256),(uint256))\":{\"notice\":\"Add a new market to Solo. Must be for a previously-unsupported ERC20 token.\"},\"ownerSetEarningsRate((uint256))\":{\"notice\":\"Set the global earnings-rate variable that determines what percentage of the interest paid by borrowers gets passed-on to suppliers.\"},\"ownerSetGlobalOperator(address,bool)\":{\"notice\":\"Approve (or disapprove) an address that is permissioned to be an operator for all accounts in Solo. Intended only to approve smart-contracts.\"},\"ownerSetInterestSetter(uint256,address)\":{\"notice\":\"Set the interest-setter for a market.\"},\"ownerSetIsClosing(uint256,bool)\":{\"notice\":\"Set (or unset) the status of a market to \\\"closing\\\". The borrowedValue of a market cannot increase while its status is \\\"closing\\\".\"},\"ownerSetLiquidationSpread((uint256))\":{\"notice\":\"Set the global liquidation spread. This is the spread between oracle prices that incentivizes the liquidation of risky positions.\"},\"ownerSetMarginPremium(uint256,(uint256))\":{\"notice\":\"Set a premium on the minimum margin-ratio for a market. This makes it so that any positions that include this market require a higher collateralization to avoid being liquidated.\"},\"ownerSetMarginRatio((uint256))\":{\"notice\":\"Set the global minimum margin-ratio that every position must maintain to prevent being liquidated.\"},\"ownerSetMinBorrowedValue((uint256))\":{\"notice\":\"Set the global minimum-borrow value which is the minimum value of any new borrow on Solo.\"},\"ownerSetPriceOracle(uint256,address)\":{\"notice\":\"Set the price oracle for a market.\"},\"ownerSetSpreadPremium(uint256,(uint256))\":{\"notice\":\"Set a premium on the liquidation spread for a market. This makes it so that any liquidations that include this market have a higher spread than the global default.\"},\"ownerWithdrawExcessTokens(uint256,address)\":{\"notice\":\"Withdraw an ERC20 token for which there is an associated market. Only excess tokens can be withdrawn. The number of excess tokens is calculated by taking the current number of tokens held in Solo, adding the number of tokens owed to Solo by borrowers, and subtracting the number of tokens owed to suppliers by Solo.\"},\"ownerWithdrawUnsupportedTokens(address,address)\":{\"notice\":\"Withdraw an ERC20 token for which there is no associated market.\"},\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"setOperators((address,bool)[])\":{\"notice\":\"Approves/disapproves any number of operators. An operator is an external address that has the same permissions to manipulate an account as the owner of the account. Operators are simply addresses and therefore may either be externally-owned Ethereum accounts OR smart contracts.     * Operators are also able to act as AutoTrader contracts on behalf of the account owner if the operator is a smart contract and implements the IAutoTrader interface.\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/testing/TestSoloMargin.sol\":\"TestSoloMargin\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]},\"openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x58e8ca389c46941a0bfc26b91025d3427864bd9070a7762f90d29677cd3f3dd8\",\"urls\":[\"bzzr://5c079549429384de9624a5686a33649e7e637bf0b715773182e77dffc9ea4c38\"]},\"project:/contracts/protocol/Admin.sol\":{\"keccak256\":\"0xf0c68f3d62c7f3e6138b8060c5e4de0498e6840ece10dbf5bff7eb965e249242\",\"urls\":[\"bzzr://ca7761cde5dc880b9a52e0c109ab0f2c1e4f503499f88a3015ee8ce73041e2be\"]},\"project:/contracts/protocol/Getters.sol\":{\"keccak256\":\"0x37cfba49699e037c12bdb52c00a72c1714f7e00334d16dba27b9072b9cb8705f\",\"urls\":[\"bzzr://92838931cb66fe28b11a6301ab841e236ff21595a692d142820021b394e525af\"]},\"project:/contracts/protocol/Operation.sol\":{\"keccak256\":\"0x851643bbda019072de0ee1acab8ae730b2917edb8efda0800d77be1607a60d9f\",\"urls\":[\"bzzr://c010a5ab40450595c71643ae6a1a0924dd1d12df05b672a7429bdf0801b98bbb\"]},\"project:/contracts/protocol/Permission.sol\":{\"keccak256\":\"0x979cc19cdbfee86afc8c3fb4992e6adbed14bb91bc0ba3c555ae4b385c5d1800\",\"urls\":[\"bzzr://f00315a9a80620a1c2c7760fda6900eee2786f1f5fe59aeea56900b214c1d630\"]},\"project:/contracts/protocol/SoloMargin.sol\":{\"keccak256\":\"0xf7d64da95033d6c8740872a34ad8bf324417712df69cfe6aa31b7f4b125f154f\",\"urls\":[\"bzzr://bea6fbd9b9ca5e6bcbfa67bb76db0b28b8f715c1fe4191529fcf428abd16613c\"]},\"project:/contracts/protocol/State.sol\":{\"keccak256\":\"0x5714e47e67861242ddb9563681aeccf0e6f1c42dec9e27ec29ff248785cdd25a\",\"urls\":[\"bzzr://4862c97a9f382291472c3954fd3dc279b00ae3d37daed8287491e5a9b9b5d584\"]},\"project:/contracts/protocol/impl/AdminImpl.sol\":{\"keccak256\":\"0x6c37d2a0a51367c837224e8e56f8ccb30d8a51abd96f2280f25a5bd263b11bdf\",\"urls\":[\"bzzr://8d7208c7261de48b49450e12496db21b994d4b2bd8143842be2f9c78d7db1ce2\"]},\"project:/contracts/protocol/impl/OperationImpl.sol\":{\"keccak256\":\"0x7042bf56dd98e9fef064493bfd79e1710fd0586fab5b98dcbc0ddebafc1fa3c5\",\"urls\":[\"bzzr://cd20b5da43faff4160dcb0298600c8edfaf8647e818a2ca2a34db47f30d57e72\"]},\"project:/contracts/protocol/interfaces/IAutoTrader.sol\":{\"keccak256\":\"0xa416051ccd2a83cc5a77e86591a4a3fc093ceb5f42ca7b1d7c8e8d35c79ddb5b\",\"urls\":[\"bzzr://9ad6198a2fcb288d5485b3f2e9042815ec644f85c0ab884b0a2667250780cee5\"]},\"project:/contracts/protocol/interfaces/ICallee.sol\":{\"keccak256\":\"0x3904aba675b36e1e5e98f8e1e20404287da48adefd527fe8f2e21d9d0439b4ac\",\"urls\":[\"bzzr://1097cf3fd9bdce4abf90e2ce0611c45e39c8a33baf7bdb9e1996e7718530c124\"]},\"project:/contracts/protocol/interfaces/IErc20.sol\":{\"keccak256\":\"0x6a972ae5d9fcb4e3f44589dc77ac3c168061c09a0a9001f29fdc2e361d044946\",\"urls\":[\"bzzr://e467ccb83dd015c9ca4862f3e95b7fd8c17c1cfd0a15a3dc799209967cf537ac\"]},\"project:/contracts/protocol/interfaces/IExchangeWrapper.sol\":{\"keccak256\":\"0xa4983e5de7559a9e7236e71d3d089a85eea413ac1f03f8365bac3c5eb0ce0ac8\",\"urls\":[\"bzzr://80338d73c68e6c6649def643dc4c6ae4b1cee4c8e117435f6becc30846e85fa2\"]},\"project:/contracts/protocol/interfaces/IInterestSetter.sol\":{\"keccak256\":\"0xb675679876a8163f224dfc4f6598a168f8248400a49ab836fdd2a7f4d25a1683\",\"urls\":[\"bzzr://1597c0ec5015093d8d0a91af168e5e89c91ba615abc65048ed721195040ec0f8\"]},\"project:/contracts/protocol/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x647a7519803283e4152e0617881f0cf2766f8968cd1de9f28d624ee164adf19a\",\"urls\":[\"bzzr://0cb0053f7cfea2c823036aef20a99b63e5037fa9de5d55116a10374a45c7b828\"]},\"project:/contracts/protocol/lib/Account.sol\":{\"keccak256\":\"0x4c27c617b01972ddb8ca160454284ed09f3ec6f7abd667c31ca9f38805738d33\",\"urls\":[\"bzzr://ad0dd4229cea4f8c5b877a653766cf413d733e442cfc448ffd715e786d7b5216\"]},\"project:/contracts/protocol/lib/Actions.sol\":{\"keccak256\":\"0xa3def9f1d58c1a353cd5412df8027674226000fd0b1cf52f3e11d6b4428fe2dc\",\"urls\":[\"bzzr://955e36c7bd9e222b58764b755169056c4225fc0561fdd88bb71ce7f1e2782a41\"]},\"project:/contracts/protocol/lib/Cache.sol\":{\"keccak256\":\"0x5caa444f1798e385674713fef9b8190088f3a31655ae918340ff755e26566c82\",\"urls\":[\"bzzr://23b8e2e44d3db5588ff1311520e24272255f7b8d23c0923e955f51d5a4397beb\"]},\"project:/contracts/protocol/lib/Decimal.sol\":{\"keccak256\":\"0xfddbafc617a77d1db59ddbc596f6aa22931a9a656c0755887648c09bb038ae8c\",\"urls\":[\"bzzr://40396a3a6ded6bb9fe5b5c4b0318f7518ce23c925b104f557310a3775e6e383d\"]},\"project:/contracts/protocol/lib/Events.sol\":{\"keccak256\":\"0x8467cdc3f69a617a6ae9b3c0921abce180ebcfb0bc9deb6f59f96f2e149b9ad5\",\"urls\":[\"bzzr://44973ebae91505e96610b4732d31b98d2bbab2b1b48875e528ba6e26cbd097e4\"]},\"project:/contracts/protocol/lib/Exchange.sol\":{\"keccak256\":\"0xaea9d9746796378d2e191ccf47569c0acc728342ff948817061179724d4f52e8\",\"urls\":[\"bzzr://2b73f2c0c7726ebea3301504334110b5b2a2d3271fe298bef29b8ccccaf0bb6a\"]},\"project:/contracts/protocol/lib/Interest.sol\":{\"keccak256\":\"0x657f152e3853377ea93d101e145c2f2969fb6fbde025cedd10e7ee17c8bd5c4c\",\"urls\":[\"bzzr://ec53ea6522f8a1ae4150e1c8718f6d7d20d1755b93f4ee6268fd67bd979fa0f9\"]},\"project:/contracts/protocol/lib/Math.sol\":{\"keccak256\":\"0x05162cffa6d5479b6555e03af67b75e63d85272a3c3d3d2630a127ffa811ba41\",\"urls\":[\"bzzr://0e784dccf35201ef16030ec531028252d590936d75f0200f368a7e5981046af4\"]},\"project:/contracts/protocol/lib/Monetary.sol\":{\"keccak256\":\"0x6f876a958c45fb1f2cefce1d7ee0ceb610fbe393e0040ad2d5680e0aa5536e54\",\"urls\":[\"bzzr://8b027c6ce5cd901a634dab7de74d617098b706d50b1c2ea0636406e021ea2815\"]},\"project:/contracts/protocol/lib/Require.sol\":{\"keccak256\":\"0x6ecb512d52bb5cb36ba26b98877240e0b23eb3310df5dc61f82c655dc974d04b\",\"urls\":[\"bzzr://826485117e00106f438a7e64ecc32b2c3705e02d9bd6035dbdc5f9faaa19482c\"]},\"project:/contracts/protocol/lib/Storage.sol\":{\"keccak256\":\"0x862bb5cf49dd4415b2659d2815021bb97392d3bd11a32ae2803d9f85ecc947b4\",\"urls\":[\"bzzr://3c48763c77cfd222a379a7be791a4341f355e76f35bc4c62e16264fa0f71f23e\"]},\"project:/contracts/protocol/lib/Time.sol\":{\"keccak256\":\"0x6523f89764a33b986f6655b5a0fb5b375103153be606b07a9fa95ceb2b93c2f6\",\"urls\":[\"bzzr://61ff7be71d666649cf1b78c2d9950e0d58322932e7e5f6742adbe511e864cd51\"]},\"project:/contracts/protocol/lib/Token.sol\":{\"keccak256\":\"0x7fff4d94f462515466ed263d686abb7fff9b6d6c95a28662a64a8424f5d95a23\",\"urls\":[\"bzzr://41bc60c90477c5ddab82a7760c652d87cce21dadb00456e028ff37b849bd13f4\"]},\"project:/contracts/protocol/lib/Types.sol\":{\"keccak256\":\"0x35c04c154e9ef818a3e1b59eb748565645864d5f8f2bc696c1f425a8ade9ab00\",\"urls\":[\"bzzr://8b2db9cb583f79fc2b74a70b270667f6a3bc54c3afef6a2d56e0d2ec5b8ca725\"]},\"project:/contracts/testing/TestSoloMargin.sol\":{\"keccak256\":\"0xc65cdf9c5a1b93508c32172fb0011139a5f271670c301078014afdb8829d5d81\",\"urls\":[\"bzzr://e5453e2501cfe440c6341d08176207c72a48e7f2f81f509de4e6e4e799dbdbd8\"]}},\"version\":1}",
  "bytecode": "0x60806040527f4765747465727300000000000000000000000000000000000000000000000000600d553480156200003557600080fd5b506040516101408062004d3383398101806040526200005891908101906200033d565b600b8054600160a060020a03191633179081905560405183918391600160a060020a0391909116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36001600c5581515160055560208083015151600655604080840151516007556060938401515160085582516009805493850151928501519585015167ffffffffffffffff199485166001604060020a0393841617604060020a608060020a03191668010000000000000000948416850217608060020a60c060020a0319167001000000000000000000000000000000009784169790970296909617600160c060020a0316780100000000000000000000000000000000000000000000000096831696909602959095179094556080830151600a805460a09095015194909316941693909317604060020a60c060020a0319166001608060020a0390921690920217905550620003bf9050565b600060208284031215620001c757600080fd5b620001d360206200037d565b90506000620001e3848462000321565b82525092915050565b600060c08284031215620001ff57600080fd5b6200020b60c06200037d565b905060006200021b84846200032f565b82525060206200022e848483016200032f565b602083015250604062000244848285016200032f565b60408301525060606200025a848285016200032f565b606083015250608062000270848285016200032f565b60808301525060a062000286848285016200030c565b60a08301525092915050565b600060808284031215620002a557600080fd5b620002b160806200037d565b90506000620002c18484620001b4565b8252506020620002d484848301620001b4565b6020830152506040620002ea84828501620001b4565b60408301525060606200030084828501620001b4565b60608301525092915050565b60006200031a8251620003a4565b9392505050565b60006200031a8251620003b0565b60006200031a8251620003b3565b60008061014083850312156200035257600080fd5b600062000360858562000292565b92505060806200037385828601620001ec565b9150509250929050565b6040518181016001604060020a03811182821017156200039c57600080fd5b604052919050565b6001608060020a031690565b90565b6001604060020a031690565b61496480620003cf6000396000f3fe608060405234801561001057600080fd5b5060043610610369576000357c0100000000000000000000000000000000000000000000000000000000900480638da5cb5b116101da578063d96e406d11610116578063eb44fdd3116100bf578063f2fde38b11610099578063f2fde38b14610771578063f941605214610784578063fd04b60614610797578063fd47eda6146107aa57610369565b8063eb44fdd31461072b578063ef6957d01461074b578063f2901ae21461075e57610369565b8063e5520228116100f0578063e5520228146106fb578063e8e72f7514610703578063eb1c6e6b1461071657610369565b8063d96e406d146106b5578063deec053d146106c8578063e51bfcb4146106db57610369565b8063b548b89211610183578063c190c2ec1161015d578063c190c2ec1461064f578063cb04a34c1461066f578063d24c48bc1461068f578063d5ecf7c5146106a257610369565b8063b548b89214610611578063c0bb72b714610634578063c14609421461064757610369565b8063982f323c116101b4578063982f323c146105d8578063a67a6a45146105eb578063b42cbcd3146105fe57610369565b80638da5cb5b146105b55780638f32d59b146105bd5780638f6bc659146105c557610369565b80633a031bf0116102a957806369794795116102525780637e9eaf411161022c5780637e9eaf4114610574578063835666701461057c57806385b53fc81461058f5780638928378e146105a257610369565b806369794795146105355780636a8194e71461054a578063715018a61461056c57610369565b80634f3c1542116102835780634f3c1542146104fa57806356ea84b2146105025780635ac7d17c1461052257610369565b80633a031bf0146104b457806347d1b53c146104c75780634be87414146104e757610369565b8063197f0f05116103165780632a560845116102f05780632a560845146104685780632e822af31461047b5780633063bce21461048e578063387a498a146104a157610369565b8063197f0f05146104205780631a7777bb14610433578063295c39a51461045357610369565b8063121fb72f11610347578063121fb72f146103cc578063124f914c146103df578063133683641461040057610369565b8063042069d61461036e578063052f72d714610383578063062bd3e9146103ac575b600080fd5b61038161037c366004613ce6565b6107bd565b005b6103966103913660046139a4565b610871565b6040516103a39190614476565b60405180910390f35b6103bf6103ba366004613c3c565b61088b565b6040516103a391906143ec565b6103816103da366004613cb6565b6108a7565b6103f26103ed366004613b53565b610918565b6040516103a39291906146cc565b61041361040e366004613c3c565b61093c565b6040516103a39190614484565b61041361042e366004613c3c565b610973565b610446610441366004613c3c565b6109aa565b6040516103a391906144b1565b61045b6109e1565b6040516103a391906146e8565b61045b6104763660046139c2565b6109e7565b610381610489366004613b35565b610ac1565b61038161049c366004613b35565b610b72565b6103816104af366004613b35565b610be1565b6103966104c23660046139c2565b610c50565b6104da6104d5366004613ba1565b610c6c565b6040516103a39190614515565b6103816104f5366004613ce6565b610c8f565b610446610d00565b610515610510366004613c3c565b610d1c565b6040516103a391906144bf565b610396610530366004613c3c565b610d51565b61053d610d75565b6040516103a39190614531565b61055d610558366004613b53565b610dd1565b6040516103a39392919061443d565b610381610f3f565b610446610fbf565b61038161058a366004613b71565b610fdb565b61038161059d366004613b00565b611054565b6104466105b0366004613c3c565b611137565b6103bf611159565b610396611175565b61045b6105d3366004613c78565b611193565b6103816105e6366004613a2c565b611206565b6103816105f9366004613aa1565b6112c3565b61038161060c366004613d16565b611323565b61062461061f366004613c3c565b6114c8565b6040516103a394939291906144dc565b610381610642366004613b35565b611524565b610446611593565b61066261065d366004613ba1565b6115af565b6040516103a391906146da565b61068261067d366004613c3c565b6115ef565b6040516103a391906146be565b61044661069d366004613d46565b611611565b6106626106b0366004613c3c565b61163d565b6103816106c3366004613bd1565b61165f565b6105156106d6366004613c3c565b611994565b6106ee6106e9366004613b53565b6119b6565b6040516103a39190614492565b6104466119c8565b610381610711366004613cb6565b6119e4565b61071e611a55565b6040516103a39190614523565b61073e610739366004613c3c565b611af7565b6040516103a391906144cd565b610381610759366004613c97565b611c36565b61038161076c3660046139fc565b611ca7565b61038161077f3660046139a4565b611d18565b6103f2610792366004613b53565b611d35565b6104466107a5366004613c3c565b611d50565b6104466107b8366004613c3c565b611d87565b6107c5611175565b6107ce57600080fd5b600c8054600101908190556040517f8854ab3e00000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________90638854ab3e9061082e9060009087908790600401614696565b60006040518083038186803b15801561084657600080fd5b505af415801561085a573d6000803e3d6000fd5b50505050600c54811461086c57600080fd5b505050565b6000610883818363ffffffff611dbc16565b90505b919050565b600061089682611deb565b61088360008363ffffffff611e1e16565b6108af611175565b6108b857600080fd5b600c8054600101908190556040517faa92e34800000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________9063aa92e3489061082e906000908790879060040161466e565b61092061335e565b61092861335e565b610933836000611e4a565b91509150915091565b600061094782611deb565b5060009081526001602052604090206003015473ffffffffffffffffffffffffffffffffffffffff1690565b600061097e82611deb565b5060009081526001602052604090206004015473ffffffffffffffffffffffffffffffffffffffff1690565b6109b261335e565b6109bb82611deb565b506000908152600160209081526040918290208251918201909252600690910154815290565b60005490565b60006109f1611175565b6109fa57600080fd5b600c8054600101908190556040517fdd32998a00000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________9063dd32998a90610a5a906000908890889060040161453f565b60206040518083038186803b158015610a7257600080fd5b505af4158015610a86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610aaa9190810190613c5a565b9150600c548114610aba57600080fd5b5092915050565b610ac9611175565b610ad257600080fd5b600c8054600101908190556040517ff9cacc4c00000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________9063f9cacc4c90610b3090600090869060040161461d565b60006040518083038186803b158015610b4857600080fd5b505af4158015610b5c573d6000803e3d6000fd5b50505050600c548114610b6e57600080fd5b5050565b610b7a611175565b610b8357600080fd5b600c8054600101908190556040517f0f44e6bc00000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________90630f44e6bc90610b3090600090869060040161461d565b610be9611175565b610bf257600080fd5b600c8054600101908190556040517f311401d000000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________9063311401d090610b3090600090869060040161461d565b6000610c6381848463ffffffff611ed616565b90505b92915050565b610c74613371565b610c7d82611deb565b610c636000848463ffffffff611f1616565b610c97611175565b610ca057600080fd5b600c8054600101908190556040517f7335079b00000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________90637335079b9061082e9060009087908790600401614696565b610d0861335e565b506040805160208101909152600554815290565b610d24613388565b610d2d82611deb565b61088382610d4260008263ffffffff611f9216565b6000919063ffffffff61201616565b6000610d5c82611deb565b5060009081526001602052604090206007015460ff1690565b610d7d6133a8565b506040805160a0810182526005546080820190815281528151602081810184526006548252808301919091528251808201845260075481528284015282519081019092526008548252606081019190915290565b6060806060600080600001549050606081604051908082528060200260200182016040528015610e0b578160200160208202803883390190505b509050606082604051908082528060200260200182016040528015610e4a57816020015b610e37613371565b815260200190600190039081610e2f5790505b509050606083604051908082528060200260200182016040528015610e8957816020015b610e76613371565b815260200190600190039081610e6e5790505b50905060005b84811015610f3057610ea08161088b565b848281518110610eac57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050610ef08982610c6c565b838281518110610efc57fe5b6020026020010181905250610f1189826115af565b828281518110610f1d57fe5b6020908102919091010152600101610e8f565b50919790965090945092505050565b610f47611175565b610f5057600080fd5b600b5460405160009173ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600b80547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b610fc761335e565b506040805160208101909152600854815290565b815173ffffffffffffffffffffffffffffffffffffffff16600090815260026020818152604080842082870151855290915290912060019081018054849391927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0090911691849081111561104b57fe5b02179055505050565b60005b8151811015610b6e57600082828151811061106e57fe5b6020026020010151600001519050600083838151811061108a57fe5b60209081029190910181015181015133600081815260038452604080822073ffffffffffffffffffffffffffffffffffffffff8816835290945283902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683151517905591519092507f4d7f317d2088d039c2a95a09fcbf9cc9191fad5905f883c937cc3d317c4a63279061112590859085906143fa565b60405180910390a25050600101611057565b61113f61335e565b61114882611deb565b61088360008363ffffffff61206e16565b600b5473ffffffffffffffffffffffffffffffffffffffff1690565b600b5473ffffffffffffffffffffffffffffffffffffffff16331490565b600061119d611175565b6111a657600080fd5b600c8054600101908190556040517fb25328e000000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________9063b25328e090610a5a9060009088908890600401614638565b61120e611175565b61121757600080fd5b600c8054600101908190556040517f48d0648400000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________906348d064849061127d906000908a908a908a908a908a9060040161458f565b60006040518083038186803b15801561129557600080fd5b505af41580156112a9573d6000803e3d6000fd5b50505050600c5481146112bb57600080fd5b505050505050565b600c8054600101908190556040517fbd76ecfd00000000000000000000000000000000000000000000000000000000815273__OperationImpl_________________________9063bd76ecfd9061082e90600090879087906004016145e9565b61132b613388565b5060008281526001602090815260409182902082516060810184526002909101546bffffffffffffffffffffffff80821683526c0100000000000000000000000082048116938301939093527801000000000000000000000000000000000000000000000000900463ffffffff16928101929092528251166113ba5780516bffffffffffffffffffffffff1682525b60208201516bffffffffffffffffffffffff166113ea576020808201516bffffffffffffffffffffffff16908301525b5060009182526001602090815260409283902082516002909101805492840151939094015163ffffffff167801000000000000000000000000000000000000000000000000027fffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffff6bffffffffffffffffffffffff9485166c01000000000000000000000000027fffffffffffffffff000000000000000000000000ffffffffffffffffffffffff959093167fffffffffffffffffffffffffffffffffffffffff00000000000000000000000090941693909317939093161716179055565b6114d06133e7565b6114d8613388565b6114e061335e565b6114e861335e565b6114f185611deb565b6114fa85611af7565b61150386610d1c565b61150c87611137565b61151588611d87565b93509350935093509193509193565b61152c611175565b61153557600080fd5b600c8054600101908190556040517f54dd351600000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________906354dd351690610b3090600090869060040161461d565b61159b61335e565b506040805160208101909152600654815290565b6115b7613371565b6115c082611deb565b610c636115d56000858563ffffffff611f1616565b6115ea84610d4260008263ffffffff611f9216565b6121b7565b6115f7613371565b61160082611deb565b61088360008363ffffffff61226816565b61161961335e565b61162283611deb565b61162b82611deb565b610c636000848463ffffffff6122c816565b611645613371565b61164e82611deb565b61088360008363ffffffff61235e16565b611667613371565b50825173ffffffffffffffffffffffffffffffffffffffff166000908152600260209081526040808320828701518452825280832085845282529182902082518084019093525460ff81161515835261010090046fffffffffffffffffffffffffffffffff16908201526116d9613371565b506000838152600160208181526040928390208351808501909452909101546fffffffffffffffffffffffffffffffff808216845270010000000000000000000000000000000090910416908201528151156117925761177661177183602001516fffffffffffffffffffffffffffffffff1683602001516fffffffffffffffffffffffffffffffff1661242490919063ffffffff16565b612439565b6fffffffffffffffffffffffffffffffff1660208201526117d7565b602082015181516117c291611771916fffffffffffffffffffffffffffffffff908116911663ffffffff61242416565b6fffffffffffffffffffffffffffffffff1681525b82511561183c5761182061177184602001516fffffffffffffffffffffffffffffffff1683602001516fffffffffffffffffffffffffffffffff1661249b90919063ffffffff16565b6fffffffffffffffffffffffffffffffff166020820152611881565b6020830151815161186c91611771916fffffffffffffffffffffffffffffffff908116911663ffffffff61249b16565b6fffffffffffffffffffffffffffffffff1681525b6000848152600160208181526040808420855193018054958301516fffffffffffffffffffffffffffffffff908116700100000000000000000000000000000000029481167fffffffffffffffffffffffffffffffff0000000000000000000000000000000090971696909617861693909317909255875173ffffffffffffffffffffffffffffffffffffffff1683526002815281832097810151835296875280822095825294865293909320825181549390950151909316610100027fffffffffffffffffffffffffffffff00000000000000000000000000000000ff9415157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00909316929092179390931617905550565b61199c613388565b6119a582611deb565b61088360008363ffffffff611f9216565b6000610883818363ffffffff6124ad16565b6119d061335e565b506040805160208101909152600754815290565b6119ec611175565b6119f557600080fd5b600c8054600101908190556040517f8c5dabd100000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________90638c5dabd19061082e906000908790879060040161466e565b611a5d61345a565b506040805160c08101825260095467ffffffffffffffff808216835268010000000000000000808304821660208501527001000000000000000000000000000000008304821694840194909452780100000000000000000000000000000000000000000000000090910481166060830152600a549081166080830152919091046fffffffffffffffffffffffffffffffff1660a082015290565b611aff6133e7565b611b0882611deb565b50600090815260016020818152604092839020835161010081018552815473ffffffffffffffffffffffffffffffffffffffff908116825285518087018752948301546fffffffffffffffffffffffffffffffff808216875270010000000000000000000000000000000090910416858501528184019490945284516060808201875260028401546bffffffffffffffffffffffff80821684526c01000000000000000000000000820416838701527801000000000000000000000000000000000000000000000000900463ffffffff168288015282870191909152600383015485169082015260048201549093166080840152835180830185526005820154815260a084015283519182019093526006830154815260c082015260079091015460ff16151560e082015290565b611c3e611175565b611c4757600080fd5b600c8054600101908190556040517f10c87b0600000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________906310c87b069061082e9060009087908790600401614653565b611caf611175565b611cb857600080fd5b600c8054600101908190556040517fe80f802400000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________9063e80f80249061082e9060009087908790600401614567565b611d20611175565b611d2957600080fd5b611d32816124ef565b50565b611d3d61335e565b611d4561335e565b610933836001611e4a565b611d5861335e565b611d6182611deb565b506000908152600160209081526040918290208251918201909252600590910154815290565b611d8f61335e565b611d9882611deb565b61088382611dad60008263ffffffff611f9216565b6000919063ffffffff61259d16565b73ffffffffffffffffffffffffffffffffffffffff166000908152600491909101602052604090205460ff1690565b611d3260008001548210600d547f4d61726b6574204f4f42000000000000000000000000000000000000000000006126c4565b6000908152600191909101602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b611e5261335e565b611e5a61335e565b600054611e6561348f565b611e6e82612775565b905060005b82811015611eb557611e95611e906000898463ffffffff611f1616565b6127cb565b611ead57611eab8260008363ffffffff6127e516565b505b600101611e73565b50611ec9600087838863ffffffff6128bf16565b9350935050509250929050565b73ffffffffffffffffffffffffffffffffffffffff808316600090815260038501602090815260408083209385168352929052205460ff165b9392505050565b611f1e613371565b50815173ffffffffffffffffffffffffffffffffffffffff1660009081526002840160209081526040808320828601518452825280832084845282529182902082518084019093525460ff8116151583526fffffffffffffffffffffffffffffffff61010090910416908201529392505050565b611f9a613388565b506000908152600191909101602090815260409182902082516060810184526002909101546bffffffffffffffffffffffff80821683526c0100000000000000000000000082041692820192909252780100000000000000000000000000000000000000000000000090910463ffffffff169181019190915290565b61201e613388565b61202661335e565b61203785858563ffffffff61259d16565b9050612065838261204e888863ffffffff61226816565b604080516020810190915260078a01548152612a12565b95945050505050565b61207661335e565b600082815260018401602052604090206003015473ffffffffffffffffffffffffffffffffffffffff166120a861335e565b73ffffffffffffffffffffffffffffffffffffffff82166341976e096120d4878763ffffffff611e1e16565b6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161210c91906143ec565b60206040518083038186803b15801561212457600080fd5b505afa158015612138573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061215c9190810190613c1e565b80519091506121af9015157f53746f72616765000000000000000000000000000000000000000000000000007f50726963652063616e6e6f74206265207a65726f00000000000000000000000087612b7c565b949350505050565b6121bf613371565b602083015183516fffffffffffffffffffffffffffffffff909116901561222b576040805180820190915260018152602084810151908201906122209084906bffffffffffffffffffffffff16670de0b6b3a764000063ffffffff612c1a16565b815250915050610c66565b6040805180820190915260008152835160208201906122209084906bffffffffffffffffffffffff16670de0b6b3a764000063ffffffff612c3c16565b612270613371565b506000818152600180840160209081526040928390208351808501909452909101546fffffffffffffffffffffffffffffffff8082168452700100000000000000000000000000000000909104169082015292915050565b6122d061335e565b6006808501546000858152600187016020908152604091829020825191820190925292015482529061230c90829061230790612c89565b612cc0565b905061234781612307876001016000878152602001908152602001600020600601604051806020016040529081600082015481525050612c89565b604080516020810190915290815295945050505050565b612366613371565b61236e613388565b61237e848463ffffffff611f9216565b9050612388613371565b612398858563ffffffff61226816565b905060006123ac868663ffffffff611e1e16565b90506123b6613371565b60405180604001604052806001151581526020016123d48430612cd9565b905290506123e0613371565b6123e8613371565b6123f28587612d7e565b90925090506124178261240b858463ffffffff612e2616565b9063ffffffff612e2616565b9998505050505050505050565b60008282111561243357600080fd5b50900390565b6000816108836fffffffffffffffffffffffffffffffff821682147f4d617468000000000000000000000000000000000000000000000000000000007f556e73616665206361737420746f2075696e74313238000000000000000000006126c4565b600082820183811015610c6357600080fd5b805173ffffffffffffffffffffffffffffffffffffffff1660009081526002929092016020908152604080842092820151845291905290206001015460ff1690565b73ffffffffffffffffffffffffffffffffffffffff811661250f57600080fd5b600b5460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6125a561335e565b6125ad613371565b6125bd858563ffffffff61226816565b90506125c7613371565b6125cf613371565b6125d98386612d7e565b915091506125e561335e565b600087815260018901602052604090206004015473ffffffffffffffffffffffffffffffffffffffff1663e8177dcf6126248a8a63ffffffff611e1e16565b846020015186602001516040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161266893929190614415565b60206040518083038186803b15801561268057600080fd5b505afa158015612694573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126b89190810190613c1e565b98975050505050505050565b8261086c576126d282612e40565b7f3a200000000000000000000000000000000000000000000000000000000000006126fc83612e40565b60405160200161270e93929190614366565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a000000000000000000000000000000000000000000000000000000000825261276c916004016144a0565b60405180910390fd5b61277d61348f565b6040518060200160405280836040519080825280602002602001820160405280156127c257816020015b6127af6134a2565b8152602001906001900390816127a75790505b50905292915050565b602001516fffffffffffffffffffffffffffffffff161590565b60006127f7848363ffffffff612f3b16565b1561280457506000611f0f565b612814838363ffffffff61206e16565b845180518490811061282257fe5b602090810291909101810151604090810192909252600084815260018601909152206007015460ff16156128b55760018460000151838151811061286257fe5b60209081029190910101519015159052612882838363ffffffff61226816565b51845180518490811061289157fe5b6020908102919091018101516fffffffffffffffffffffffffffffffff9092169101525b5060019392505050565b6128c761335e565b6128cf61335e565b6128d761335e565b6128df61335e565b60006128ea87612f69565b905060005b81811015612a0357612907888263ffffffff612f3b16565b612910576129fb565b612918613371565b6129298b8b8463ffffffff612f6e16565b905061293481612fdd565b1561293f57506129fb565b60006129666129548b8563ffffffff612fe516565b5160208401519063ffffffff61300f16565b905061297061335e565b612978613036565b905089156129b057600084815260018e016020908152604091829020825191820190925260059091015481526129ad90612c89565b90505b8251156129d9576129d26129c48383613058565b88519063ffffffff61249b16565b87526129f7565b6129f46129e68383612cc0565b87519063ffffffff61249b16565b86525b5050505b6001016128ef565b50919890975095505050505050565b612a1a613388565b612a22613371565b612a2a613371565b612a348588612d7e565b915091506000612a42613071565b90506000612a7a612a6c8a6040015163ffffffff168463ffffffff1661242490919063ffffffff16565b89519063ffffffff61300f16565b90506000612a8785612fdd565b15612a9457506000612ac6565b612a9e8288612cc0565b9050846020015184602001511015612ac657612ac38185602001518760200151612c1a565b90505b81811115612ad057fe5b60408051606081019091528a518190612b1990612b14906bffffffffffffffffffffffff16612b088188670de0b6b3a7640000612c1a565b9063ffffffff61249b16565b613081565b6bffffffffffffffffffffffff908116825260208d810151920191612b5091612b149116612b088187670de0b6b3a7640000612c1a565b6bffffffffffffffffffffffff1681526020018463ffffffff1681525095505050505050949350505050565b83612c1457612b8a83612e40565b7f3a20000000000000000000000000000000000000000000000000000000000000612bb484612e40565b7f203c000000000000000000000000000000000000000000000000000000000000612bde856130df565b60405161270e9594939291907f3e000000000000000000000000000000000000000000000000000000000000009060200161438e565b50505050565b60006121af82612c30868663ffffffff61300f16565b9063ffffffff61320d16565b6000831580612c49575082155b15612c6057612c5960008361320d565b9050611f0f565b6121af6001612b0884612c3083612c7d8a8a63ffffffff61300f16565b9063ffffffff61242416565b612c9161335e565b604080516020810190915282518190612cb890670de0b6b3a764000063ffffffff61249b16565b905292915050565b6000610c63838360000151670de0b6b3a7640000612c1a565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190612d2e9085906004016143ec565b60206040518083038186803b158015612d4657600080fd5b505afa158015612d5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c639190810190613c5a565b612d86613371565b612d8e613371565b612d96613371565b5060408051808201909152600181526020858101516fffffffffffffffffffffffffffffffff1690820152612dc9613371565b50604080518082019091526000815285516fffffffffffffffffffffffffffffffff166020820152612df9613371565b612e0383876121b7565b9050612e0d613371565b612e1783886121b7565b91989197509095505050505050565b612e2e613371565b610c6383612e3b8461322f565b613256565b60608082604051602001612e549190614351565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052905060205b8015612f245781517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90910190829082908110612ec057fe5b6020910101517f010000000000000000000000000000000000000000000000000000000000000090819004027fff000000000000000000000000000000000000000000000000000000000000001615612f1f5760010181529050610886565b612e87565b505060408051600081526020810190915292915050565b600082600001518281518110612f4d57fe5b6020026020010151604001516000015160001415905092915050565b515190565b612f76613371565b612f7e613371565b612f8f85858563ffffffff611f1616565b9050612f9a816127cb565b15612faf57612fa76132e8565b915050611f0f565b612fb7613388565b612fc7868563ffffffff611f9216565b9050612fd382826121b7565b9695505050505050565b602001511590565b612fed61335e565b8251805183908110612ffb57fe5b602002602001015160400151905092915050565b60008261301e57506000610c66565b8282028284828161302b57fe5b0414610c6357600080fd5b61303e61335e565b506040805160208101909152670de0b6b3a7640000815290565b6000610c6383670de0b6b3a76400008460000151612c1a565b600061307c42613308565b905090565b6000816108836bffffffffffffffffffffffff821682147f4d617468000000000000000000000000000000000000000000000000000000007f556e73616665206361737420746f2075696e74393600000000000000000000006126c4565b606081613120575060408051808201909152600181527f30000000000000000000000000000000000000000000000000000000000000006020820152610886565b8160005b811561313857600101600a82049150613124565b6060816040519080825280601f01601f191660200182016040528015613165576020820181803883390190505b508593509050815b8015613204577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01600a84066030017f0100000000000000000000000000000000000000000000000000000000000000028282815181106131ca57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8404935061316d565b50949350505050565b600080821161321b57600080fd5b600082848161322657fe5b04949350505050565b613237613371565b5060408051808201909152815115815260208083015190820152919050565b61325e613371565b613266613371565b8251845115159015151415613299578351151581526020808501519084015161328f919061249b565b6020820152610c63565b82602001518460200151106132c2578351151581526020808501519084015161328f9190612424565b825115158152602080840151908501516132dc9190612424565b60208201529392505050565b6132f0613371565b50604080518082019091526000808252602082015290565b60008161088363ffffffff821682147f4d617468000000000000000000000000000000000000000000000000000000007f556e73616665206361737420746f2075696e74333200000000000000000000006126c4565b6040518060200160405280600081525090565b604080518082019091526000808252602082015290565b604080516060810182526000808252602082018190529181019190915290565b60405180608001604052806133bb61335e565b81526020016133c861335e565b81526020016133d561335e565b81526020016133e261335e565b905290565b604051806101600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001613418613371565b8152602001613425613388565b8152600060208201819052604082015260600161344061335e565b815260200161344d61335e565b8152600060209091015290565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b6040518060200160405280606081525090565b60408051606081018252600080825260208201529081016133e261335e565b6000610c638235614797565b600082601f8301126134de57600080fd5b81356134f16134ec8261471d565b6146f6565b81815260209384019390925082018360005b8381101561352f578135860161351988826136a8565b8452506020928301929190910190600101613503565b5050505092915050565b600082601f83011261354a57600080fd5b81356135586134ec8261471d565b9150818183526020840193506020810190508385604084028201111561357d57600080fd5b60005b8381101561352f57816135938882613881565b84525060209092019160409190910190600101613580565b600082601f8301126135bc57600080fd5b81356135ca6134ec8261471d565b915081818352602084019350602081019050838560408402820111156135ef57600080fd5b60005b8381101561352f578161360588826138c8565b845250602090920191604091909101906001016135f2565b6000610c6382356147a2565b600082601f83011261363a57600080fd5b81356136486134ec8261473e565b9150808252602083016020830185838301111561366457600080fd5b61366f8382846148ca565b50505092915050565b6000610c638235614871565b6000610c63823561487c565b6000610c63823561488b565b6000610c63823561489a565b600061016082840312156136bb57600080fd5b6136c66101006146f6565b905060006136d48484613684565b82525060206136e584848301613974565b60208301525060406136f984828501613784565b60408301525060c061370d84828501613974565b60608301525060e061372184828501613974565b608083015250610100613736848285016134c1565b60a08301525061012061374b84828501613974565b60c08301525061014082013567ffffffffffffffff81111561376c57600080fd5b61377884828501613629565b60e08301525092915050565b60006080828403121561379657600080fd5b6137a060806146f6565b905060006137ae848461361d565b82525060206137bf84848301613690565b60208301525060406137d384828501613690565b60408301525060606137e784828501613974565b60608301525092915050565b60006020828403121561380557600080fd5b61380f60206146f6565b9050600061381d8484613974565b82525092915050565b60006060828403121561383857600080fd5b61384260606146f6565b905060006138508484613998565b825250602061386184848301613998565b60208301525060406138758482850161398c565b60408301525092915050565b60006040828403121561389357600080fd5b61389d60406146f6565b905060006138ab84846134c1565b82525060206138bc84848301613974565b60208301525092915050565b6000604082840312156138da57600080fd5b6138e460406146f6565b905060006138f284846134c1565b82525060206138bc8484830161361d565b60006040828403121561391557600080fd5b61391f60406146f6565b9050600061392d848461361d565b82525060206138bc84848301613968565b60006020828403121561395057600080fd5b61395a60206146f6565b9050600061381d8484613980565b6000610c63823561481c565b6000610c6382356147f1565b6000610c6382516147f1565b6000610c63823561484a565b6000610c638235614860565b6000602082840312156139b657600080fd5b60006121af84846134c1565b600080604083850312156139d557600080fd5b60006139e185856134c1565b92505060206139f2858286016134c1565b9150509250929050565b60008060408385031215613a0f57600080fd5b6000613a1b85856134c1565b92505060206139f28582860161361d565b600080600080600060a08688031215613a4457600080fd5b6000613a5088886134c1565b9550506020613a6188828901613678565b9450506040613a7288828901613678565b9350506060613a83888289016137f3565b9250506080613a94888289016137f3565b9150509295509295909350565b60008060408385031215613ab457600080fd5b823567ffffffffffffffff811115613acb57600080fd5b613ad785828601613539565b925050602083013567ffffffffffffffff811115613af457600080fd5b6139f2858286016134cd565b600060208284031215613b1257600080fd5b813567ffffffffffffffff811115613b2957600080fd5b6121af848285016135ab565b600060208284031215613b4757600080fd5b60006121af84846137f3565b600060408284031215613b6557600080fd5b60006121af8484613881565b60008060608385031215613b8457600080fd5b6000613b908585613881565b92505060406139f28582860161369c565b60008060608385031215613bb457600080fd5b6000613bc08585613881565b92505060406139f285828601613974565b600080600060a08486031215613be657600080fd5b6000613bf28686613881565b9350506040613c0386828701613974565b9250506060613c1486828701613903565b9150509250925092565b600060208284031215613c3057600080fd5b60006121af848461393e565b600060208284031215613c4e57600080fd5b60006121af8484613974565b600060208284031215613c6c57600080fd5b60006121af8484613980565b60008060408385031215613c8b57600080fd5b60006139e18585613974565b60008060408385031215613caa57600080fd5b6000613a1b8585613974565b60008060408385031215613cc957600080fd5b6000613cd58585613974565b92505060206139f285828601613678565b60008060408385031215613cf957600080fd5b6000613d058585613974565b92505060206139f2858286016137f3565b60008060808385031215613d2957600080fd5b6000613d358585613974565b92505060206139f285828601613826565b60008060408385031215613d5957600080fd5b6000613d658585613974565b92505060206139f285828601613974565b6000613d828383613dc2565b505060200190565b6000610c63838361402e565b6000613da28383614162565b505060400190565b6000613da28383614220565b6000613da28383614313565b613dcb81614797565b82525050565b6000613ddc8261478a565b613de6818561478e565b9350613df183614784565b60005b82811015613e1c57613e07868351613d76565b9550613e1282614784565b9150600101613df4565b5093949350505050565b6000613e318261478a565b613e3b818561478e565b935083602082028501613e4d85614784565b60005b84811015613e84578383038852613e68838351613d8a565b9250613e7382614784565b602098909801979150600101613e50565b50909695505050505050565b6000613e9b8261478a565b613ea5818561478e565b9350613eb083614784565b60005b82811015613e1c57613ec6868351613d96565b9550613ed182614784565b9150600101613eb3565b6000613ee68261478a565b613ef0818561478e565b9350613efb83614784565b60005b82811015613e1c57613f11868351613daa565b9550613f1c82614784565b9150600101613efe565b6000613f318261478a565b613f3b818561478e565b9350613f4683614784565b60005b82811015613e1c57613f5c868351613db6565b9550613f6782614784565b9150600101613f49565b613dcb816147a2565b613dcb613f86826147a7565b6147f1565b613dcb613f86826147cc565b613dcb613f86826147f1565b6000613fae8261478a565b613fb88185610886565b9350613fc88185602086016148d6565b9290920192915050565b6000613fdd8261478a565b613fe7818561478e565b9350613ff78185602086016148d6565b61400081614902565b9093019392505050565b613dcb81614871565b613dcb816148a9565b613dcb816148b4565b613dcb816148bf565b80516000906101608401906140438582614013565b506020830151614056602086018261432d565b50604083015161406960408601826140d0565b50606083015161407c60c086018261432d565b50608083015161408f60e086018261432d565b5060a08301516140a3610100860182613dc2565b5060c08301516140b761012086018261432d565b5060e08301518482036101408601526120658282613fd2565b805160808301906140e18482613f71565b5060208201516140f4602085018261401c565b506040820151614107604085018261401c565b506060820151612c14606085018261432d565b80516020830190612c14848261432d565b8051606083019061413c8482614348565b50602082015161414f6020850182614348565b506040820151612c146040850182614336565b805160408301906141738482613dc2565b506020820151612c14602085018261432d565b80516101608301906141988482613dc2565b5060208201516141ab6020850182614302565b5060408201516141be606085018261412b565b5060608201516141d160c085018261400a565b5060808201516141e460e085018261400a565b5060a08201516141f861010085018261411a565b5060c082015161420c61012085018261411a565b5060e0820151612c14610140850182613f71565b805160408301906142318482613f71565b506020820151612c146020850182614324565b805160c0830190614255848261433f565b506020820151614268602085018261433f565b50604082015161427b604085018261433f565b50606082015161428e606085018261433f565b5060808201516142a1608085018261433f565b5060a0820151612c1460a0850182614324565b805160808301906142c5848261411a565b5060208201516142d8602085018261411a565b5060408201516142eb604085018261411a565b506060820151612c14606085018261411a565b9052565b805160408301906142318482614324565b805160408301906141738482613f71565b613dcb8161481c565b613dcb816147f1565b613dcb8161484a565b613dcb81614853565b613dcb81614860565b600061435d8284613f97565b50602001919050565b60006143728286613fa3565b915061437e8285613f8b565b6002820191506120658284613fa3565b600061439a8289613fa3565b91506143a68288613f8b565b6002820191506143b68287613fa3565b91506143c28286613f8b565b6002820191506143d28285613fa3565b91506143de8284613f7a565b506001019695505050505050565b60208101610c668284613dc2565b604081016144088285613dc2565b611f0f6020830184613f71565b606081016144238286613dc2565b614430602083018561432d565b6121af604083018461432d565b6060808252810161444e8186613dd1565b905081810360208301526144628185613edb565b905081810360408301526120658184613f26565b60208101610c668284613f71565b60208101610c66828461400a565b60208101610c668284614025565b60208082528101610c638184613fd2565b60208101610c66828461411a565b60608101610c66828461412b565b6101608101610c668284614186565b61020081016144eb8287614186565b6144f961016083018661412b565b6145076101c083018561411a565b6120656101e083018461411a565b60408101610c668284614220565b60c08101610c668284614244565b60808101610c6682846142b4565b6060810161454d82866142fe565b61455a6020830185613dc2565b6121af6040830184613dc2565b6060810161457582866142fe565b6145826020830185613dc2565b6121af6040830184613f71565b60c0810161459d82896142fe565b6145aa6020830188613dc2565b6145b7604083018761400a565b6145c4606083018661400a565b6145d1608083018561411a565b6145de60a083018461411a565b979650505050505050565b606081016145f782866142fe565b81810360208301526146098185613e90565b905081810360408301526120658184613e26565b6040810161462b82856142fe565b611f0f602083018461411a565b6060810161464682866142fe565b61455a602083018561432d565b6060810161466182866142fe565b614582602083018561432d565b6060810161467c82866142fe565b614689602083018561432d565b6121af604083018461400a565b606081016146a482866142fe565b6146b1602083018561432d565b6121af604083018461411a565b60408101610c668284614302565b6040810161462b828561411a565b60408101610c668284614313565b60208101610c66828461432d565b60405181810167ffffffffffffffff8111828210171561471557600080fd5b604052919050565b600067ffffffffffffffff82111561473457600080fd5b5060209081020190565b600067ffffffffffffffff82111561475557600080fd5b506020601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160190565b60200190565b5190565b90815260200190565b600061088382614831565b151590565b7fff000000000000000000000000000000000000000000000000000000000000001690565b7fffff0000000000000000000000000000000000000000000000000000000000001690565b90565b60006009821061480057fe5b5090565b60006002821061480057fe5b60006003821061480057fe5b6fffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b63ffffffff1690565b67ffffffffffffffff1690565b6bffffffffffffffffffffffff1690565b600061088382614797565b60006009821061480057600080fd5b60006002821061480057600080fd5b60006003821061480057600080fd5b6000610883826147f4565b600061088382614804565b600061088382614810565b82818337506000910152565b60005b838110156148f15781810151838201526020016148d9565b83811115612c145750506000910152565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169056fea265627a7a7230582097384b71afb0c7bafdaa393e2969142d048e0273d72f0bc71aaea3b57fa9857b6c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610369576000357c0100000000000000000000000000000000000000000000000000000000900480638da5cb5b116101da578063d96e406d11610116578063eb44fdd3116100bf578063f2fde38b11610099578063f2fde38b14610771578063f941605214610784578063fd04b60614610797578063fd47eda6146107aa57610369565b8063eb44fdd31461072b578063ef6957d01461074b578063f2901ae21461075e57610369565b8063e5520228116100f0578063e5520228146106fb578063e8e72f7514610703578063eb1c6e6b1461071657610369565b8063d96e406d146106b5578063deec053d146106c8578063e51bfcb4146106db57610369565b8063b548b89211610183578063c190c2ec1161015d578063c190c2ec1461064f578063cb04a34c1461066f578063d24c48bc1461068f578063d5ecf7c5146106a257610369565b8063b548b89214610611578063c0bb72b714610634578063c14609421461064757610369565b8063982f323c116101b4578063982f323c146105d8578063a67a6a45146105eb578063b42cbcd3146105fe57610369565b80638da5cb5b146105b55780638f32d59b146105bd5780638f6bc659146105c557610369565b80633a031bf0116102a957806369794795116102525780637e9eaf411161022c5780637e9eaf4114610574578063835666701461057c57806385b53fc81461058f5780638928378e146105a257610369565b806369794795146105355780636a8194e71461054a578063715018a61461056c57610369565b80634f3c1542116102835780634f3c1542146104fa57806356ea84b2146105025780635ac7d17c1461052257610369565b80633a031bf0146104b457806347d1b53c146104c75780634be87414146104e757610369565b8063197f0f05116103165780632a560845116102f05780632a560845146104685780632e822af31461047b5780633063bce21461048e578063387a498a146104a157610369565b8063197f0f05146104205780631a7777bb14610433578063295c39a51461045357610369565b8063121fb72f11610347578063121fb72f146103cc578063124f914c146103df578063133683641461040057610369565b8063042069d61461036e578063052f72d714610383578063062bd3e9146103ac575b600080fd5b61038161037c366004613ce6565b6107bd565b005b6103966103913660046139a4565b610871565b6040516103a39190614476565b60405180910390f35b6103bf6103ba366004613c3c565b61088b565b6040516103a391906143ec565b6103816103da366004613cb6565b6108a7565b6103f26103ed366004613b53565b610918565b6040516103a39291906146cc565b61041361040e366004613c3c565b61093c565b6040516103a39190614484565b61041361042e366004613c3c565b610973565b610446610441366004613c3c565b6109aa565b6040516103a391906144b1565b61045b6109e1565b6040516103a391906146e8565b61045b6104763660046139c2565b6109e7565b610381610489366004613b35565b610ac1565b61038161049c366004613b35565b610b72565b6103816104af366004613b35565b610be1565b6103966104c23660046139c2565b610c50565b6104da6104d5366004613ba1565b610c6c565b6040516103a39190614515565b6103816104f5366004613ce6565b610c8f565b610446610d00565b610515610510366004613c3c565b610d1c565b6040516103a391906144bf565b610396610530366004613c3c565b610d51565b61053d610d75565b6040516103a39190614531565b61055d610558366004613b53565b610dd1565b6040516103a39392919061443d565b610381610f3f565b610446610fbf565b61038161058a366004613b71565b610fdb565b61038161059d366004613b00565b611054565b6104466105b0366004613c3c565b611137565b6103bf611159565b610396611175565b61045b6105d3366004613c78565b611193565b6103816105e6366004613a2c565b611206565b6103816105f9366004613aa1565b6112c3565b61038161060c366004613d16565b611323565b61062461061f366004613c3c565b6114c8565b6040516103a394939291906144dc565b610381610642366004613b35565b611524565b610446611593565b61066261065d366004613ba1565b6115af565b6040516103a391906146da565b61068261067d366004613c3c565b6115ef565b6040516103a391906146be565b61044661069d366004613d46565b611611565b6106626106b0366004613c3c565b61163d565b6103816106c3366004613bd1565b61165f565b6105156106d6366004613c3c565b611994565b6106ee6106e9366004613b53565b6119b6565b6040516103a39190614492565b6104466119c8565b610381610711366004613cb6565b6119e4565b61071e611a55565b6040516103a39190614523565b61073e610739366004613c3c565b611af7565b6040516103a391906144cd565b610381610759366004613c97565b611c36565b61038161076c3660046139fc565b611ca7565b61038161077f3660046139a4565b611d18565b6103f2610792366004613b53565b611d35565b6104466107a5366004613c3c565b611d50565b6104466107b8366004613c3c565b611d87565b6107c5611175565b6107ce57600080fd5b600c8054600101908190556040517f8854ab3e00000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________90638854ab3e9061082e9060009087908790600401614696565b60006040518083038186803b15801561084657600080fd5b505af415801561085a573d6000803e3d6000fd5b50505050600c54811461086c57600080fd5b505050565b6000610883818363ffffffff611dbc16565b90505b919050565b600061089682611deb565b61088360008363ffffffff611e1e16565b6108af611175565b6108b857600080fd5b600c8054600101908190556040517faa92e34800000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________9063aa92e3489061082e906000908790879060040161466e565b61092061335e565b61092861335e565b610933836000611e4a565b91509150915091565b600061094782611deb565b5060009081526001602052604090206003015473ffffffffffffffffffffffffffffffffffffffff1690565b600061097e82611deb565b5060009081526001602052604090206004015473ffffffffffffffffffffffffffffffffffffffff1690565b6109b261335e565b6109bb82611deb565b506000908152600160209081526040918290208251918201909252600690910154815290565b60005490565b60006109f1611175565b6109fa57600080fd5b600c8054600101908190556040517fdd32998a00000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________9063dd32998a90610a5a906000908890889060040161453f565b60206040518083038186803b158015610a7257600080fd5b505af4158015610a86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610aaa9190810190613c5a565b9150600c548114610aba57600080fd5b5092915050565b610ac9611175565b610ad257600080fd5b600c8054600101908190556040517ff9cacc4c00000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________9063f9cacc4c90610b3090600090869060040161461d565b60006040518083038186803b158015610b4857600080fd5b505af4158015610b5c573d6000803e3d6000fd5b50505050600c548114610b6e57600080fd5b5050565b610b7a611175565b610b8357600080fd5b600c8054600101908190556040517f0f44e6bc00000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________90630f44e6bc90610b3090600090869060040161461d565b610be9611175565b610bf257600080fd5b600c8054600101908190556040517f311401d000000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________9063311401d090610b3090600090869060040161461d565b6000610c6381848463ffffffff611ed616565b90505b92915050565b610c74613371565b610c7d82611deb565b610c636000848463ffffffff611f1616565b610c97611175565b610ca057600080fd5b600c8054600101908190556040517f7335079b00000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________90637335079b9061082e9060009087908790600401614696565b610d0861335e565b506040805160208101909152600554815290565b610d24613388565b610d2d82611deb565b61088382610d4260008263ffffffff611f9216565b6000919063ffffffff61201616565b6000610d5c82611deb565b5060009081526001602052604090206007015460ff1690565b610d7d6133a8565b506040805160a0810182526005546080820190815281528151602081810184526006548252808301919091528251808201845260075481528284015282519081019092526008548252606081019190915290565b6060806060600080600001549050606081604051908082528060200260200182016040528015610e0b578160200160208202803883390190505b509050606082604051908082528060200260200182016040528015610e4a57816020015b610e37613371565b815260200190600190039081610e2f5790505b509050606083604051908082528060200260200182016040528015610e8957816020015b610e76613371565b815260200190600190039081610e6e5790505b50905060005b84811015610f3057610ea08161088b565b848281518110610eac57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050610ef08982610c6c565b838281518110610efc57fe5b6020026020010181905250610f1189826115af565b828281518110610f1d57fe5b6020908102919091010152600101610e8f565b50919790965090945092505050565b610f47611175565b610f5057600080fd5b600b5460405160009173ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600b80547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b610fc761335e565b506040805160208101909152600854815290565b815173ffffffffffffffffffffffffffffffffffffffff16600090815260026020818152604080842082870151855290915290912060019081018054849391927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0090911691849081111561104b57fe5b02179055505050565b60005b8151811015610b6e57600082828151811061106e57fe5b6020026020010151600001519050600083838151811061108a57fe5b60209081029190910181015181015133600081815260038452604080822073ffffffffffffffffffffffffffffffffffffffff8816835290945283902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683151517905591519092507f4d7f317d2088d039c2a95a09fcbf9cc9191fad5905f883c937cc3d317c4a63279061112590859085906143fa565b60405180910390a25050600101611057565b61113f61335e565b61114882611deb565b61088360008363ffffffff61206e16565b600b5473ffffffffffffffffffffffffffffffffffffffff1690565b600b5473ffffffffffffffffffffffffffffffffffffffff16331490565b600061119d611175565b6111a657600080fd5b600c8054600101908190556040517fb25328e000000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________9063b25328e090610a5a9060009088908890600401614638565b61120e611175565b61121757600080fd5b600c8054600101908190556040517f48d0648400000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________906348d064849061127d906000908a908a908a908a908a9060040161458f565b60006040518083038186803b15801561129557600080fd5b505af41580156112a9573d6000803e3d6000fd5b50505050600c5481146112bb57600080fd5b505050505050565b600c8054600101908190556040517fbd76ecfd00000000000000000000000000000000000000000000000000000000815273__OperationImpl_________________________9063bd76ecfd9061082e90600090879087906004016145e9565b61132b613388565b5060008281526001602090815260409182902082516060810184526002909101546bffffffffffffffffffffffff80821683526c0100000000000000000000000082048116938301939093527801000000000000000000000000000000000000000000000000900463ffffffff16928101929092528251166113ba5780516bffffffffffffffffffffffff1682525b60208201516bffffffffffffffffffffffff166113ea576020808201516bffffffffffffffffffffffff16908301525b5060009182526001602090815260409283902082516002909101805492840151939094015163ffffffff167801000000000000000000000000000000000000000000000000027fffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffff6bffffffffffffffffffffffff9485166c01000000000000000000000000027fffffffffffffffff000000000000000000000000ffffffffffffffffffffffff959093167fffffffffffffffffffffffffffffffffffffffff00000000000000000000000090941693909317939093161716179055565b6114d06133e7565b6114d8613388565b6114e061335e565b6114e861335e565b6114f185611deb565b6114fa85611af7565b61150386610d1c565b61150c87611137565b61151588611d87565b93509350935093509193509193565b61152c611175565b61153557600080fd5b600c8054600101908190556040517f54dd351600000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________906354dd351690610b3090600090869060040161461d565b61159b61335e565b506040805160208101909152600654815290565b6115b7613371565b6115c082611deb565b610c636115d56000858563ffffffff611f1616565b6115ea84610d4260008263ffffffff611f9216565b6121b7565b6115f7613371565b61160082611deb565b61088360008363ffffffff61226816565b61161961335e565b61162283611deb565b61162b82611deb565b610c636000848463ffffffff6122c816565b611645613371565b61164e82611deb565b61088360008363ffffffff61235e16565b611667613371565b50825173ffffffffffffffffffffffffffffffffffffffff166000908152600260209081526040808320828701518452825280832085845282529182902082518084019093525460ff81161515835261010090046fffffffffffffffffffffffffffffffff16908201526116d9613371565b506000838152600160208181526040928390208351808501909452909101546fffffffffffffffffffffffffffffffff808216845270010000000000000000000000000000000090910416908201528151156117925761177661177183602001516fffffffffffffffffffffffffffffffff1683602001516fffffffffffffffffffffffffffffffff1661242490919063ffffffff16565b612439565b6fffffffffffffffffffffffffffffffff1660208201526117d7565b602082015181516117c291611771916fffffffffffffffffffffffffffffffff908116911663ffffffff61242416565b6fffffffffffffffffffffffffffffffff1681525b82511561183c5761182061177184602001516fffffffffffffffffffffffffffffffff1683602001516fffffffffffffffffffffffffffffffff1661249b90919063ffffffff16565b6fffffffffffffffffffffffffffffffff166020820152611881565b6020830151815161186c91611771916fffffffffffffffffffffffffffffffff908116911663ffffffff61249b16565b6fffffffffffffffffffffffffffffffff1681525b6000848152600160208181526040808420855193018054958301516fffffffffffffffffffffffffffffffff908116700100000000000000000000000000000000029481167fffffffffffffffffffffffffffffffff0000000000000000000000000000000090971696909617861693909317909255875173ffffffffffffffffffffffffffffffffffffffff1683526002815281832097810151835296875280822095825294865293909320825181549390950151909316610100027fffffffffffffffffffffffffffffff00000000000000000000000000000000ff9415157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00909316929092179390931617905550565b61199c613388565b6119a582611deb565b61088360008363ffffffff611f9216565b6000610883818363ffffffff6124ad16565b6119d061335e565b506040805160208101909152600754815290565b6119ec611175565b6119f557600080fd5b600c8054600101908190556040517f8c5dabd100000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________90638c5dabd19061082e906000908790879060040161466e565b611a5d61345a565b506040805160c08101825260095467ffffffffffffffff808216835268010000000000000000808304821660208501527001000000000000000000000000000000008304821694840194909452780100000000000000000000000000000000000000000000000090910481166060830152600a549081166080830152919091046fffffffffffffffffffffffffffffffff1660a082015290565b611aff6133e7565b611b0882611deb565b50600090815260016020818152604092839020835161010081018552815473ffffffffffffffffffffffffffffffffffffffff908116825285518087018752948301546fffffffffffffffffffffffffffffffff808216875270010000000000000000000000000000000090910416858501528184019490945284516060808201875260028401546bffffffffffffffffffffffff80821684526c01000000000000000000000000820416838701527801000000000000000000000000000000000000000000000000900463ffffffff168288015282870191909152600383015485169082015260048201549093166080840152835180830185526005820154815260a084015283519182019093526006830154815260c082015260079091015460ff16151560e082015290565b611c3e611175565b611c4757600080fd5b600c8054600101908190556040517f10c87b0600000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________906310c87b069061082e9060009087908790600401614653565b611caf611175565b611cb857600080fd5b600c8054600101908190556040517fe80f802400000000000000000000000000000000000000000000000000000000815273__AdminImpl_____________________________9063e80f80249061082e9060009087908790600401614567565b611d20611175565b611d2957600080fd5b611d32816124ef565b50565b611d3d61335e565b611d4561335e565b610933836001611e4a565b611d5861335e565b611d6182611deb565b506000908152600160209081526040918290208251918201909252600590910154815290565b611d8f61335e565b611d9882611deb565b61088382611dad60008263ffffffff611f9216565b6000919063ffffffff61259d16565b73ffffffffffffffffffffffffffffffffffffffff166000908152600491909101602052604090205460ff1690565b611d3260008001548210600d547f4d61726b6574204f4f42000000000000000000000000000000000000000000006126c4565b6000908152600191909101602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b611e5261335e565b611e5a61335e565b600054611e6561348f565b611e6e82612775565b905060005b82811015611eb557611e95611e906000898463ffffffff611f1616565b6127cb565b611ead57611eab8260008363ffffffff6127e516565b505b600101611e73565b50611ec9600087838863ffffffff6128bf16565b9350935050509250929050565b73ffffffffffffffffffffffffffffffffffffffff808316600090815260038501602090815260408083209385168352929052205460ff165b9392505050565b611f1e613371565b50815173ffffffffffffffffffffffffffffffffffffffff1660009081526002840160209081526040808320828601518452825280832084845282529182902082518084019093525460ff8116151583526fffffffffffffffffffffffffffffffff61010090910416908201529392505050565b611f9a613388565b506000908152600191909101602090815260409182902082516060810184526002909101546bffffffffffffffffffffffff80821683526c0100000000000000000000000082041692820192909252780100000000000000000000000000000000000000000000000090910463ffffffff169181019190915290565b61201e613388565b61202661335e565b61203785858563ffffffff61259d16565b9050612065838261204e888863ffffffff61226816565b604080516020810190915260078a01548152612a12565b95945050505050565b61207661335e565b600082815260018401602052604090206003015473ffffffffffffffffffffffffffffffffffffffff166120a861335e565b73ffffffffffffffffffffffffffffffffffffffff82166341976e096120d4878763ffffffff611e1e16565b6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161210c91906143ec565b60206040518083038186803b15801561212457600080fd5b505afa158015612138573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061215c9190810190613c1e565b80519091506121af9015157f53746f72616765000000000000000000000000000000000000000000000000007f50726963652063616e6e6f74206265207a65726f00000000000000000000000087612b7c565b949350505050565b6121bf613371565b602083015183516fffffffffffffffffffffffffffffffff909116901561222b576040805180820190915260018152602084810151908201906122209084906bffffffffffffffffffffffff16670de0b6b3a764000063ffffffff612c1a16565b815250915050610c66565b6040805180820190915260008152835160208201906122209084906bffffffffffffffffffffffff16670de0b6b3a764000063ffffffff612c3c16565b612270613371565b506000818152600180840160209081526040928390208351808501909452909101546fffffffffffffffffffffffffffffffff8082168452700100000000000000000000000000000000909104169082015292915050565b6122d061335e565b6006808501546000858152600187016020908152604091829020825191820190925292015482529061230c90829061230790612c89565b612cc0565b905061234781612307876001016000878152602001908152602001600020600601604051806020016040529081600082015481525050612c89565b604080516020810190915290815295945050505050565b612366613371565b61236e613388565b61237e848463ffffffff611f9216565b9050612388613371565b612398858563ffffffff61226816565b905060006123ac868663ffffffff611e1e16565b90506123b6613371565b60405180604001604052806001151581526020016123d48430612cd9565b905290506123e0613371565b6123e8613371565b6123f28587612d7e565b90925090506124178261240b858463ffffffff612e2616565b9063ffffffff612e2616565b9998505050505050505050565b60008282111561243357600080fd5b50900390565b6000816108836fffffffffffffffffffffffffffffffff821682147f4d617468000000000000000000000000000000000000000000000000000000007f556e73616665206361737420746f2075696e74313238000000000000000000006126c4565b600082820183811015610c6357600080fd5b805173ffffffffffffffffffffffffffffffffffffffff1660009081526002929092016020908152604080842092820151845291905290206001015460ff1690565b73ffffffffffffffffffffffffffffffffffffffff811661250f57600080fd5b600b5460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6125a561335e565b6125ad613371565b6125bd858563ffffffff61226816565b90506125c7613371565b6125cf613371565b6125d98386612d7e565b915091506125e561335e565b600087815260018901602052604090206004015473ffffffffffffffffffffffffffffffffffffffff1663e8177dcf6126248a8a63ffffffff611e1e16565b846020015186602001516040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161266893929190614415565b60206040518083038186803b15801561268057600080fd5b505afa158015612694573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126b89190810190613c1e565b98975050505050505050565b8261086c576126d282612e40565b7f3a200000000000000000000000000000000000000000000000000000000000006126fc83612e40565b60405160200161270e93929190614366565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a000000000000000000000000000000000000000000000000000000000825261276c916004016144a0565b60405180910390fd5b61277d61348f565b6040518060200160405280836040519080825280602002602001820160405280156127c257816020015b6127af6134a2565b8152602001906001900390816127a75790505b50905292915050565b602001516fffffffffffffffffffffffffffffffff161590565b60006127f7848363ffffffff612f3b16565b1561280457506000611f0f565b612814838363ffffffff61206e16565b845180518490811061282257fe5b602090810291909101810151604090810192909252600084815260018601909152206007015460ff16156128b55760018460000151838151811061286257fe5b60209081029190910101519015159052612882838363ffffffff61226816565b51845180518490811061289157fe5b6020908102919091018101516fffffffffffffffffffffffffffffffff9092169101525b5060019392505050565b6128c761335e565b6128cf61335e565b6128d761335e565b6128df61335e565b60006128ea87612f69565b905060005b81811015612a0357612907888263ffffffff612f3b16565b612910576129fb565b612918613371565b6129298b8b8463ffffffff612f6e16565b905061293481612fdd565b1561293f57506129fb565b60006129666129548b8563ffffffff612fe516565b5160208401519063ffffffff61300f16565b905061297061335e565b612978613036565b905089156129b057600084815260018e016020908152604091829020825191820190925260059091015481526129ad90612c89565b90505b8251156129d9576129d26129c48383613058565b88519063ffffffff61249b16565b87526129f7565b6129f46129e68383612cc0565b87519063ffffffff61249b16565b86525b5050505b6001016128ef565b50919890975095505050505050565b612a1a613388565b612a22613371565b612a2a613371565b612a348588612d7e565b915091506000612a42613071565b90506000612a7a612a6c8a6040015163ffffffff168463ffffffff1661242490919063ffffffff16565b89519063ffffffff61300f16565b90506000612a8785612fdd565b15612a9457506000612ac6565b612a9e8288612cc0565b9050846020015184602001511015612ac657612ac38185602001518760200151612c1a565b90505b81811115612ad057fe5b60408051606081019091528a518190612b1990612b14906bffffffffffffffffffffffff16612b088188670de0b6b3a7640000612c1a565b9063ffffffff61249b16565b613081565b6bffffffffffffffffffffffff908116825260208d810151920191612b5091612b149116612b088187670de0b6b3a7640000612c1a565b6bffffffffffffffffffffffff1681526020018463ffffffff1681525095505050505050949350505050565b83612c1457612b8a83612e40565b7f3a20000000000000000000000000000000000000000000000000000000000000612bb484612e40565b7f203c000000000000000000000000000000000000000000000000000000000000612bde856130df565b60405161270e9594939291907f3e000000000000000000000000000000000000000000000000000000000000009060200161438e565b50505050565b60006121af82612c30868663ffffffff61300f16565b9063ffffffff61320d16565b6000831580612c49575082155b15612c6057612c5960008361320d565b9050611f0f565b6121af6001612b0884612c3083612c7d8a8a63ffffffff61300f16565b9063ffffffff61242416565b612c9161335e565b604080516020810190915282518190612cb890670de0b6b3a764000063ffffffff61249b16565b905292915050565b6000610c63838360000151670de0b6b3a7640000612c1a565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190612d2e9085906004016143ec565b60206040518083038186803b158015612d4657600080fd5b505afa158015612d5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c639190810190613c5a565b612d86613371565b612d8e613371565b612d96613371565b5060408051808201909152600181526020858101516fffffffffffffffffffffffffffffffff1690820152612dc9613371565b50604080518082019091526000815285516fffffffffffffffffffffffffffffffff166020820152612df9613371565b612e0383876121b7565b9050612e0d613371565b612e1783886121b7565b91989197509095505050505050565b612e2e613371565b610c6383612e3b8461322f565b613256565b60608082604051602001612e549190614351565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052905060205b8015612f245781517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90910190829082908110612ec057fe5b6020910101517f010000000000000000000000000000000000000000000000000000000000000090819004027fff000000000000000000000000000000000000000000000000000000000000001615612f1f5760010181529050610886565b612e87565b505060408051600081526020810190915292915050565b600082600001518281518110612f4d57fe5b6020026020010151604001516000015160001415905092915050565b515190565b612f76613371565b612f7e613371565b612f8f85858563ffffffff611f1616565b9050612f9a816127cb565b15612faf57612fa76132e8565b915050611f0f565b612fb7613388565b612fc7868563ffffffff611f9216565b9050612fd382826121b7565b9695505050505050565b602001511590565b612fed61335e565b8251805183908110612ffb57fe5b602002602001015160400151905092915050565b60008261301e57506000610c66565b8282028284828161302b57fe5b0414610c6357600080fd5b61303e61335e565b506040805160208101909152670de0b6b3a7640000815290565b6000610c6383670de0b6b3a76400008460000151612c1a565b600061307c42613308565b905090565b6000816108836bffffffffffffffffffffffff821682147f4d617468000000000000000000000000000000000000000000000000000000007f556e73616665206361737420746f2075696e74393600000000000000000000006126c4565b606081613120575060408051808201909152600181527f30000000000000000000000000000000000000000000000000000000000000006020820152610886565b8160005b811561313857600101600a82049150613124565b6060816040519080825280601f01601f191660200182016040528015613165576020820181803883390190505b508593509050815b8015613204577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01600a84066030017f0100000000000000000000000000000000000000000000000000000000000000028282815181106131ca57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8404935061316d565b50949350505050565b600080821161321b57600080fd5b600082848161322657fe5b04949350505050565b613237613371565b5060408051808201909152815115815260208083015190820152919050565b61325e613371565b613266613371565b8251845115159015151415613299578351151581526020808501519084015161328f919061249b565b6020820152610c63565b82602001518460200151106132c2578351151581526020808501519084015161328f9190612424565b825115158152602080840151908501516132dc9190612424565b60208201529392505050565b6132f0613371565b50604080518082019091526000808252602082015290565b60008161088363ffffffff821682147f4d617468000000000000000000000000000000000000000000000000000000007f556e73616665206361737420746f2075696e74333200000000000000000000006126c4565b6040518060200160405280600081525090565b604080518082019091526000808252602082015290565b604080516060810182526000808252602082018190529181019190915290565b60405180608001604052806133bb61335e565b81526020016133c861335e565b81526020016133d561335e565b81526020016133e261335e565b905290565b604051806101600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001613418613371565b8152602001613425613388565b8152600060208201819052604082015260600161344061335e565b815260200161344d61335e565b8152600060209091015290565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b6040518060200160405280606081525090565b60408051606081018252600080825260208201529081016133e261335e565b6000610c638235614797565b600082601f8301126134de57600080fd5b81356134f16134ec8261471d565b6146f6565b81815260209384019390925082018360005b8381101561352f578135860161351988826136a8565b8452506020928301929190910190600101613503565b5050505092915050565b600082601f83011261354a57600080fd5b81356135586134ec8261471d565b9150818183526020840193506020810190508385604084028201111561357d57600080fd5b60005b8381101561352f57816135938882613881565b84525060209092019160409190910190600101613580565b600082601f8301126135bc57600080fd5b81356135ca6134ec8261471d565b915081818352602084019350602081019050838560408402820111156135ef57600080fd5b60005b8381101561352f578161360588826138c8565b845250602090920191604091909101906001016135f2565b6000610c6382356147a2565b600082601f83011261363a57600080fd5b81356136486134ec8261473e565b9150808252602083016020830185838301111561366457600080fd5b61366f8382846148ca565b50505092915050565b6000610c638235614871565b6000610c63823561487c565b6000610c63823561488b565b6000610c63823561489a565b600061016082840312156136bb57600080fd5b6136c66101006146f6565b905060006136d48484613684565b82525060206136e584848301613974565b60208301525060406136f984828501613784565b60408301525060c061370d84828501613974565b60608301525060e061372184828501613974565b608083015250610100613736848285016134c1565b60a08301525061012061374b84828501613974565b60c08301525061014082013567ffffffffffffffff81111561376c57600080fd5b61377884828501613629565b60e08301525092915050565b60006080828403121561379657600080fd5b6137a060806146f6565b905060006137ae848461361d565b82525060206137bf84848301613690565b60208301525060406137d384828501613690565b60408301525060606137e784828501613974565b60608301525092915050565b60006020828403121561380557600080fd5b61380f60206146f6565b9050600061381d8484613974565b82525092915050565b60006060828403121561383857600080fd5b61384260606146f6565b905060006138508484613998565b825250602061386184848301613998565b60208301525060406138758482850161398c565b60408301525092915050565b60006040828403121561389357600080fd5b61389d60406146f6565b905060006138ab84846134c1565b82525060206138bc84848301613974565b60208301525092915050565b6000604082840312156138da57600080fd5b6138e460406146f6565b905060006138f284846134c1565b82525060206138bc8484830161361d565b60006040828403121561391557600080fd5b61391f60406146f6565b9050600061392d848461361d565b82525060206138bc84848301613968565b60006020828403121561395057600080fd5b61395a60206146f6565b9050600061381d8484613980565b6000610c63823561481c565b6000610c6382356147f1565b6000610c6382516147f1565b6000610c63823561484a565b6000610c638235614860565b6000602082840312156139b657600080fd5b60006121af84846134c1565b600080604083850312156139d557600080fd5b60006139e185856134c1565b92505060206139f2858286016134c1565b9150509250929050565b60008060408385031215613a0f57600080fd5b6000613a1b85856134c1565b92505060206139f28582860161361d565b600080600080600060a08688031215613a4457600080fd5b6000613a5088886134c1565b9550506020613a6188828901613678565b9450506040613a7288828901613678565b9350506060613a83888289016137f3565b9250506080613a94888289016137f3565b9150509295509295909350565b60008060408385031215613ab457600080fd5b823567ffffffffffffffff811115613acb57600080fd5b613ad785828601613539565b925050602083013567ffffffffffffffff811115613af457600080fd5b6139f2858286016134cd565b600060208284031215613b1257600080fd5b813567ffffffffffffffff811115613b2957600080fd5b6121af848285016135ab565b600060208284031215613b4757600080fd5b60006121af84846137f3565b600060408284031215613b6557600080fd5b60006121af8484613881565b60008060608385031215613b8457600080fd5b6000613b908585613881565b92505060406139f28582860161369c565b60008060608385031215613bb457600080fd5b6000613bc08585613881565b92505060406139f285828601613974565b600080600060a08486031215613be657600080fd5b6000613bf28686613881565b9350506040613c0386828701613974565b9250506060613c1486828701613903565b9150509250925092565b600060208284031215613c3057600080fd5b60006121af848461393e565b600060208284031215613c4e57600080fd5b60006121af8484613974565b600060208284031215613c6c57600080fd5b60006121af8484613980565b60008060408385031215613c8b57600080fd5b60006139e18585613974565b60008060408385031215613caa57600080fd5b6000613a1b8585613974565b60008060408385031215613cc957600080fd5b6000613cd58585613974565b92505060206139f285828601613678565b60008060408385031215613cf957600080fd5b6000613d058585613974565b92505060206139f2858286016137f3565b60008060808385031215613d2957600080fd5b6000613d358585613974565b92505060206139f285828601613826565b60008060408385031215613d5957600080fd5b6000613d658585613974565b92505060206139f285828601613974565b6000613d828383613dc2565b505060200190565b6000610c63838361402e565b6000613da28383614162565b505060400190565b6000613da28383614220565b6000613da28383614313565b613dcb81614797565b82525050565b6000613ddc8261478a565b613de6818561478e565b9350613df183614784565b60005b82811015613e1c57613e07868351613d76565b9550613e1282614784565b9150600101613df4565b5093949350505050565b6000613e318261478a565b613e3b818561478e565b935083602082028501613e4d85614784565b60005b84811015613e84578383038852613e68838351613d8a565b9250613e7382614784565b602098909801979150600101613e50565b50909695505050505050565b6000613e9b8261478a565b613ea5818561478e565b9350613eb083614784565b60005b82811015613e1c57613ec6868351613d96565b9550613ed182614784565b9150600101613eb3565b6000613ee68261478a565b613ef0818561478e565b9350613efb83614784565b60005b82811015613e1c57613f11868351613daa565b9550613f1c82614784565b9150600101613efe565b6000613f318261478a565b613f3b818561478e565b9350613f4683614784565b60005b82811015613e1c57613f5c868351613db6565b9550613f6782614784565b9150600101613f49565b613dcb816147a2565b613dcb613f86826147a7565b6147f1565b613dcb613f86826147cc565b613dcb613f86826147f1565b6000613fae8261478a565b613fb88185610886565b9350613fc88185602086016148d6565b9290920192915050565b6000613fdd8261478a565b613fe7818561478e565b9350613ff78185602086016148d6565b61400081614902565b9093019392505050565b613dcb81614871565b613dcb816148a9565b613dcb816148b4565b613dcb816148bf565b80516000906101608401906140438582614013565b506020830151614056602086018261432d565b50604083015161406960408601826140d0565b50606083015161407c60c086018261432d565b50608083015161408f60e086018261432d565b5060a08301516140a3610100860182613dc2565b5060c08301516140b761012086018261432d565b5060e08301518482036101408601526120658282613fd2565b805160808301906140e18482613f71565b5060208201516140f4602085018261401c565b506040820151614107604085018261401c565b506060820151612c14606085018261432d565b80516020830190612c14848261432d565b8051606083019061413c8482614348565b50602082015161414f6020850182614348565b506040820151612c146040850182614336565b805160408301906141738482613dc2565b506020820151612c14602085018261432d565b80516101608301906141988482613dc2565b5060208201516141ab6020850182614302565b5060408201516141be606085018261412b565b5060608201516141d160c085018261400a565b5060808201516141e460e085018261400a565b5060a08201516141f861010085018261411a565b5060c082015161420c61012085018261411a565b5060e0820151612c14610140850182613f71565b805160408301906142318482613f71565b506020820151612c146020850182614324565b805160c0830190614255848261433f565b506020820151614268602085018261433f565b50604082015161427b604085018261433f565b50606082015161428e606085018261433f565b5060808201516142a1608085018261433f565b5060a0820151612c1460a0850182614324565b805160808301906142c5848261411a565b5060208201516142d8602085018261411a565b5060408201516142eb604085018261411a565b506060820151612c14606085018261411a565b9052565b805160408301906142318482614324565b805160408301906141738482613f71565b613dcb8161481c565b613dcb816147f1565b613dcb8161484a565b613dcb81614853565b613dcb81614860565b600061435d8284613f97565b50602001919050565b60006143728286613fa3565b915061437e8285613f8b565b6002820191506120658284613fa3565b600061439a8289613fa3565b91506143a68288613f8b565b6002820191506143b68287613fa3565b91506143c28286613f8b565b6002820191506143d28285613fa3565b91506143de8284613f7a565b506001019695505050505050565b60208101610c668284613dc2565b604081016144088285613dc2565b611f0f6020830184613f71565b606081016144238286613dc2565b614430602083018561432d565b6121af604083018461432d565b6060808252810161444e8186613dd1565b905081810360208301526144628185613edb565b905081810360408301526120658184613f26565b60208101610c668284613f71565b60208101610c66828461400a565b60208101610c668284614025565b60208082528101610c638184613fd2565b60208101610c66828461411a565b60608101610c66828461412b565b6101608101610c668284614186565b61020081016144eb8287614186565b6144f961016083018661412b565b6145076101c083018561411a565b6120656101e083018461411a565b60408101610c668284614220565b60c08101610c668284614244565b60808101610c6682846142b4565b6060810161454d82866142fe565b61455a6020830185613dc2565b6121af6040830184613dc2565b6060810161457582866142fe565b6145826020830185613dc2565b6121af6040830184613f71565b60c0810161459d82896142fe565b6145aa6020830188613dc2565b6145b7604083018761400a565b6145c4606083018661400a565b6145d1608083018561411a565b6145de60a083018461411a565b979650505050505050565b606081016145f782866142fe565b81810360208301526146098185613e90565b905081810360408301526120658184613e26565b6040810161462b82856142fe565b611f0f602083018461411a565b6060810161464682866142fe565b61455a602083018561432d565b6060810161466182866142fe565b614582602083018561432d565b6060810161467c82866142fe565b614689602083018561432d565b6121af604083018461400a565b606081016146a482866142fe565b6146b1602083018561432d565b6121af604083018461411a565b60408101610c668284614302565b6040810161462b828561411a565b60408101610c668284614313565b60208101610c66828461432d565b60405181810167ffffffffffffffff8111828210171561471557600080fd5b604052919050565b600067ffffffffffffffff82111561473457600080fd5b5060209081020190565b600067ffffffffffffffff82111561475557600080fd5b506020601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160190565b60200190565b5190565b90815260200190565b600061088382614831565b151590565b7fff000000000000000000000000000000000000000000000000000000000000001690565b7fffff0000000000000000000000000000000000000000000000000000000000001690565b90565b60006009821061480057fe5b5090565b60006002821061480057fe5b60006003821061480057fe5b6fffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b63ffffffff1690565b67ffffffffffffffff1690565b6bffffffffffffffffffffffff1690565b600061088382614797565b60006009821061480057600080fd5b60006002821061480057600080fd5b60006003821061480057600080fd5b6000610883826147f4565b600061088382614804565b600061088382614810565b82818337506000910152565b60005b838110156148f15781810151838201526020016148d9565b83811115612c145750506000910152565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169056fea265627a7a7230582097384b71afb0c7bafdaa393e2969142d048e0273d72f0bc71aaea3b57fa9857b6c6578706572696d656e74616cf50037",
  "sourceMap": "1065:1943:71:-;;;1537:24:30;;;1220:143:71;8:9:-1;5:2;;;30:1;27;20:12;5:2;1220:143:71;;;;;;;;;;;;;;;;;;;;;;515:6:2;:19;;-1:-1:-1;;;;;;515:19:2;524:10;515:19;;;;;549:40;;1349:2:71;;1353;;-1:-1:-1;;;;;582:6:2;;;;;515;;549:40;;515:6;;549:40;576:1:3;560:13;:17;1294:31:33;;;:18;:31;;;;;;;;;;;;;;;-1:-1:-1;1294:31:33;;;;;;;;;1335;;:18;:31;;;;;;;;;;;;;;-1:-1:-1;;1335:31:33;;;-1:-1:-1;;;;;1335:31:33;;;;-1:-1:-1;;;;;;;;1335:31:33;;;;;;;;-1:-1:-1;;;;;;;;1335:31:33;;;;;;;;;;;;;-1:-1:-1;;;;;1335:31:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;1335:31:33;-1:-1:-1;;;;;1335:31:33;;;;;;;;;-1:-1:-1;1065:1943:71;;-1:-1:-1;1065:1943:71;31:339:-1;;150:4;138:9;133:3;129:19;125:30;122:2;;;168:1;165;158:12;122:2;186:20;201:4;186:20;;;177:29;-1:-1;257:1;288:60;344:3;324:9;288:60;;;264:85;;-1:-1;275:5;116:254;-1:-1;;116:254;409:1196;;538:4;526:9;521:3;517:19;513:30;510:2;;;556:1;553;546:12;510:2;574:20;589:4;574:20;;;565:29;-1:-1;654:1;685:59;740:3;720:9;685:59;;;661:84;;-1:-1;822:2;855:59;910:3;886:22;;;855:59;;;848:4;841:5;837:16;830:85;766:160;987:2;1020:59;1075:3;1066:6;1055:9;1051:22;1020:59;;;1013:4;1006:5;1002:16;995:85;936:155;1153:2;1186:59;1241:3;1232:6;1221:9;1217:22;1186:59;;;1179:4;1172:5;1168:16;1161:85;1101:156;1319:3;1353:59;1408:3;1399:6;1388:9;1384:22;1353:59;;;1346:4;1339:5;1335:16;1328:85;1267:157;1489:3;1523:60;1579:3;1570:6;1559:9;1555:22;1523:60;;;1516:4;1509:5;1505:16;1498:86;1434:161;504:1101;;;;;1644:930;;1773:4;1761:9;1756:3;1752:19;1748:30;1745:2;;;1791:1;1788;1781:12;1745:2;1809:20;1824:4;1809:20;;;1800:29;-1:-1;1886:1;1917:79;1992:3;1972:9;1917:79;;;1893:104;;-1:-1;2071:2;2104:79;2179:3;2155:22;;;2104:79;;;2097:4;2090:5;2086:16;2079:105;2018:177;2253:2;2286:79;2361:3;2352:6;2341:9;2337:22;2286:79;;;2279:4;2272:5;2268:16;2261:105;2205:172;2439:2;2472:80;2548:3;2539:6;2528:9;2524:22;2472:80;;;2465:4;2458:5;2454:16;2447:106;2387:177;1739:835;;;;;2956:122;;3034:39;3065:6;3059:13;3034:39;;;3025:48;3019:59;-1:-1;;;3019:59;3085:122;;3163:39;3194:6;3188:13;3163:39;;3214:120;;3291:38;3321:6;3315:13;3291:38;;3341:517;;;3531:3;3519:9;3510:7;3506:23;3502:33;3499:2;;;3548:1;3545;3538:12;3499:2;3583:1;3600:93;3685:7;3665:9;3600:93;;;3590:103;;3562:137;3730:3;3749:93;3834:7;3825:6;3814:9;3810:22;3749:93;;;3739:103;;3709:139;3493:365;;;;;;3865:256;3927:2;3921:9;3953:17;;;-1:-1;;;;;4013:34;;4049:22;;;4010:62;4007:2;;;4085:1;4082;4075:12;4007:2;4101;4094:22;3905:216;;-1:-1;3905:216;4128:120;-1:-1;;;;;4197:46;;4180:68;4255:79;4324:5;4307:27;4341:103;-1:-1;;;;;4409:30;;4392:52;;1065:1943:71;;;;;;",
  "deployedSourceMap": "1065:1943:71:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1065:1943:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5012:292:29;;;;;;;;;:::i;:::-;;16905:174:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4126:210;;;;;;;;;:::i;:::-;;;;;;;;4013:292:29;;;;;;;;;:::i;13515:255:30:-;;;;;;;;;:::i;:::-;;;;;;;;;5809:225;;;;;;;;;:::i;:::-;;;;;;;;6214:234;;;;;;;;;:::i;7295:236::-;;;;;;;;;:::i;:::-;;;;;;;;3835:125;;;:::i;:::-;;;;;;;;2237:317:29;;;;;;;;;:::i;6644:258::-;;;;;;;;;:::i;5878:238::-;;;;;;;;;:::i;6285:240::-;;;;;;;;;:::i;16408:202:30:-;;;;;;;;;:::i;11974:255::-;;;;;;;;;:::i;:::-;;;;;;;;4520:292:29;;;;;;;;;:::i;1795:150:30:-;;;:::i;5378:257::-;;;;;;;;;:::i;:::-;;;;;;;;7795:213;;;;;;;;;:::i;3154:143::-;;;:::i;:::-;;;;;;;;15195:761;;;;;;;;;:::i;:::-;;;;;;;;;;1347:137:2;;;:::i;2869:162:30:-;;;:::i;2389:199:71:-;;;;;;;;;:::i;1886:371:32:-;;;;;;;;;:::i;8198:219:30:-;;;;;;;;;:::i;659:77:2:-;;;:::i;979:90::-;;;:::i;1830:313:29:-;;;;;;;;;:::i;2710:469::-;;;;;;;;;:::i;2053:260:31:-;;;;;;;;;:::i;2594:412:71:-;;;;;;;;;:::i;10561:491:30:-;;;;;;;;;:::i;:::-;;;;;;;;;;;5488:224:29;;;;;;;;;:::i;2164:162:30:-;;;:::i;12457:369::-;;;;;;;;;:::i;:::-;;;;;;;;4540:223;;;;;;;;;:::i;:::-;;;;;;;;9327:346;;;;;;;;;:::i;11460:226::-;;;;;;;;;:::i;1421:962:71:-;;;;;;;;;:::i;4949:223:30:-;;;;;;;;;:::i;13019:184::-;;;;;;;;;:::i;:::-;;;;;;;;2543:152;;;:::i;3669:277:29:-;;;;;;;;;:::i;3531:143:30:-;;;:::i;:::-;;;;;;;;9889:211;;;;;;;;;:::i;:::-;;;;;;;;3344:261:29;;;;;;;;;:::i;7140:269::-;;;;;;;;;:::i;1655:107:2:-;;;;;;;;;:::i;14527:262:30:-;;;;;;;;;:::i;6760:236::-;;;;;;;;;:::i;8602:294::-;;;;;;;;;:::i;5012:292:29:-;863:9:2;:7;:9::i;:::-;855:18;;;;;;993:13:3;:18;;1010:1;993:18;;;;;5186:111:29;;;;;:9;;:31;;:111;;993:13:3;;5252:8:29;;5274:13;;5186:111;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5186:111:29;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5186:111:29;;;;1102:13:3;;1086:12;:29;1078:38;;;;;;883:1:2;5012:292:29;;:::o;16905:174:30:-;17011:4;17038:34;17011:4;17063:8;17038:34;:24;:34;:::i;:::-;17031:41;;16905:174;;;;:::o;4126:210::-;4234:7;4257:29;4277:8;4257:19;:29::i;:::-;4303:26;:7;4320:8;4303:26;:16;:26;:::i;4013:292:29:-;863:9:2;:7;:9::i;:::-;855:18;;;;;;993:13:3;:18;;1010:1;993:18;;;;;4185:113:29;;;;;:9;;:32;;:113;;993:13:3;;4252:8:29;;4274:14;;4185:113;;;;13515:255:30;13629:21;;:::i;:::-;13652;;:::i;:::-;13696:67;13721:7;13757:5;13696:24;:67::i;:::-;13689:74;;;;13515:255;;;:::o;5809:225::-;5916:12;5944:29;5964:8;5944:19;:29::i;:::-;-1:-1:-1;5990:7:30;:25;;;:15;:25;;;;;:37;;;;;;5809:225::o;6214:234::-;6324:15;6355:29;6375:8;6355:19;:29::i;:::-;-1:-1:-1;6401:7:30;:25;;;:15;:25;;;;;:40;;;;;;6214:234::o;7295:236::-;7404:19;;:::i;:::-;7439:29;7459:8;7439:19;:29::i;:::-;-1:-1:-1;7485:7:30;:25;;;:15;:25;;;;;;;;;7478:46;;;;;;;;7485:39;;;;7478:46;;;;7295:236::o;3835:125::-;3905:7;3935:18;3835:125;:::o;2237:317:29:-;2404:7;863:9:2;:7;:9::i;:::-;855:18;;;;;;993:13:3;:18;;1010:1;993:18;;;;;2434:113:29;;;;;:9;;:40;;:113;;993:13:3;;2509:5:29;;2528:9;;2434:113;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2434:113:29;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2434:113:29;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2434:113:29;;;;;;;;;2427:120;;1102:13:3;;1086:12;:29;1078:38;;;;;;883:1:2;2237:317:29;;;;:::o;6644:258::-;863:9:2;:7;:9::i;:::-;855:18;;;;;;993:13:3;:18;;1010:1;993:18;;;;;6800:95:29;;;;;:9;;:34;;:95;;993:13:3;;6869:16:29;;6800:95;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6800:95:29;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6800:95:29;;;;1102:13:3;;1086:12;:29;1078:38;;;;;;883:1:2;6644:258:29;:::o;5878:238::-;863:9:2;:7;:9::i;:::-;855:18;;;;;;993:13:3;:18;;1010:1;993:18;;;;;6023:86:29;;;;;:9;;:35;;:86;;993:13:3;;6093:6:29;;6023:86;;;;6285:240;863:9:2;:7;:9::i;:::-;855:18;;;;;;993:13:3;:18;;1010:1;993:18;;;;;6431:87:29;;;;;:9;;:30;;:87;;993:13:3;;6496:12:29;;6431:87;;;;16408:202:30;16536:4;16563:40;16536:4;16587:5;16594:8;16563:40;:23;:40;:::i;:::-;16556:47;;16408:202;;;;;:::o;11974:255::-;12111:16;;:::i;:::-;12143:29;12163:8;12143:19;:29::i;:::-;12189:33;:7;12204;12213:8;12189:33;:14;:33;:::i;4520:292:29:-;863:9:2;:7;:9::i;:::-;855:18;;;;;;993:13:3;:18;;1010:1;993:18;;;;;4694:111:29;;;;;:9;;:31;;:111;;993:13:3;;4760:8:29;;4782:13;;4694:111;;;;1795:150:30;1866:19;;:::i;:::-;-1:-1:-1;1901:37:30;;;;;;;;;1908:18;1901:37;;;1795:150;:::o;5378:257::-;5486:21;;:::i;:::-;5523:29;5543:8;5523:19;:29::i;:::-;5569:59;5591:8;5601:26;:7;5591:8;5601:26;:16;:26;:::i;:::-;5569:7;;:59;;:21;:59;:::i;7795:213::-;7900:4;7920:29;7940:8;7920:19;:29::i;:::-;-1:-1:-1;7966:7:30;:25;;;:15;:25;;;;;:35;;;;;;7795:213::o;3154:143::-;3224:25;;:::i;:::-;-1:-1:-1;3265:25:30;;;;;;;;3272:18;3265:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3265:25:30;;;;;;;;;;;;;;;;;;;;3154:143;:::o;15195:761::-;15324:16;15354:18;15386;15429;15450:7;:18;;;15429:39;;15478:23;15518:10;15504:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;15504:25:30;;15478:51;;15539:23;15581:10;15565:27;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;15539:53;;15602:23;15644:10;15628:27;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;15602:53:30;-1:-1:-1;15671:9:30;15666:200;15690:10;15686:1;:14;15666:200;;;15733:24;15755:1;15733:21;:24::i;:::-;15721:6;15728:1;15721:9;;;;;;;;;;;;;:36;;;;;;;;;;;15781:25;15795:7;15804:1;15781:13;:25::i;:::-;15771:4;15776:1;15771:7;;;;;;;;;;;;;:35;;;;15830:25;15844:7;15853:1;15830:13;:25::i;:::-;15820:4;15825:1;15820:7;;;;;;;;;;;;;;;;;:35;15702:3;;15666:200;;;-1:-1:-1;15897:6:30;;15917:4;;-1:-1:-1;15897:6:30;;-1:-1:-1;15195:761:30;-1:-1:-1;;;15195:761:30:o;1347:137:2:-;863:9;:7;:9::i;:::-;855:18;;;;;;1429:6;;1408:40;;1445:1;;1408:40;1429:6;;1408:40;;1445:1;;1408:40;1458:6;:19;;;;;;1347:137::o;2869:162:30:-;2945:21;;:::i;:::-;-1:-1:-1;2982:42:30;;;;;;;;;2989:35;2982:42;;;2869:162;:::o;2389:199:71:-;2535:13;;2518:31;;:7;:31;;;:16;:31;;;;;;;;2550:14;;;;2518:47;;;;;;;;:54;;;;:63;;2575:6;;2518:54;;:63;;;;;2575:6;;2518:63;;;;;;;;;;;;2389:199;;:::o;1886:371:32:-;1983:9;1978:273;2002:4;:11;1998:1;:15;1978:273;;;2034:16;2053:4;2058:1;2053:7;;;;;;;;;;;;;;:16;;;2034:35;;2083:12;2098:4;2103:1;2098:7;;;;;;;;;;;;;;;;;;;:15;;;2145:10;2127:7;:29;;;:17;:29;;;;;;;:39;;;;;;;;;;:49;;;;;;;;;;2195:45;;2098:15;;-1:-1:-1;2195:45:32;;;;2127:39;;2098:15;;2195:45;;;;;;;;;;-1:-1:-1;;2015:3:32;;1978:273;;8198:219:30;8299:21;;:::i;:::-;8336:29;8356:8;8336:19;:29::i;:::-;8382:28;:7;8401:8;8382:28;:18;:28;:::i;659:77:2:-;723:6;;;;659:77;:::o;979:90::-;1056:6;;;;1042:10;:20;;979:90::o;1830:313:29:-;1995:7;863:9:2;:7;:9::i;:::-;855:18;;;;;;993:13:3;:18;;1010:1;993:18;;;;;2025:111:29;;;;;:9;;:35;;:111;;993:13:3;;2095:8:29;;2117:9;;2025:111;;;;2710:469;863:9:2;:7;:9::i;:::-;855:18;;;;;;993:13:3;:18;;1010:1;993:18;;;;;2991:181:29;;;;;:9;;:24;;:181;;993:13:3;;3050:5:29;;3069:11;;3094:14;;3122:13;;3149;;2991:181;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2991:181:29;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2991:181:29;;;;1102:13:3;;1086:12;:29;1078:38;;;;;;883:1:2;2710:469:29;;;;;:::o;2053:260:31:-;993:13:3;:18;;1010:1;993:18;;;;;2211:95:31;;;;;:13;;:21;;:95;;993:13:3;;2267:8:31;;2289:7;;2211:95;;;;2594:412:71;2714:30;;:::i;:::-;-1:-1:-1;2747:7:71;:23;;;:15;:23;;;;;;;;;2714:62;;;;;;;2747:29;;;;2714:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2791:12;;:17;2787:78;;2839:15;;2824:30;;;;2787:78;2878:12;;;;:17;;2874:78;;2926:15;;;;;2911:30;;:12;;;:30;2874:78;-1:-1:-1;2962:7:71;:23;;;:15;:23;;;;;;;;;:37;;:29;;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2594:412::o;10561:491:30:-;10678:21;;:::i;:::-;10713;;:::i;:::-;10748;;:::i;:::-;10783:20;;:::i;:::-;10828:29;10848:8;10828:19;:29::i;:::-;10888:19;10898:8;10888:9;:19::i;:::-;10921:31;10943:8;10921:21;:31::i;:::-;10966:24;10981:8;10966:14;:24::i;:::-;11004:31;11026:8;11004:21;:31::i;:::-;10867:178;;;;;;;;10561:491;;;;;:::o;5488:224:29:-;863:9:2;:7;:9::i;:::-;855:18;;;;;;993:13:3;:18;;1010:1;993:18;;;;;5626:79:29;;;;;:9;;:29;;:79;;993:13:3;;5690:5:29;;5626:79;;;;2164:162:30;2241:19;;:::i;:::-;-1:-1:-1;2276:43:30;;;;;;;;;2283:36;2276:43;;;2164:162;:::o;12457:369::-;12594:16;;:::i;:::-;12626:29;12646:8;12626:19;:29::i;:::-;12672:147;12703:33;:7;12718;12727:8;12703:33;:14;:33;:::i;:::-;12750:59;12772:8;12782:26;:7;12772:8;12782:26;:16;:26;:::i;12750:59::-;12672:17;:147::i;4540:223::-;4644:21;;:::i;:::-;4681:29;4701:8;4681:19;:29::i;:::-;4727;:7;4747:8;4727:29;:19;:29;:::i;9327:346::-;9475:19;;:::i;:::-;9510:33;9530:12;9510:19;:33::i;:::-;9553;9573:12;9553:19;:33::i;:::-;9603:63;:7;9639:12;9653;9603:63;:35;:63;:::i;11460:226::-;11565:16;;:::i;:::-;11597:29;11617:8;11597:19;:29::i;:::-;11643:36;:7;11670:8;11643:36;:26;:36;:::i;1421:962:71:-;1577:23;;:::i;:::-;-1:-1:-1;1620:13:71;;1603:31;;:7;:31;;;:16;:31;;;;;;;;1635:14;;;;1603:47;;;;;;;:64;;;;;;;;;1577:90;;;;;;;;;;;;;;;;;;;;;;;;;1677:30;;:::i;:::-;-1:-1:-1;1710:7:71;:23;;;:15;:23;;;;;;;;;1677:65;;;;;;;;1710:32;;;1677:65;;;;;;;;;;;;;;;;1785:11;;1781:209;;;1830:50;:42;1859:6;:12;;;1830:42;;1838:8;:15;;;1830:24;;:28;;:42;;;;:::i;:::-;:48;:50::i;:::-;1812:68;;:15;;;:68;1781:209;;;1958:12;;;;1937:15;;1929:50;;:42;;;:24;;;;:42;;:28;:42;:::i;:50::-;1911:68;;;;1781:209;2035:11;;2031:209;;;2080:50;:42;2109:6;:12;;;2080:42;;2088:8;:15;;;2080:24;;:28;;:42;;;;:::i;:50::-;2062:68;;:15;;;:68;2031:209;;;2208:12;;;;2187:15;;2179:50;;:42;;;:24;;;;:42;;:28;:42;:::i;:50::-;2161:68;;;;2031:209;2250:7;:23;;;:15;:23;;;;;;;;:43;;:32;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2320:13;;2303:31;;;;:16;:31;;;;;2335:14;;;;2303:47;;;;;;;;:64;;;;;;;;;;:73;;;;;;;;;;;;2250:43;2303:73;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1421:962:71:o;4949:223:30:-;5056:21;;:::i;:::-;5093:29;5113:8;5093:19;:29::i;:::-;5139:26;:7;5156:8;5139:26;:16;:26;:::i;13019:184::-;13133:14;13170:26;13133:14;13188:7;13170:26;:17;:26;:::i;2543:152::-;2615:19;;:::i;:::-;-1:-1:-1;2650:38:30;;;;;;;;;2657:31;2650:38;;;2543:152;:::o;3669:277:29:-;863:9:2;:7;:9::i;:::-;855:18;;;;;;993:13:3;:18;;1010:1;993:18;;;;;3832:107:29;;;;;:9;;:29;;:107;;993:13:3;;3896:8:29;;3918:11;;3832:107;;;;3531:143:30;3601:25;;:::i;:::-;-1:-1:-1;3642:25:30;;;;;;;;3649:18;3642:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3531:143::o;9889:211::-;9985:21;;:::i;:::-;10022:29;10042:8;10022:19;:29::i;:::-;-1:-1:-1;10068:7:30;:25;;;:15;:25;;;;;;;;;10061:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9889:211::o;3344:261:29:-;863:9:2;:7;:9::i;:::-;855:18;;;;;;993:13:3;:18;;1010:1;993:18;;;;;3495:103:29;;;;;:9;;:27;;:103;;993:13:3;;3557:8:29;;3579:9;;3495:103;;;;7140:269;863:9:2;:7;:9::i;:::-;855:18;;;;;;993:13:3;:18;;1010:1;993:18;;;;;7295:107:29;;;;;:9;;:32;;:107;;993:13:3;;7362:8:29;;7384;;7295:107;;;;1655::2;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;14527:262:30:-;14649:21;;:::i;:::-;14672;;:::i;:::-;14716:66;14741:7;14777:4;14716:24;:66::i;6760:236::-;6869:19;;:::i;:::-;6904:29;6924:8;6904:19;:29::i;:::-;-1:-1:-1;6950:7:30;:25;;;:15;:25;;;;;;;;;6943:46;;;;;;;;6950:39;;;;6943:46;;;;6760:236::o;8602:294::-;8710:20;;:::i;:::-;8746:29;8766:8;8746:19;:29::i;:::-;8792:97;8831:8;8853:26;:7;8831:8;8853:26;:16;:26;:::i;:::-;8792:7;;:97;;:25;:97;:::i;11146:207:53:-;11315:31;;11288:4;11315:31;;;:21;;;;;:31;;;;;;;;;11146:207::o;17198:220:30:-;17302:109;17339:7;:18;;;17328:8;:29;17371:4;;17302:109;:12;:109::i;4217:200:53:-;4351:7;4381:23;;;:13;;;;;:23;;;;;:29;;;;4217:200::o;17509:610:30:-;17665:21;;:::i;:::-;17688;;:::i;:::-;17725:18;17746;17801:30;;:::i;:::-;17834:24;17847:10;17834:12;:24::i;:::-;17801:57;-1:-1:-1;17873:9:30;17868:167;17892:10;17888:1;:14;17868:167;;;17928:35;:26;:7;17943;17952:1;17928:26;:14;:26;:::i;:::-;:33;:35::i;:::-;17923:102;;17983:27;:5;17999:7;18008:1;17983:27;:15;:27;:::i;:::-;;17923:102;17904:3;;17868:167;;;-1:-1:-1;18052:60:30;:7;18077;18086:5;18093:18;18052:60;:24;:60;:::i;:::-;18045:67;;;;;;17509:610;;;;;:::o;11359:230:53:-;11550:22;;;;11523:4;11550:22;;;:15;;;:22;;;;;;;;:32;;;;;;;;;;;;11359:230;;;;;;:::o;5908:279::-;6077:16;;:::i;:::-;-1:-1:-1;6131:13:53;;6116:29;;;;;;:14;;;:29;;;;;;;;6146:14;;;;6116:45;;;;;;;:64;;;;;;;;;6109:71;;;;;;;;;;;;;;;;;;;;;;;;;;5908:279;;;;;:::o;4649:214::-;4783:21;;:::i;:::-;-1:-1:-1;4827:23:53;;;;:13;;;;;:23;;;;;;;;;4820:36;;;;;;;4827:29;;;;4820:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4649:214::o;7203:463::-;7379:21;;:::i;:::-;7416:25;;:::i;:::-;7444:40;:5;7468:8;7478:5;7444:40;:23;:40;:::i;:::-;7416:68;-1:-1:-1;7502:157:53;7542:5;7416:68;7579:27;:5;7597:8;7579:27;:17;:27;:::i;:::-;7502:157;;;;;;;;;7620:29;;;7502:157;;;:26;:157::i;:::-;7495:164;7203:463;-1:-1:-1;;;;;7203:463:53:o;8324:492::-;8460:21;;:::i;:::-;8497:19;8532:23;;;:13;;;:23;;;;;:35;;;;;8578:27;;:::i;:::-;8608:15;;;;8624:24;:5;8639:8;8624:24;:14;:24;:::i;:::-;8608:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8608:41:53;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8608:41:53;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8608:41:53;;;;;;;;;8685:11;;8578:71;;-1:-1:-1;8659:128:53;;8685:16;;8715:4;8659:128;8769:8;8659:12;:128::i;:::-;8804:5;8324:492;-1:-1:-1;;;;8324:492:53:o;3844:552:49:-;3975:16;;:::i;:::-;4036:11;;;;4062:10;;4028:20;;;;;4058:332;;;4095:119;;;;;;;;;4129:4;4095:119;;;4180:12;;;;4095:119;;;;4158:41;;:10;;:41;;1197:6;4158:41;:21;:41;:::i;:::-;4095:119;;;4088:126;;;;;4058:332;4252:127;;;;;;;;;-1:-1:-1;4252:127:49;;4345:12;;4252:127;;;;4316:48;;:10;;:48;;1197:6;4316:48;:28;:48;:::i;4423:220:53:-;4560:21;;:::i;:::-;-1:-1:-1;4604:23:53;;;;:13;;;;:23;;;;;;;;;4597:39;;;;;;;;4604:32;;;4597:39;;;;;;;;;;;;;;;;4423:220;;;;:::o;6647:550::-;6834:19;;:::i;:::-;6886:34;;;;:40;6869:14;6981:27;;;6886:34;6981:13;;:27;;;;;;;;;6965:58;;;;;;;;6981:41;;6965:58;;;6886:40;6945:79;;6886:40;;6965:58;;:15;:58::i;:::-;6945:11;:79::i;:::-;6936:88;;7043:79;7055:6;7063:58;7079:5;:13;;:27;7093:12;7079:27;;;;;;;;;;;:41;;7063:58;;;;;;;;;;;;;;;;;:15;:58::i;7043:79::-;7139:51;;;;;;;;;;;;;6647:550;-1:-1:-1;;;;;6647:550:53:o;4869:785::-;5013:16;;:::i;:::-;5045:27;;:::i;:::-;5075:24;:5;5090:8;5075:24;:14;:24;:::i;:::-;5045:54;;5109:30;;:::i;:::-;5142:27;:5;5160:8;5142:27;:17;:27;:::i;:::-;5109:60;-1:-1:-1;5180:13:53;5196:24;:5;5211:8;5196:24;:14;:24;:::i;:::-;5180:40;;5231:27;;:::i;:::-;5261:103;;;;;;;;5291:4;5261:103;;;;;;5316:37;5332:5;5347:4;5316:15;:37::i;:::-;5261:103;;5231:133;-1:-1:-1;5389:26:53;;:::i;:::-;5429;;:::i;:::-;5468:39;5491:8;5501:5;5468:22;:39::i;:::-;5375:132;;-1:-1:-1;5375:132:53;-1:-1:-1;5607:40:53;5375:132;5607:25;:10;5375:132;5607:25;:14;:25;:::i;:::-;:29;:40;:29;:40;:::i;:::-;5600:47;4869:785;-1:-1:-1;;;;;;;;;4869:785:53:o;1205:145:1:-;1263:7;1295:1;1290;:6;;1282:15;;;;;;-1:-1:-1;1319:5:1;;;1205:145::o;1847:295:50:-;1939:7;1987:6;2004:108;2030:16;;;;;2060:4;2004:108;:12;:108::i;1431:145:1:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;5660:242:53;5858:13;;5843:29;;5806:14;5843:29;;;:14;;;;;:29;;;;;;;;5873:14;;;;5843:45;;;;;;;:52;;;;;;5660:242::o;1906:183:2:-;1979:22;;;1971:31;;;;;;2038:6;;2017:38;;;;;;;2038:6;;2017:38;;2038:6;;2017:38;2065:6;:17;;;;;;;;;;;;;;;1906:183::o;7672:646:53:-;7852:20;;:::i;:::-;7888:30;;:::i;:::-;7921:27;:5;7939:8;7921:27;:17;:27;:::i;:::-;7888:60;;7972:26;;:::i;:::-;8012;;:::i;:::-;8051:39;8074:8;8084:5;8051:22;:39::i;:::-;7958:132;;;;8101:25;;:::i;:::-;8129:23;;;;:13;;;:23;;;;;:38;;;;;:54;8197:24;8129:5;8143:8;8197:24;:14;:24;:::i;:::-;8235:9;:15;;;8264:9;:15;;;8129:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8129:160:53;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8129:160:53;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8129:160:53;;;;;;;;;8101:188;7672:646;-1:-1:-1;;;;;;;;7672:646:53:o;1293:426:52:-;1427:4;1422:291;;1541:24;1560:4;1541:18;:24::i;:::-;1591:5;1622:26;1641:6;1622:18;:26::i;:::-;1499:171;;;;;;;;;;;;;;;22:32:-1;26:21;;;22:32;6:49;;1499:171:52;;;;1447:255;;;;;;;;;;;;;;;;;1286:219:45;1383:18;;:::i;:::-;1424:74;;;;;;;;1476:10;1459:28;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;1424:74:45;;1417:81;1286:219;-1:-1:-1;;1286:219:45:o;3594:137:56:-;3712:7;;;:12;;;;3594:137::o;1711:549:45:-;1880:4;1904:25;:5;1920:8;1904:25;:15;:25;:::i;:::-;1900:68;;;-1:-1:-1;1952:5:45;1945:12;;1900:68;2009:26;:5;2026:8;2009:26;:16;:26;:::i;:::-;1977:13;;:23;;1991:8;;1977:23;;;;;;;;;;;;;;;;;:29;;;;:58;;;;2049:23;;;;:13;;;:23;;;;:33;;;;;2045:188;;;2134:4;2098:5;:13;;;2112:8;2098:23;;;;;;;;;;;;;;;;;;:40;;;;;2188:27;:5;2206:8;2188:27;:17;:27;:::i;:::-;:34;2152:13;;:23;;2166:8;;2152:23;;;;;;;;;;;;;;;;;:70;;;;:33;;:70;2045:188;-1:-1:-1;2249:4:45;1711:549;;;;;:::o;8822:1261:53:-;9048:21;;:::i;:::-;9071;;:::i;:::-;9108:33;;:::i;:::-;9151;;:::i;:::-;9195:18;9216:21;:5;:19;:21::i;:::-;9195:42;-1:-1:-1;9252:9:53;9247:786;9271:10;9267:1;:14;9247:786;;;9307:18;:5;9323:1;9307:18;:15;:18;:::i;:::-;9302:66;;9345:8;;9302:66;9382:24;;:::i;:::-;9409;:5;9422:7;9431:1;9409:24;:12;:24;:::i;:::-;9382:51;;9452:16;:7;:14;:16::i;:::-;9448:63;;;9488:8;;;9448:63;9525:18;9546:42;9564:17;:5;9579:1;9564:17;:14;:17;:::i;:::-;:23;9546:13;;;;;:42;:17;:42;:::i;:::-;9525:63;;9602:26;;:::i;:::-;9631:13;:11;:13::i;:::-;9602:42;;9662:18;9658:113;;;9725:16;;;;:13;;;:16;;;;;;;;;9709:47;;;;;;;;9725:30;;;;9709:47;;;;;:15;:47::i;:::-;9700:56;;9658:113;9789:12;;9785:238;;;9841:54;9863:31;9875:10;9887:6;9863:11;:31::i;:::-;9841:17;;;:54;:21;:54;:::i;:::-;9821:74;;9785:238;;;9954:54;9976:31;9988:10;10000:6;9976:11;:31::i;:::-;9954:17;;;:54;:21;:54;:::i;:::-;9934:74;;9785:238;9247:786;;;;9283:3;;9247:786;;;-1:-1:-1;10051:11:53;;10064;;-1:-1:-1;8822:1261:53;-1:-1:-1;;;;;;8822:1261:53:o;2228:1299:49:-;2444:12;;:::i;:::-;2486:26;;:::i;:::-;2526;;:::i;:::-;2565:30;2579:8;2589:5;2565:13;:30::i;:::-;2472:123;;;;2653:18;2674;:16;:18::i;:::-;2653:39;;2702:22;2727:58;2742:42;2767:5;:16;;;2742:42;;2750:11;2742:20;;:24;;:42;;;;:::i;:::-;2727:10;;;:58;:14;:58;:::i;:::-;2702:83;;2843:22;2879:23;2892:9;2879:12;:23::i;:::-;2875:328;;;-1:-1:-1;2935:1:49;2875:328;;;2984:41;2996:14;3012:12;2984:11;:41::i;:::-;2967:58;;3061:9;:15;;;3043:9;:15;;;:33;3039:154;;;3113:65;3129:14;3145:9;:15;;;3162:9;:15;;;3113;:65::i;:::-;3096:82;;3039:154;3237:14;3219;:32;;3212:40;;;;3270:250;;;;;;;;;3354:12;;3270:250;;3298:76;;:69;;;;:51;:69;3328:14;1197:6;3298:15;:51::i;:::-;:55;:69;:55;:69;:::i;:::-;:74;:76::i;:::-;3270:250;;;;;;;3452:12;;;;3270:250;;;3396:76;;:69;;;:51;:69;3426:14;1197:6;3396:15;:51::i;:76::-;3270:250;;;;;;3498:11;3270:250;;;;;3263:257;;;;;;;2228:1299;;;;;;:::o;1725:561:52:-;1885:4;1880:400;;1999:24;2018:4;1999:18;:24::i;:::-;2049:5;2080:26;2099:6;2080:18;:26::i;:::-;2132:6;2164:19;2174:8;2164:9;:19::i;:::-;1957:280;;;;;;;;;2209:6;;1957:280;;;;1880:400;1725:561;;;;:::o;1117:228:50:-;1270:7;1300:38;1326:11;1300:21;:6;1311:9;1300:21;:10;:21;:::i;:::-;:25;:38;:25;:38;:::i;1432:409::-;1592:7;1619:11;;;:29;;-1:-1:-1;1634:14:50;;1619:29;1615:151;;;1727:28;1740:1;1743:11;1727:12;:28::i;:::-;1720:35;;;;1615:151;1782:52;1832:1;1782:45;1815:11;1782:28;1832:1;1782:21;:6;1793:9;1782:21;:10;:21;:::i;:::-;:25;:28;:25;:28;:::i;1290:168:46:-;1383:11;;:::i;:::-;1417:34;;;;;;;;;1431:7;;1417:34;;1431:17;;1013:6;1431:17;:11;:17;:::i;:::-;1417:34;;1410:41;1290:168;-1:-1:-1;;1290:168:46:o;1464:188::-;1577:7;1607:38;1623:6;1631:1;:7;;;1013:6;1607:15;:38::i;1180:185:55:-;1328:30;;;;;1298:7;;1328:23;;;;;;:30;;1352:5;;1328:30;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1328:30:55;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1328:30:55;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1328:30:55;;;;;;;;5147:601:49;5291:16;;:::i;:::-;5309;;:::i;:::-;5341:26;;:::i;:::-;-1:-1:-1;5370:81:49;;;;;;;;;5400:4;5370:81;;;5425:15;;;;5370:81;;;;;;5461:26;;:::i;:::-;-1:-1:-1;5490:82:49;;;;;;;;;-1:-1:-1;5490:82:49;;5546:15;;5490:82;;;;;;5582:26;;:::i;:::-;5611;5620:9;5631:5;5611:8;:26::i;:::-;5582:55;;5647:26;;:::i;:::-;5676;5685:9;5696:5;5676:8;:26::i;:::-;5720:9;;;;-1:-1:-1;5147:601:49;;-1:-1:-1;;;;;;5147:601:49:o;4096:169:56:-;4206:10;;:::i;:::-;4239:19;4243:1;4246:11;4255:1;4246:8;:11::i;:::-;4239:3;:19::i;6358:966:52:-;6461:12;6536:19;6575:5;6558:23;;;;;;;;;;;;;22:32:-1;26:21;;;22:32;6:49;;6558:23:52;;;;-1:-1:-1;49:4;6687:571:52;6708:5;;6687:571;;6959:9;;6861:3;;;;;6959:6;;6861:3;;6959:9;;;;;;;;;;;;;;;;;:14;;;6955:293;;7014:1;7010:5;7140:22;;7147:6;-1:-1:-1;7220:13:52;;6955:293;6687:571;;;-1:-1:-1;;7305:12:52;;;7315:1;7305:12;;;;;;;;;7298:19;-1:-1:-1;;6358:966:52:o;2490:206:45:-;2622:4;2649:5;:13;;;2663:8;2649:23;;;;;;;;;;;;;;:29;;;:35;;;2688:1;2649:40;;2642:47;;2490:206;;;;:::o;2317:167::-;2457:13;:20;;2317:167::o;6193:448:53:-;6362:16;;:::i;:::-;6394:20;;:::i;:::-;6417:31;:5;6430:7;6439:8;6417:31;:12;:31;:::i;:::-;6394:54;;6463:12;:3;:10;:12::i;:::-;6459:65;;;6498:15;:13;:15::i;:::-;6491:22;;;;;6459:65;6534:27;;:::i;:::-;6564:24;:5;6579:8;6564:24;:14;:24;:::i;:::-;6534:54;;6605:29;6623:3;6628:5;6605:17;:29::i;:::-;6598:36;6193:448;-1:-1:-1;;;;;;6193:448:53:o;5723:137:56:-;5841:7;;;:12;;5723:137::o;2910:211:45:-;3041:21;;:::i;:::-;3085:13;;:23;;3099:8;;3085:23;;;;;;;;;;;;:29;;;3078:36;;2910:211;;;;:::o;229:421:1:-;287:7;527:6;523:45;;-1:-1:-1;556:1:1;549:8;;523:45;590:5;;;594:1;590;:5;:1;613:5;;;;;:10;605:19;;;;;1160:124:46;1222:11;;:::i;:::-;-1:-1:-1;1256:21:46;;;;;;;;;1013:6;1256:21;;1160:124;:::o;1658:188::-;1771:7;1801:38;1817:6;1013;1831:1;:7;;;1801:15;:38::i;909:132:54:-;979:6;1008:26;1018:15;1008:9;:26::i;:::-;1001:33;;909:132;:::o;2148:290:50:-;2239:6;2284;2301:107;2327:16;;;;;2357:4;2301:107;:12;:107::i;7330:912:52:-;7424:12;7456:10;7452:51;;-1:-1:-1;7482:10:52;;;;;;;;;;;;;;;;;;;7452:51;7564:5;7552:9;7603:69;7610:6;;7603:69;;7632:8;;7659:2;7654:7;;;;7603:69;;;7713:17;7743:6;7733:17;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;7733:17:52;87:34:-1;135:17;;-1:-1;7733:17:52;-1:-1:-1;7842:5:52;;-1:-1:-1;7713:37:52;-1:-1:-1;7874:6:52;7857:357;7882:5;;7857:357;;8035:3;;8131:2;8127:1;:6;901:2;8113:21;8102:34;;8092:4;8097:1;8092:7;;;;;;;;;;;:44;;;;;;;;;;-1:-1:-1;8201:2:52;8196:7;;;;7857:357;;;-1:-1:-1;8231:4:52;7330:912;-1:-1:-1;;;;7330:912:52:o;778:296:1:-;836:7;933:1;929;:5;921:14;;;;;;945:9;961:1;957;:5;;;;;;;778:296;-1:-1:-1;;;;778:296:1:o;5201:203:56:-;5294:10;;:::i;:::-;-1:-1:-1;5327:70:56;;;;;;;;;5352:6;;5351:7;5327:70;;;5379:7;;;;5327:70;;;;5201:203;;;:::o;4271:610::-;4381:10;;:::i;:::-;4407:17;;:::i;:::-;4448:6;;4438;;:16;;;;;;4434:418;;;4484:6;;4470:20;;;;4532:7;;;;;4541;;;;4519:30;;4532:7;4519:12;:30::i;:::-;4504:12;;;:45;4434:418;;;4595:1;:7;;;4584:1;:7;;;:18;4580:262;;4636:6;;4622:20;;;;4688:7;;;;;4697;;;;4675:30;;4688:7;4675:12;:30::i;4580:262::-;4758:6;;4744:20;;;;4810:7;;;;;4819;;;;4797:30;;4810:7;4797:12;:30::i;:::-;4782:12;;;:45;:12;4271:610;-1:-1:-1;;;4271:610:56:o;3922:168::-;3988:10;;:::i;:::-;-1:-1:-1;4021:62:56;;;;;;;;;-1:-1:-1;4021:62:56;;;;;;;3922:168;:::o;2444:290:50:-;2535:6;2580;2597:107;2623:16;;;;;2653:4;2597:107;:12;:107::i;1065:1943:71:-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;1065:1943:71;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;1065:1943:71;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;1065:1943:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;1065:1943:71;;;;;;;;;;;;:::i;5:118:-1:-;;72:46;110:6;97:20;72:46;;166:753;;308:3;301:4;293:6;289:17;285:27;275:2;;326:1;323;316:12;275:2;363:6;350:20;385:105;400:89;482:6;400:89;;;385:105;;;518:21;;;562:4;550:17;;;;376:114;;-1:-1;575:14;;550:17;670:1;655:258;680:6;677:1;674:13;655:258;;;763:3;750:17;742:6;738:30;787:62;845:3;833:10;787:62;;;775:75;;-1:-1;873:4;864:14;;;;892;;;;;702:1;695:9;655:258;;;659:14;268:651;;;;;;;;957:764;;1093:3;1086:4;1078:6;1074:17;1070:27;1060:2;;1111:1;1108;1101:12;1060:2;1148:6;1135:20;1170:99;1185:83;1261:6;1185:83;;1170:99;1161:108;;1286:5;1311:6;1304:5;1297:21;1341:4;1333:6;1329:17;1319:27;;1363:4;1358:3;1354:14;1347:21;;1416:6;1463:3;1455:4;1447:6;1443:17;1438:3;1434:27;1431:36;1428:2;;;1480:1;1477;1470:12;1428:2;1505:1;1490:225;1515:6;1512:1;1509:13;1490:225;;;1573:3;1595:56;1647:3;1635:10;1595:56;;;1583:69;;-1:-1;1675:4;1666:14;;;;1703:4;1694:14;;;;;1537:1;1530:9;1490:225;;1769:785;;1912:3;1905:4;1897:6;1893:17;1889:27;1879:2;;1930:1;1927;1920:12;1879:2;1967:6;1954:20;1989:106;2004:90;2087:6;2004:90;;1989:106;1980:115;;2112:5;2137:6;2130:5;2123:21;2167:4;2159:6;2155:17;2145:27;;2189:4;2184:3;2180:14;2173:21;;2242:6;2289:3;2281:4;2273:6;2269:17;2264:3;2260:27;2257:36;2254:2;;;2306:1;2303;2296:12;2254:2;2331:1;2316:232;2341:6;2338:1;2335:13;2316:232;;;2399:3;2421:63;2480:3;2468:10;2421:63;;;2409:76;;-1:-1;2508:4;2499:14;;;;2536:4;2527:14;;;;;2363:1;2356:9;2316:232;;2562:112;;2626:43;2661:6;2648:20;2626:43;;2682:432;;2779:3;2772:4;2764:6;2760:17;2756:27;2746:2;;2797:1;2794;2787:12;2746:2;2834:6;2821:20;2856:60;2871:44;2908:6;2871:44;;2856:60;2847:69;;2936:6;2929:5;2922:21;2972:4;2964:6;2960:17;3005:4;2998:5;2994:16;3040:3;3031:6;3026:3;3022:16;3019:25;3016:2;;;3057:1;3054;3047:12;3016:2;3067:41;3101:6;3096:3;3091;3067:41;;;2739:375;;;;;;;;3122:168;;3214:71;3277:6;3264:20;3214:71;;3466:150;;3549:62;3603:6;3590:20;3549:62;;3623:164;;3713:69;3774:6;3761:20;3713:69;;3959:142;;4038:58;4088:6;4075:20;4038:58;;4140:1525;;4254:5;4242:9;4237:3;4233:19;4229:31;4226:2;;;4273:1;4270;4263:12;4226:2;4291:21;4306:5;4291:21;;;4282:30;-1:-1;4368:1;4399:65;4460:3;4440:9;4399:65;;;4375:90;;-1:-1;4531:2;4564:49;4609:3;4585:22;;;4564:49;;;4557:4;4550:5;4546:16;4539:75;4486:139;4677:2;4710:75;4781:3;4772:6;4761:9;4757:22;4710:75;;;4703:4;4696:5;4692:16;4685:101;4635:162;4858:3;4892:49;4937:3;4928:6;4917:9;4913:22;4892:49;;;4885:4;4878:5;4874:16;4867:75;4807:146;5016:3;5050:49;5095:3;5086:6;5075:9;5071:22;5050:49;;;5043:4;5036:5;5032:16;5025:75;4963:148;5169:3;5203:49;5248:3;5239:6;5228:9;5224:22;5203:49;;;5196:4;5189:5;5185:16;5178:75;5121:143;5324:3;5358:49;5403:3;5394:6;5383:9;5379:22;5358:49;;;5351:4;5344:5;5340:16;5333:75;5274:145;5497:3;5486:9;5482:19;5469:33;5522:18;5514:6;5511:30;5508:2;;;5554:1;5551;5544:12;5508:2;5589:54;5639:3;5630:6;5619:9;5615:22;5589:54;;;5582:4;5575:5;5571:16;5564:80;5429:226;4220:1445;;;;;5703:803;;5818:4;5806:9;5801:3;5797:19;5793:30;5790:2;;;5836:1;5833;5826:12;5790:2;5854:20;5869:4;5854:20;;;5845:29;-1:-1;5924:1;5955:46;5997:3;5977:9;5955:46;;;5931:71;;-1:-1;6071:2;6104:72;6172:3;6148:22;;;6104:72;;;6097:4;6090:5;6086:16;6079:98;6023:165;6237:2;6270:69;6335:3;6326:6;6315:9;6311:22;6270:69;;;6263:4;6256:5;6252:16;6245:95;6198:153;6402:2;6435:49;6480:3;6471:6;6460:9;6456:22;6435:49;;;6428:4;6421:5;6417:16;6410:75;6361:135;5784:722;;;;;6539:321;;6651:4;6639:9;6634:3;6630:19;6626:30;6623:2;;;6669:1;6666;6659:12;6623:2;6687:20;6702:4;6687:20;;;6678:29;-1:-1;6758:1;6789:49;6834:3;6814:9;6789:49;;;6765:74;;-1:-1;6776:5;6617:243;-1:-1;;6617:243;6895:616;;7008:4;6996:9;6991:3;6987:19;6983:30;6980:2;;;7026:1;7023;7016:12;6980:2;7044:20;7059:4;7044:20;;;7035:29;-1:-1;7116:1;7147:48;7191:3;7171:9;7147:48;;;7123:73;;-1:-1;7259:2;7292:48;7336:3;7312:22;;;7292:48;;;7285:4;7278:5;7274:16;7267:74;7217:135;7408:2;7441:48;7485:3;7476:6;7465:9;7461:22;7441:48;;;7434:4;7427:5;7423:16;7416:74;7362:139;6974:537;;;;;7544:463;;7652:4;7640:9;7635:3;7631:19;7627:30;7624:2;;;7670:1;7667;7660:12;7624:2;7688:20;7703:4;7688:20;;;7679:29;-1:-1;7759:1;7790:49;7835:3;7815:9;7790:49;;;7766:74;;-1:-1;7903:2;7936:49;7981:3;7957:22;;;7936:49;;;7929:4;7922:5;7918:16;7911:75;7861:136;7618:389;;;;;8550:471;;8665:4;8653:9;8648:3;8644:19;8640:30;8637:2;;;8683:1;8680;8673:12;8637:2;8701:20;8716:4;8701:20;;;8692:29;-1:-1;8775:1;8806:49;8851:3;8831:9;8806:49;;;8782:74;;-1:-1;8920:2;8953:46;8995:3;8971:22;;;8953:46;;9051:461;;9162:4;9150:9;9145:3;9141:19;9137:30;9134:2;;;9180:1;9177;9170:12;9134:2;9198:20;9213:4;9198:20;;;9189:29;-1:-1;9268:1;9299:46;9341:3;9321:9;9299:46;;;9275:71;;-1:-1;9408:2;9441:49;9486:3;9462:22;;;9441:49;;9547:344;;9671:4;9659:9;9654:3;9650:19;9646:30;9643:2;;;9689:1;9686;9679:12;9643:2;9707:20;9722:4;9707:20;;;9698:29;-1:-1;9778:1;9809:60;9865:3;9845:9;9809:60;;10632:118;;10699:46;10737:6;10724:20;10699:46;;10757:118;;10824:46;10862:6;10849:20;10824:46;;10882:122;;10960:39;10991:6;10985:13;10960:39;;11011:116;;11077:45;11114:6;11101:20;11077:45;;11134:116;;11200:45;11237:6;11224:20;11200:45;;11257:241;;11361:2;11349:9;11340:7;11336:23;11332:32;11329:2;;;11377:1;11374;11367:12;11329:2;11412:1;11429:53;11474:7;11454:9;11429:53;;11505:366;;;11626:2;11614:9;11605:7;11601:23;11597:32;11594:2;;;11642:1;11639;11632:12;11594:2;11677:1;11694:53;11739:7;11719:9;11694:53;;;11684:63;;11656:97;11784:2;11802:53;11847:7;11838:6;11827:9;11823:22;11802:53;;;11792:63;;11763:98;11588:283;;;;;;11878:360;;;11996:2;11984:9;11975:7;11971:23;11967:32;11964:2;;;12012:1;12009;12002:12;11964:2;12047:1;12064:53;12109:7;12089:9;12064:53;;;12054:63;;12026:97;12154:2;12172:50;12214:7;12205:6;12194:9;12190:22;12172:50;;12245:929;;;;;;12510:3;12498:9;12489:7;12485:23;12481:33;12478:2;;;12527:1;12524;12517:12;12478:2;12562:1;12579:53;12624:7;12604:9;12579:53;;;12569:63;;12541:97;12669:2;12687:75;12754:7;12745:6;12734:9;12730:22;12687:75;;;12677:85;;12648:120;12799:2;12817:78;12887:7;12878:6;12867:9;12863:22;12817:78;;;12807:88;;12778:123;12932:2;12950:76;13018:7;13009:6;12998:9;12994:22;12950:76;;;12940:86;;12911:121;13063:3;13082:76;13150:7;13141:6;13130:9;13126:22;13082:76;;;13072:86;;13042:122;12472:702;;;;;;;;;13181:726;;;13396:2;13384:9;13375:7;13371:23;13367:32;13364:2;;;13412:1;13409;13402:12;13364:2;13447:31;;13498:18;13487:30;;13484:2;;;13530:1;13527;13520:12;13484:2;13550:97;13639:7;13630:6;13619:9;13615:22;13550:97;;;13540:107;;13426:227;13712:2;13701:9;13697:18;13684:32;13736:18;13728:6;13725:30;13722:2;;;13768:1;13765;13758:12;13722:2;13788:103;13883:7;13874:6;13863:9;13859:22;13788:103;;13914:429;;14069:2;14057:9;14048:7;14044:23;14040:32;14037:2;;;14085:1;14082;14075:12;14037:2;14120:31;;14171:18;14160:30;;14157:2;;;14203:1;14200;14193:12;14157:2;14223:104;14319:7;14310:6;14299:9;14295:22;14223:104;;14350:287;;14477:2;14465:9;14456:7;14452:23;14448:32;14445:2;;;14493:1;14490;14483:12;14445:2;14528:1;14545:76;14613:7;14593:9;14545:76;;14644:287;;14771:2;14759:9;14750:7;14746:23;14742:32;14739:2;;;14787:1;14784;14777:12;14739:2;14822:1;14839:76;14907:7;14887:9;14839:76;;14938:436;;;15094:2;15082:9;15073:7;15069:23;15065:32;15062:2;;;15110:1;15107;15100:12;15062:2;15145:1;15162:76;15230:7;15210:9;15162:76;;;15152:86;;15124:120;15275:2;15293:65;15350:7;15341:6;15330:9;15326:22;15293:65;;15381:412;;;15525:2;15513:9;15504:7;15500:23;15496:32;15493:2;;;15541:1;15538;15531:12;15493:2;15576:1;15593:76;15661:7;15641:9;15593:76;;;15583:86;;15555:120;15706:2;15724:53;15769:7;15760:6;15749:9;15745:22;15724:53;;15800:582;;;;15983:3;15971:9;15962:7;15958:23;15954:33;15951:2;;;16000:1;15997;15990:12;15951:2;16035:1;16052:76;16120:7;16100:9;16052:76;;;16042:86;;16014:120;16165:2;16183:53;16228:7;16219:6;16208:9;16204:22;16183:53;;;16173:63;;16144:98;16273:2;16291:75;16358:7;16349:6;16338:9;16334:22;16291:75;;;16281:85;;16252:120;15945:437;;;;;;16389:311;;16528:2;16516:9;16507:7;16503:23;16499:32;16496:2;;;16544:1;16541;16534:12;16496:2;16579:1;16596:88;16676:7;16656:9;16596:88;;17319:241;;17423:2;17411:9;17402:7;17398:23;17394:32;17391:2;;;17439:1;17436;17429:12;17391:2;17474:1;17491:53;17536:7;17516:9;17491:53;;17567:263;;17682:2;17670:9;17661:7;17657:23;17653:32;17650:2;;;17698:1;17695;17688:12;17650:2;17733:1;17750:64;17806:7;17786:9;17750:64;;17837:366;;;17958:2;17946:9;17937:7;17933:23;17929:32;17926:2;;;17974:1;17971;17964:12;17926:2;18009:1;18026:53;18071:7;18051:9;18026:53;;18210:360;;;18328:2;18316:9;18307:7;18303:23;18299:32;18296:2;;;18344:1;18341;18334:12;18296:2;18379:1;18396:53;18441:7;18421:9;18396:53;;18577:416;;;18723:2;18711:9;18702:7;18698:23;18694:32;18691:2;;;18739:1;18736;18729:12;18691:2;18774:1;18791:53;18836:7;18816:9;18791:53;;;18781:63;;18753:97;18881:2;18899:78;18969:7;18960:6;18949:9;18945:22;18899:78;;19417:412;;;19561:2;19549:9;19540:7;19536:23;19532:32;19529:2;;;19577:1;19574;19567:12;19529:2;19612:1;19629:53;19674:7;19654:9;19629:53;;;19619:63;;19591:97;19719:2;19737:76;19805:7;19796:6;19785:9;19781:22;19737:76;;19836:415;;;19981:3;19969:9;19960:7;19956:23;19952:33;19949:2;;;19998:1;19995;19988:12;19949:2;20033:1;20050:53;20095:7;20075:9;20050:53;;;20040:63;;20012:97;20140:2;20158:77;20227:7;20218:6;20207:9;20203:22;20158:77;;20258:366;;;20379:2;20367:9;20358:7;20354:23;20350:32;20347:2;;;20395:1;20392;20385:12;20347:2;20430:1;20447:53;20492:7;20472:9;20447:53;;;20437:63;;20409:97;20537:2;20555:53;20600:7;20591:6;20580:9;20576:22;20555:53;;20632:173;;20719:46;20761:3;20753:6;20719:46;;;-1:-1;;20794:4;20785:14;;20712:93;20814:273;;20973:108;21077:3;21069:6;20973:108;;21096:269;;21229:96;21321:3;21313:6;21229:96;;;-1:-1;;21354:4;21345:14;;21222:143;21374:249;;21497:86;21579:3;21571:6;21497:86;;21632:249;;21755:86;21837:3;21829:6;21755:86;;21889:110;21962:31;21987:5;21962:31;;;21957:3;21950:44;21944:55;;;22424:621;;22569:54;22617:5;22569:54;;;22636:86;22715:6;22710:3;22636:86;;;22629:93;;22742:56;22792:5;22742:56;;;22819:1;22804:219;22829:6;22826:1;22823:13;22804:219;;;22876:63;22935:3;22926:6;22920:13;22876:63;;;22869:70;;22956:60;23009:6;22956:60;;;22946:70;-1:-1;22851:1;22844:9;22804:219;;;-1:-1;23036:3;;22548:497;-1:-1;;;;22548:497;23120:1003;;23323:79;23396:5;23323:79;;;23415:119;23527:6;23522:3;23415:119;;;23408:126;;23557:3;23599:4;23591:6;23587:17;23582:3;23578:27;23625:81;23700:5;23625:81;;;23727:1;23712:372;23737:6;23734:1;23731:13;23712:372;;;23799:9;23793:4;23789:20;23784:3;23777:33;23825:122;23942:4;23933:6;23927:13;23825:122;;;23817:130;;23964:85;24042:6;23964:85;;;24072:4;24063:14;;;;;23954:95;-1:-1;23759:1;23752:9;23712:372;;;-1:-1;24097:4;;23302:821;-1:-1;;;;;;23302:821;24186:797;;24377:73;24444:5;24377:73;;;24463:113;24569:6;24564:3;24463:113;;;24456:120;;24596:75;24665:5;24596:75;;;24692:1;24677:284;24702:6;24699:1;24696:13;24677:284;;;24749:109;24854:3;24845:6;24839:13;24749:109;;;24742:116;;24875:79;24947:6;24875:79;;;24865:89;-1:-1;24724:1;24717:9;24677:284;;25040:765;;25221:72;25287:5;25221:72;;;25306:104;25403:6;25398:3;25306:104;;;25299:111;;25430:74;25498:5;25430:74;;;25525:1;25510:273;25535:6;25532:1;25529:13;25510:273;;;25582:99;25677:3;25668:6;25662:13;25582:99;;;25575:106;;25698:78;25769:6;25698:78;;;25688:88;-1:-1;25557:1;25550:9;25510:273;;25862:765;;26043:72;26109:5;26043:72;;;26128:104;26225:6;26220:3;26128:104;;;26121:111;;26252:74;26320:5;26252:74;;;26347:1;26332:273;26357:6;26354:1;26351:13;26332:273;;;26404:99;26499:3;26490:6;26484:13;26404:99;;;26397:106;;26520:78;26591:6;26520:78;;;26510:88;-1:-1;26379:1;26372:9;26332:273;;26635:101;26702:28;26724:5;26702:28;;27103:155;27202:50;27221:30;27245:5;27221:30;;;27202:50;;27265:155;27364:50;27383:30;27407:5;27383:30;;27427:159;27528:52;27548:31;27573:5;27548:31;;27593:356;;27721:38;27753:5;27721:38;;;27771:88;27852:6;27847:3;27771:88;;;27764:95;;27864:52;27909:6;27904:3;27897:4;27890:5;27886:16;27864:52;;;27928:16;;;;;27701:248;-1:-1;;27701:248;27956:331;;28060:34;28088:5;28060:34;;;28106:68;28167:6;28162:3;28106:68;;;28099:75;;28179:52;28224:6;28219:3;28212:4;28205:5;28201:16;28179:52;;;28252:29;28274:6;28252:29;;;28243:39;;;;28040:247;-1:-1;;;28040:247;28294:166;28392:62;28448:5;28392:62;;29370:152;29465:51;29510:5;29465:51;;29529:166;29631:58;29683:5;29631:58;;29869:146;29962:47;30003:5;29962:47;;30437:1666;30662:22;;30437:1666;;30590:5;30581:15;;;30690:83;30585:3;30662:22;30690:83;;;30611:168;30856:4;30849:5;30845:16;30839:23;30868:70;30932:4;30927:3;30923:14;30910:11;30868:70;;;30789:155;31018:4;31011:5;31007:16;31001:23;31030:126;31150:4;31145:3;31141:14;31128:11;31030:126;;;30954:208;31245:4;31238:5;31234:16;31228:23;31257:70;31321:4;31316:3;31312:14;31299:11;31257:70;;;31172:161;31418:4;31411:5;31407:16;31401:23;31430:70;31494:4;31489:3;31485:14;31472:11;31430:70;;;31343:163;31586:4;31579:5;31575:16;31569:23;31598:71;31662:5;31657:3;31653:15;31640:11;31598:71;;;31516:159;31757:4;31750:5;31746:16;31740:23;31769:71;31833:5;31828:3;31824:15;31811:11;31769:71;;;31685:161;31918:4;31911:5;31907:16;31901:23;31971:3;31965:4;31961:14;31953:5;31948:3;31944:15;31937:39;31991:74;32060:4;32047:11;31991:74;;32169:851;32381:22;;32316:4;32307:14;;;32409:63;32311:3;32381:22;32409:63;;;32336:142;32558:4;32551:5;32547:16;32541:23;32570:91;32655:4;32650:3;32646:14;32633:11;32570:91;;;32488:179;32738:4;32731:5;32727:16;32721:23;32750:88;32832:4;32827:3;32823:14;32810:11;32750:88;;;32677:167;32917:4;32910:5;32906:16;32900:23;32929:70;32993:4;32988:3;32984:14;32971:11;32929:70;;33076:315;33281:22;;33215:4;33206:14;;;33309:61;33210:3;33281:22;33309:61;;34195:624;34403:22;;34336:4;34327:14;;;34431:59;34331:3;34403:22;34431:59;;;34356:140;34570:4;34563:5;34559:16;34553:23;34582:60;34636:4;34631:3;34627:14;34614:11;34582:60;;;34506:142;34726:4;34719:5;34715:16;34709:23;34738:60;34792:4;34787:3;34783:14;34770:11;34738:60;;35545:479;35744:22;;35678:4;35669:14;;;35772:69;35673:3;35744:22;35772:69;;;35698:149;35921:4;35914:5;35910:16;35904:23;35933:70;35997:4;35992:3;35988:14;35975:11;35933:70;;36084:1651;36294:22;;36227:5;36218:15;;;36322:61;36222:3;36294:22;36322:61;;;36248:141;36465:4;36458:5;36454:16;36448:23;36477:112;36583:4;36578:3;36574:14;36561:11;36477:112;;;36399:196;36668:4;36661:5;36657:16;36651:23;36680:106;36780:4;36775:3;36771:14;36758:11;36680:106;;;36605:187;36871:4;36864:5;36860:16;36854:23;36883:84;36961:4;36956:3;36952:14;36939:11;36883:84;;;36802:171;37055:4;37048:5;37044:16;37038:23;37067:87;37148:4;37143:3;37139:14;37126:11;37067:87;;;36983:177;37241:4;37234:5;37230:16;37224:23;37253:105;37351:5;37346:3;37342:15;37329:11;37253:105;;;37170:194;37445:4;37438:5;37434:16;37428:23;37457:105;37555:5;37550:3;37546:15;37533:11;37457:105;;;37374:194;37645:4;37638:5;37634:16;37628:23;37657:57;37707:5;37702:3;37698:15;37685:11;37657:57;;37785:459;37987:22;;37922:4;37913:14;;;38015:55;37917:3;37987:22;38015:55;;;37942:134;38149:4;38142:5;38138:16;38132:23;38161:62;38217:4;38212:3;38208:14;38195:11;38161:62;;39557:1152;39783:22;;39708:4;39699:14;;;39811:59;39703:3;39783:22;39811:59;;;39728:148;39964:4;39957:5;39953:16;39947:23;39976:60;40030:4;40025:3;40021:14;40008:11;39976:60;;;39886:156;40125:4;40118:5;40114:16;40108:23;40137:60;40191:4;40186:3;40182:14;40169:11;40137:60;;;40052:151;40287:4;40280:5;40276:16;40270:23;40299:60;40353:4;40348:3;40344:14;40331:11;40299:60;;;40213:152;40449:4;40442:5;40438:16;40432:23;40461:60;40515:4;40510:3;40506:14;40493:11;40461:60;;;40375:152;40614:4;40607:5;40603:16;40597:23;40626:62;40682:4;40677:3;40673:14;40660:11;40626:62;;40777:992;41000:22;;40928:4;40919:14;;;41028:103;40923:3;41000:22;41028:103;;;40948:189;41222:4;41215:5;41211:16;41205:23;41234:104;41332:4;41327:3;41323:14;41310:11;41234:104;;;41147:197;41424:4;41417:5;41413:16;41407:23;41436:104;41534:4;41529:3;41525:14;41512:11;41436:104;;;41354:192;41630:4;41623:5;41619:16;41613:23;41642:106;41742:4;41737:3;41733:14;41720:11;41642:106;;41776:123;41876:18;;41870:29;41959:478;42173:22;;42106:4;42097:14;;;42201:61;42101:3;42173:22;42201:61;;44144:459;44346:22;;44281:4;44272:14;;;44374:55;44276:3;44346:22;44374:55;;45105:110;45178:31;45203:5;45178:31;;45222:110;45295:31;45320:5;45295:31;;45726:107;45797:30;45821:5;45797:30;;45840:107;45911:30;45935:5;45911:30;;45954:107;46025:30;46049:5;46025:30;;46068:244;;46187:75;46258:3;46249:6;46187:75;;;-1:-1;46284:2;46275:12;;46175:137;-1:-1;46175:137;46319:553;;46535:93;46624:3;46615:6;46535:93;;;46528:100;;46639:73;46708:3;46699:6;46639:73;;;46734:1;46729:3;46725:11;46718:18;;46754:93;46843:3;46834:6;46754:93;;46879:978;;47193:93;47282:3;47273:6;47193:93;;;47186:100;;47297:73;47366:3;47357:6;47297:73;;;47392:1;47387:3;47383:11;47376:18;;47412:93;47501:3;47492:6;47412:93;;;47405:100;;47516:73;47585:3;47576:6;47516:73;;;47611:1;47606:3;47602:11;47595:18;;47631:93;47720:3;47711:6;47631:93;;;47624:100;;47735:73;47804:3;47795:6;47735:73;;;-1:-1;47830:1;47821:11;;47174:683;-1:-1;;;;;;47174:683;47864:213;47982:2;47967:18;;47996:71;47971:9;48040:6;47996:71;;48084:312;48224:2;48209:18;;48238:71;48213:9;48282:6;48238:71;;;48320:66;48382:2;48371:9;48367:18;48358:6;48320:66;;48403:435;48577:2;48562:18;;48591:71;48566:9;48635:6;48591:71;;;48673:72;48741:2;48730:9;48726:18;48717:6;48673:72;;;48756;48824:2;48813:9;48809:18;48800:6;48756:72;;48845:1023;49241:2;49255:47;;;49226:18;;49316:108;49226:18;49410:6;49316:108;;;49308:116;;49472:9;49466:4;49462:20;49457:2;49446:9;49442:18;49435:48;49497:144;49636:4;49627:6;49497:144;;;49489:152;;49689:9;49683:4;49679:20;49674:2;49663:9;49659:18;49652:48;49714:144;49853:4;49844:6;49714:144;;49875:201;49987:2;49972:18;;50001:65;49976:9;50039:6;50001:65;;50083:263;50226:2;50211:18;;50240:96;50215:9;50309:6;50240:96;;50617:233;50745:2;50730:18;;50759:81;50734:9;50813:6;50759:81;;50857:301;50995:2;51009:47;;;50980:18;;51070:78;50980:18;51134:6;51070:78;;51165:305;51329:2;51314:18;;51343:117;51318:9;51433:6;51343:117;;51477:309;51643:2;51628:18;;51657:119;51632:9;51749:6;51657:119;;51793:314;51961:3;51946:19;;51976:121;51950:9;52070:6;51976:121;;52114:934;52508:3;52493:19;;52523:121;52497:9;52617:6;52523:121;;;52655;52771:3;52760:9;52756:19;52747:6;52655:121;;;52787;52903:3;52892:9;52888:19;52879:6;52787:121;;;52919:119;53033:3;53022:9;53018:19;53009:6;52919:119;;53055:301;53217:2;53202:18;;53231:115;53206:9;53319:6;53231:115;;53991:330;54167:3;54152:19;;54182:129;54156:9;54284:6;54182:129;;54328:330;54504:3;54489:19;;54519:129;54493:9;54621:6;54519:129;;54665:509;54868:2;54853:18;;54882:100;54857:9;54955:6;54882:100;;;54993:80;55069:2;55058:9;55054:18;55045:6;54993:80;;;55084;55160:2;55149:9;55145:18;55136:6;55084:80;;55181:497;55378:2;55363:18;;55392:100;55367:9;55465:6;55392:100;;;55503:80;55579:2;55568:9;55564:18;55555:6;55503:80;;;55594:74;55664:2;55653:9;55649:18;55640:6;55594:74;;55685:1147;56111:3;56096:19;;56126:100;56100:9;56199:6;56126:100;;;56237:80;56313:2;56302:9;56298:18;56289:6;56237:80;;;56328:102;56426:2;56415:9;56411:18;56402:6;56328:102;;;56441:105;56542:2;56531:9;56527:18;56518:6;56441:105;;;56557:127;56679:3;56668:9;56664:19;56655:6;56557:127;;;56695;56817:3;56806:9;56802:19;56793:6;56695:127;;;56082:750;;;;;;;;;;56839:981;57230:2;57215:18;;57244:100;57219:9;57317:6;57244:100;;;57392:9;57386:4;57382:20;57377:2;57366:9;57362:18;57355:48;57417:154;57566:4;57557:6;57417:154;;;57409:162;;57619:9;57613:4;57609:20;57604:2;57593:9;57589:18;57582:48;57644:166;57805:4;57796:6;57644:166;;57827:482;58048:2;58033:18;;58062:100;58037:9;58135:6;58062:100;;;58173:126;58295:2;58284:9;58280:18;58271:6;58173:126;;58809:509;59012:2;58997:18;;59026:100;59001:9;59099:6;59026:100;;;59137:80;59213:2;59202:9;59198:18;59189:6;59137:80;;59325:497;59522:2;59507:18;;59536:100;59511:9;59609:6;59536:100;;;59647:80;59723:2;59712:9;59708:18;59699:6;59647:80;;59829:559;60057:2;60042:18;;60071:100;60046:9;60144:6;60071:100;;;60182:80;60258:2;60247:9;60243:18;60234:6;60182:80;;;60273:105;60374:2;60363:9;60359:18;60350:6;60273:105;;60955:601;61204:2;61189:18;;61218:100;61193:9;61291:6;61218:100;;;61329:80;61405:2;61394:9;61390:18;61381:6;61329:80;;;61420:126;61542:2;61531:9;61527:18;61518:6;61420:126;;61563:321;61735:2;61720:18;;61749:125;61724:9;61847:6;61749:125;;62207:516;62449:2;62434:18;;62463:119;62438:9;62555:6;62463:119;;62730:301;62892:2;62877:18;;62906:115;62881:9;62994:6;62906:115;;63038:213;63156:2;63141:18;;63170:71;63145:9;63214:6;63170:71;;63258:256;63320:2;63314:9;63346:17;;;63421:18;63406:34;;63442:22;;;63403:62;63400:2;;;63478:1;63475;63468:12;63400:2;63494;63487:22;63298:216;;-1:-1;63298:216;63521:283;;63705:18;63697:6;63694:30;63691:2;;;63737:1;63734;63727:12;63691:2;-1:-1;63766:4;63754:17;;;63784:15;;63628:176;64386:254;;64525:18;64517:6;64514:30;64511:2;;;64557:1;64554;64547:12;64511:2;-1:-1;64630:4;64601;64578:17;;;;64597:9;64574:33;64620:15;;64448:192;64649:121;64758:4;64746:17;;64727:43;65387:107;65477:12;;65461:33;67064:178;67182:19;;;67231:4;67222:14;;67175:67;68588:105;;68657:31;68682:5;68657:31;;68700:92;68773:13;68766:21;;68749:43;68799:151;68878:66;68867:78;;68850:100;68957:151;69036:66;69025:78;;69008:100;69115:79;69184:5;69167:27;69201:133;;69295:1;69288:5;69285:12;69275:2;;69301:9;69275:2;-1:-1;69324:5;69269:65;69341:140;;69442:1;69435:5;69432:12;69422:2;;69448:9;69632:129;;69722:1;69715:5;69712:12;69702:2;;69728:9;69768:120;69848:34;69837:46;;69820:68;69895:128;69975:42;69964:54;;69947:76;70116:95;70195:10;70184:22;;70167:44;70218:103;70297:18;70286:30;;70269:52;70328:111;70407:26;70396:38;;70379:60;70657:130;;70751:31;70776:5;70751:31;;70928:136;;71022:1;71015:5;71012:12;71002:2;;71038:1;71035;71028:12;71071:143;;71172:1;71165:5;71162:12;71152:2;;71188:1;71185;71178:12;71368:132;;71458:1;71451:5;71448:12;71438:2;;71474:1;71471;71464:12;72716:145;;72809:47;72850:5;72809:47;;72868:159;;72968:54;73016:5;72968:54;;73194:137;;73283:43;73320:5;73283:43;;73339:145;73420:6;73415:3;73410;73397:30;-1:-1;73476:1;73458:16;;73451:27;73390:94;73493:268;73558:1;73565:101;73579:6;73576:1;73573:13;73565:101;;;73646:11;;;73640:18;73627:11;;;73620:39;73601:2;73594:10;73565:101;;;73681:6;73678:1;73675:13;73672:2;;;-1:-1;;73746:1;73728:16;;73721:27;73542:219;74010:97;74098:2;74078:14;74094:7;74074:28;;74058:49",
  "source": "/*\n\n    Copyright 2019 dYdX Trading Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n*/\n\npragma solidity 0.5.7;\npragma experimental ABIEncoderV2;\n\nimport { SafeMath } from \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\nimport { SoloMargin } from \"../protocol/SoloMargin.sol\";\nimport { Account } from \"../protocol/lib/Account.sol\";\nimport { Interest } from \"../protocol/lib/Interest.sol\";\nimport { Math } from \"../protocol/lib/Math.sol\";\nimport { Storage } from \"../protocol/lib/Storage.sol\";\nimport { Types } from \"../protocol/lib/Types.sol\";\n\n\ncontract TestSoloMargin is\n    SoloMargin\n{\n    using Math for uint256;\n    using SafeMath for uint256;\n\n    // ============ Constructor ============\n\n    constructor (\n        Storage.RiskParams memory rp,\n        Storage.RiskLimits memory rl\n    )\n        public\n        SoloMargin(rp, rl)\n    {}\n\n    // ============ Testing Functions ============\n\n    function setAccountBalance(\n        Account.Info memory account,\n        uint256 market,\n        Types.Par memory newPar\n    )\n        public\n    {\n        Types.Par memory oldPar = g_state.accounts[account.owner][account.number].balances[market];\n        Types.TotalPar memory totalPar = g_state.markets[market].totalPar;\n\n        // roll-back oldPar\n        if (oldPar.sign) {\n            totalPar.supply = uint256(totalPar.supply).sub(oldPar.value).to128();\n        } else {\n            totalPar.borrow = uint256(totalPar.borrow).sub(oldPar.value).to128();\n        }\n\n        // roll-forward newPar\n        if (newPar.sign) {\n            totalPar.supply = uint256(totalPar.supply).add(newPar.value).to128();\n        } else {\n            totalPar.borrow = uint256(totalPar.borrow).add(newPar.value).to128();\n        }\n\n        g_state.markets[market].totalPar = totalPar;\n        g_state.accounts[account.owner][account.number].balances[market] = newPar;\n    }\n\n    function setAccountStatus(\n        Account.Info memory account,\n        Account.Status status\n    )\n        public\n    {\n        g_state.accounts[account.owner][account.number].status = status;\n    }\n\n    function setMarketIndex(\n        uint256 market,\n        Interest.Index memory index\n    )\n        public\n    {\n        Interest.Index memory oldIndex = g_state.markets[market].index;\n\n        if (index.borrow == 0) {\n            index.borrow = oldIndex.borrow;\n        }\n        if (index.supply == 0) {\n            index.supply = oldIndex.supply;\n        }\n\n        g_state.markets[market].index = index;\n    }\n}\n",
  "sourcePath": "/home/terra/opensource/solo/contracts/testing/TestSoloMargin.sol",
  "ast": {
    "absolutePath": "project:/contracts/testing/TestSoloMargin.sol",
    "exportedSymbols": {
      "TestSoloMargin": [
        23634
      ]
    },
    "id": 23635,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 23394,
        "literals": [
          "solidity",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "603:22:71"
      },
      {
        "id": 23395,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "626:33:71"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 23397,
        "nodeType": "ImportDirective",
        "scope": 23635,
        "sourceUnit": 374,
        "src": "661:77:71",
        "symbolAliases": [
          {
            "foreign": 23396,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/protocol/SoloMargin.sol",
        "file": "../protocol/SoloMargin.sol",
        "id": 23399,
        "nodeType": "ImportDirective",
        "scope": 23635,
        "sourceUnit": 13271,
        "src": "739:56:71",
        "symbolAliases": [
          {
            "foreign": 23398,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/protocol/lib/Account.sol",
        "file": "../protocol/lib/Account.sol",
        "id": 23401,
        "nodeType": "ImportDirective",
        "scope": 23635,
        "sourceUnit": 16434,
        "src": "796:54:71",
        "symbolAliases": [
          {
            "foreign": 23400,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/protocol/lib/Interest.sol",
        "file": "../protocol/lib/Interest.sol",
        "id": 23403,
        "nodeType": "ImportDirective",
        "scope": 23635,
        "sourceUnit": 18455,
        "src": "851:56:71",
        "symbolAliases": [
          {
            "foreign": 23402,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/protocol/lib/Math.sol",
        "file": "../protocol/lib/Math.sol",
        "id": 23405,
        "nodeType": "ImportDirective",
        "scope": 23635,
        "sourceUnit": 18642,
        "src": "908:48:71",
        "symbolAliases": [
          {
            "foreign": 23404,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/protocol/lib/Storage.sol",
        "file": "../protocol/lib/Storage.sol",
        "id": 23407,
        "nodeType": "ImportDirective",
        "scope": 23635,
        "sourceUnit": 20758,
        "src": "957:54:71",
        "symbolAliases": [
          {
            "foreign": 23406,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/protocol/lib/Types.sol",
        "file": "../protocol/lib/Types.sol",
        "id": 23409,
        "nodeType": "ImportDirective",
        "scope": 23635,
        "sourceUnit": 21431,
        "src": "1012:50:71",
        "symbolAliases": [
          {
            "foreign": 23408,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23410,
              "name": "SoloMargin",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13270,
              "src": "1096:10:71",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SoloMargin_$13270",
                "typeString": "contract SoloMargin"
              }
            },
            "id": 23411,
            "nodeType": "InheritanceSpecifier",
            "src": "1096:10:71"
          }
        ],
        "contractDependencies": [
          482,
          513,
          12417,
          13113,
          13151,
          13224,
          13270,
          13278
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23634,
        "linearizedBaseContracts": [
          23634,
          13270,
          13224,
          13151,
          13113,
          12417,
          513,
          482,
          13278
        ],
        "name": "TestSoloMargin",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 23414,
            "libraryName": {
              "contractScope": null,
              "id": 23412,
              "name": "Math",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18641,
              "src": "1119:4:71",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Math_$18641",
                "typeString": "library Math"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1113:23:71",
            "typeName": {
              "id": 23413,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1128:7:71",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 23417,
            "libraryName": {
              "contractScope": null,
              "id": 23415,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 373,
              "src": "1147:8:71",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$373",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1141:27:71",
            "typeName": {
              "id": 23416,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1160:7:71",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 23428,
              "nodeType": "Block",
              "src": "1361:2:71",
              "statements": []
            },
            "documentation": null,
            "id": 23429,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 23424,
                    "name": "rp",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23419,
                    "src": "1349:2:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RiskParams_$19421_memory_ptr",
                      "typeString": "struct Storage.RiskParams memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 23425,
                    "name": "rl",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23421,
                    "src": "1353:2:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RiskLimits_$19434_memory_ptr",
                      "typeString": "struct Storage.RiskLimits memory"
                    }
                  }
                ],
                "id": 23426,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 23423,
                  "name": "SoloMargin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13270,
                  "src": "1338:10:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_SoloMargin_$13270_$",
                    "typeString": "type(contract SoloMargin)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1338:18:71"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23419,
                  "name": "rp",
                  "nodeType": "VariableDeclaration",
                  "scope": 23429,
                  "src": "1242:28:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RiskParams_$19421_memory_ptr",
                    "typeString": "struct Storage.RiskParams"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23418,
                    "name": "Storage.RiskParams",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 19421,
                    "src": "1242:18:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RiskParams_$19421_storage_ptr",
                      "typeString": "struct Storage.RiskParams"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23421,
                  "name": "rl",
                  "nodeType": "VariableDeclaration",
                  "scope": 23429,
                  "src": "1280:28:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RiskLimits_$19434_memory_ptr",
                    "typeString": "struct Storage.RiskLimits"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23420,
                    "name": "Storage.RiskLimits",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 19434,
                    "src": "1280:18:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RiskLimits_$19434_storage_ptr",
                      "typeString": "struct Storage.RiskLimits"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1232:82:71"
            },
            "returnParameters": {
              "id": 23427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1361:0:71"
            },
            "scope": 23634,
            "src": "1220:143:71",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23558,
              "nodeType": "Block",
              "src": "1567:816:71",
              "statements": [
                {
                  "assignments": [
                    23441
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23441,
                      "name": "oldPar",
                      "nodeType": "VariableDeclaration",
                      "scope": 23558,
                      "src": "1577:23:71",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Par_$20996_memory_ptr",
                        "typeString": "struct Types.Par"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 23440,
                        "name": "Types.Par",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 20996,
                        "src": "1577:9:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Par_$20996_storage_ptr",
                          "typeString": "struct Types.Par"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23453,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 23442,
                              "name": "g_state",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13277,
                              "src": "1603:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_State_$19461_storage",
                                "typeString": "struct Storage.State storage ref"
                              }
                            },
                            "id": 23443,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "accounts",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19446,
                            "src": "1603:16:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Storage_$16410_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct Account.Storage storage ref))"
                            }
                          },
                          "id": 23446,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 23444,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23431,
                              "src": "1620:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Info_$16403_memory_ptr",
                                "typeString": "struct Account.Info memory"
                              }
                            },
                            "id": 23445,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16400,
                            "src": "1620:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1603:31:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Storage_$16410_storage_$",
                            "typeString": "mapping(uint256 => struct Account.Storage storage ref)"
                          }
                        },
                        "id": 23449,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23447,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23431,
                            "src": "1635:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Info_$16403_memory_ptr",
                              "typeString": "struct Account.Info memory"
                            }
                          },
                          "id": 23448,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16402,
                          "src": "1635:14:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1603:47:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Storage_$16410_storage",
                          "typeString": "struct Account.Storage storage ref"
                        }
                      },
                      "id": 23450,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balances",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16407,
                      "src": "1603:56:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Par_$20996_storage_$",
                        "typeString": "mapping(uint256 => struct Types.Par storage ref)"
                      }
                    },
                    "id": 23452,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 23451,
                      "name": "market",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23433,
                      "src": "1660:6:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1603:64:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Par_$20996_storage",
                      "typeString": "struct Types.Par storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1577:90:71"
                },
                {
                  "assignments": [
                    23457
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23457,
                      "name": "totalPar",
                      "nodeType": "VariableDeclaration",
                      "scope": 23558,
                      "src": "1677:30:71",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TotalPar_$20991_memory_ptr",
                        "typeString": "struct Types.TotalPar"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 23456,
                        "name": "Types.TotalPar",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 20991,
                        "src": "1677:14:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TotalPar_$20991_storage_ptr",
                          "typeString": "struct Types.TotalPar"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23463,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 23458,
                          "name": "g_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13277,
                          "src": "1710:7:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$19461_storage",
                            "typeString": "struct Storage.State storage ref"
                          }
                        },
                        "id": 23459,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "markets",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19440,
                        "src": "1710:15:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Market_$19412_storage_$",
                          "typeString": "mapping(uint256 => struct Storage.Market storage ref)"
                        }
                      },
                      "id": 23461,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 23460,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23433,
                        "src": "1726:6:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1710:23:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$19412_storage",
                        "typeString": "struct Storage.Market storage ref"
                      }
                    },
                    "id": 23462,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "totalPar",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 19399,
                    "src": "1710:32:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TotalPar_$20991_storage",
                      "typeString": "struct Types.TotalPar storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1677:65:71"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 23464,
                      "name": "oldPar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23441,
                      "src": "1785:6:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Par_$20996_memory_ptr",
                        "typeString": "struct Types.Par memory"
                      }
                    },
                    "id": 23465,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sign",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 20993,
                    "src": "1785:11:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 23497,
                    "nodeType": "Block",
                    "src": "1897:93:71",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 23495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 23482,
                              "name": "totalPar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23457,
                              "src": "1911:8:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TotalPar_$20991_memory_ptr",
                                "typeString": "struct Types.TotalPar memory"
                              }
                            },
                            "id": 23484,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "borrow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20988,
                            "src": "1911:15:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 23490,
                                      "name": "oldPar",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 23441,
                                      "src": "1958:6:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Par_$20996_memory_ptr",
                                        "typeString": "struct Types.Par memory"
                                      }
                                    },
                                    "id": 23491,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 20995,
                                    "src": "1958:12:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 23486,
                                          "name": "totalPar",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 23457,
                                          "src": "1937:8:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TotalPar_$20991_memory_ptr",
                                            "typeString": "struct Types.TotalPar memory"
                                          }
                                        },
                                        "id": 23487,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "borrow",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 20988,
                                        "src": "1937:15:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      ],
                                      "id": 23485,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1929:7:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": "uint256"
                                    },
                                    "id": 23488,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1929:24:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 23489,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 328,
                                  "src": "1929:28:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 23492,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1929:42:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 23493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "to128",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18554,
                              "src": "1929:48:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (uint128)"
                              }
                            },
                            "id": 23494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1929:50:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "1911:68:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 23496,
                        "nodeType": "ExpressionStatement",
                        "src": "1911:68:71"
                      }
                    ]
                  },
                  "id": 23498,
                  "nodeType": "IfStatement",
                  "src": "1781:209:71",
                  "trueBody": {
                    "id": 23481,
                    "nodeType": "Block",
                    "src": "1798:93:71",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 23479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 23466,
                              "name": "totalPar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23457,
                              "src": "1812:8:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TotalPar_$20991_memory_ptr",
                                "typeString": "struct Types.TotalPar memory"
                              }
                            },
                            "id": 23468,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "supply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20990,
                            "src": "1812:15:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 23474,
                                      "name": "oldPar",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 23441,
                                      "src": "1859:6:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Par_$20996_memory_ptr",
                                        "typeString": "struct Types.Par memory"
                                      }
                                    },
                                    "id": 23475,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 20995,
                                    "src": "1859:12:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 23470,
                                          "name": "totalPar",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 23457,
                                          "src": "1838:8:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TotalPar_$20991_memory_ptr",
                                            "typeString": "struct Types.TotalPar memory"
                                          }
                                        },
                                        "id": 23471,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "supply",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 20990,
                                        "src": "1838:15:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      ],
                                      "id": 23469,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1830:7:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": "uint256"
                                    },
                                    "id": 23472,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1830:24:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 23473,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 328,
                                  "src": "1830:28:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 23476,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1830:42:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 23477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "to128",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18554,
                              "src": "1830:48:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (uint128)"
                              }
                            },
                            "id": 23478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1830:50:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "1812:68:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 23480,
                        "nodeType": "ExpressionStatement",
                        "src": "1812:68:71"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 23499,
                      "name": "newPar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23435,
                      "src": "2035:6:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Par_$20996_memory_ptr",
                        "typeString": "struct Types.Par memory"
                      }
                    },
                    "id": 23500,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sign",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 20993,
                    "src": "2035:11:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 23532,
                    "nodeType": "Block",
                    "src": "2147:93:71",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 23530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 23517,
                              "name": "totalPar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23457,
                              "src": "2161:8:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TotalPar_$20991_memory_ptr",
                                "typeString": "struct Types.TotalPar memory"
                              }
                            },
                            "id": 23519,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "borrow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20988,
                            "src": "2161:15:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 23525,
                                      "name": "newPar",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 23435,
                                      "src": "2208:6:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Par_$20996_memory_ptr",
                                        "typeString": "struct Types.Par memory"
                                      }
                                    },
                                    "id": 23526,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 20995,
                                    "src": "2208:12:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 23521,
                                          "name": "totalPar",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 23457,
                                          "src": "2187:8:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TotalPar_$20991_memory_ptr",
                                            "typeString": "struct Types.TotalPar memory"
                                          }
                                        },
                                        "id": 23522,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "borrow",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 20988,
                                        "src": "2187:15:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      ],
                                      "id": 23520,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2179:7:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": "uint256"
                                    },
                                    "id": 23523,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2179:24:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 23524,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 352,
                                  "src": "2179:28:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 23527,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2179:42:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 23528,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "to128",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18554,
                              "src": "2179:48:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (uint128)"
                              }
                            },
                            "id": 23529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2179:50:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "2161:68:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 23531,
                        "nodeType": "ExpressionStatement",
                        "src": "2161:68:71"
                      }
                    ]
                  },
                  "id": 23533,
                  "nodeType": "IfStatement",
                  "src": "2031:209:71",
                  "trueBody": {
                    "id": 23516,
                    "nodeType": "Block",
                    "src": "2048:93:71",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 23514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 23501,
                              "name": "totalPar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23457,
                              "src": "2062:8:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TotalPar_$20991_memory_ptr",
                                "typeString": "struct Types.TotalPar memory"
                              }
                            },
                            "id": 23503,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "supply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20990,
                            "src": "2062:15:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 23509,
                                      "name": "newPar",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 23435,
                                      "src": "2109:6:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Par_$20996_memory_ptr",
                                        "typeString": "struct Types.Par memory"
                                      }
                                    },
                                    "id": 23510,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 20995,
                                    "src": "2109:12:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 23505,
                                          "name": "totalPar",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 23457,
                                          "src": "2088:8:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TotalPar_$20991_memory_ptr",
                                            "typeString": "struct Types.TotalPar memory"
                                          }
                                        },
                                        "id": 23506,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "supply",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 20990,
                                        "src": "2088:15:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      ],
                                      "id": 23504,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2080:7:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": "uint256"
                                    },
                                    "id": 23507,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2080:24:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 23508,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 352,
                                  "src": "2080:28:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 23511,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2080:42:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 23512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "to128",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18554,
                              "src": "2080:48:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (uint128)"
                              }
                            },
                            "id": 23513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2080:50:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "2062:68:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 23515,
                        "nodeType": "ExpressionStatement",
                        "src": "2062:68:71"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23534,
                            "name": "g_state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13277,
                            "src": "2250:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_State_$19461_storage",
                              "typeString": "struct Storage.State storage ref"
                            }
                          },
                          "id": 23537,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "markets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19440,
                          "src": "2250:15:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Market_$19412_storage_$",
                            "typeString": "mapping(uint256 => struct Storage.Market storage ref)"
                          }
                        },
                        "id": 23538,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 23536,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23433,
                          "src": "2266:6:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2250:23:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$19412_storage",
                          "typeString": "struct Storage.Market storage ref"
                        }
                      },
                      "id": 23539,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalPar",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19399,
                      "src": "2250:32:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TotalPar_$20991_storage",
                        "typeString": "struct Types.TotalPar storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23540,
                      "name": "totalPar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23457,
                      "src": "2285:8:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TotalPar_$20991_memory_ptr",
                        "typeString": "struct Types.TotalPar memory"
                      }
                    },
                    "src": "2250:43:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TotalPar_$20991_storage",
                      "typeString": "struct Types.TotalPar storage ref"
                    }
                  },
                  "id": 23542,
                  "nodeType": "ExpressionStatement",
                  "src": "2250:43:71"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 23543,
                                "name": "g_state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13277,
                                "src": "2303:7:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_State_$19461_storage",
                                  "typeString": "struct Storage.State storage ref"
                                }
                              },
                              "id": 23549,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "accounts",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19446,
                              "src": "2303:16:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Storage_$16410_storage_$_$",
                                "typeString": "mapping(address => mapping(uint256 => struct Account.Storage storage ref))"
                              }
                            },
                            "id": 23550,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 23545,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23431,
                                "src": "2320:7:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Info_$16403_memory_ptr",
                                  "typeString": "struct Account.Info memory"
                                }
                              },
                              "id": 23546,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16400,
                              "src": "2320:13:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2303:31:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Storage_$16410_storage_$",
                              "typeString": "mapping(uint256 => struct Account.Storage storage ref)"
                            }
                          },
                          "id": 23551,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 23547,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23431,
                              "src": "2335:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Info_$16403_memory_ptr",
                                "typeString": "struct Account.Info memory"
                              }
                            },
                            "id": 23548,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16402,
                            "src": "2335:14:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2303:47:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Storage_$16410_storage",
                            "typeString": "struct Account.Storage storage ref"
                          }
                        },
                        "id": 23552,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balances",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16407,
                        "src": "2303:56:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Par_$20996_storage_$",
                          "typeString": "mapping(uint256 => struct Types.Par storage ref)"
                        }
                      },
                      "id": 23554,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 23553,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23433,
                        "src": "2360:6:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2303:64:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Par_$20996_storage",
                        "typeString": "struct Types.Par storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23555,
                      "name": "newPar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23435,
                      "src": "2370:6:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Par_$20996_memory_ptr",
                        "typeString": "struct Types.Par memory"
                      }
                    },
                    "src": "2303:73:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Par_$20996_storage",
                      "typeString": "struct Types.Par storage ref"
                    }
                  },
                  "id": 23557,
                  "nodeType": "ExpressionStatement",
                  "src": "2303:73:71"
                }
              ]
            },
            "documentation": null,
            "id": 23559,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAccountBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23431,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 23559,
                  "src": "1457:27:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Info_$16403_memory_ptr",
                    "typeString": "struct Account.Info"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23430,
                    "name": "Account.Info",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16403,
                    "src": "1457:12:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$16403_storage_ptr",
                      "typeString": "struct Account.Info"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23433,
                  "name": "market",
                  "nodeType": "VariableDeclaration",
                  "scope": 23559,
                  "src": "1494:14:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23432,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1494:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23435,
                  "name": "newPar",
                  "nodeType": "VariableDeclaration",
                  "scope": 23559,
                  "src": "1518:23:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Par_$20996_memory_ptr",
                    "typeString": "struct Types.Par"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23434,
                    "name": "Types.Par",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 20996,
                    "src": "1518:9:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Par_$20996_storage_ptr",
                      "typeString": "struct Types.Par"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1447:100:71"
            },
            "returnParameters": {
              "id": 23437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1567:0:71"
            },
            "scope": 23634,
            "src": "1421:962:71",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23579,
              "nodeType": "Block",
              "src": "2508:80:71",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 23566,
                              "name": "g_state",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13277,
                              "src": "2518:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_State_$19461_storage",
                                "typeString": "struct Storage.State storage ref"
                              }
                            },
                            "id": 23572,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "accounts",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19446,
                            "src": "2518:16:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Storage_$16410_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct Account.Storage storage ref))"
                            }
                          },
                          "id": 23573,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 23568,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23561,
                              "src": "2535:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Info_$16403_memory_ptr",
                                "typeString": "struct Account.Info memory"
                              }
                            },
                            "id": 23569,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16400,
                            "src": "2535:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2518:31:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Storage_$16410_storage_$",
                            "typeString": "mapping(uint256 => struct Account.Storage storage ref)"
                          }
                        },
                        "id": 23574,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23570,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23561,
                            "src": "2550:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Info_$16403_memory_ptr",
                              "typeString": "struct Account.Info memory"
                            }
                          },
                          "id": 23571,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16402,
                          "src": "2550:14:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2518:47:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Storage_$16410_storage",
                          "typeString": "struct Account.Storage storage ref"
                        }
                      },
                      "id": 23575,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16409,
                      "src": "2518:54:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$16398",
                        "typeString": "enum Account.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23576,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23563,
                      "src": "2575:6:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$16398",
                        "typeString": "enum Account.Status"
                      }
                    },
                    "src": "2518:63:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$16398",
                      "typeString": "enum Account.Status"
                    }
                  },
                  "id": 23578,
                  "nodeType": "ExpressionStatement",
                  "src": "2518:63:71"
                }
              ]
            },
            "documentation": null,
            "id": 23580,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAccountStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23561,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 23580,
                  "src": "2424:27:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Info_$16403_memory_ptr",
                    "typeString": "struct Account.Info"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23560,
                    "name": "Account.Info",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16403,
                    "src": "2424:12:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$16403_storage_ptr",
                      "typeString": "struct Account.Info"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23563,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "scope": 23580,
                  "src": "2461:21:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Status_$16398",
                    "typeString": "enum Account.Status"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23562,
                    "name": "Account.Status",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16398,
                    "src": "2461:14:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$16398",
                      "typeString": "enum Account.Status"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2414:74:71"
            },
            "returnParameters": {
              "id": 23565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2508:0:71"
            },
            "scope": 23634,
            "src": "2389:199:71",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23632,
              "nodeType": "Block",
              "src": "2704:302:71",
              "statements": [
                {
                  "assignments": [
                    23590
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23590,
                      "name": "oldIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 23632,
                      "src": "2714:30:71",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Index_$18175_memory_ptr",
                        "typeString": "struct Interest.Index"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 23589,
                        "name": "Interest.Index",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 18175,
                        "src": "2714:14:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Index_$18175_storage_ptr",
                          "typeString": "struct Interest.Index"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23596,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 23591,
                          "name": "g_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13277,
                          "src": "2747:7:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$19461_storage",
                            "typeString": "struct Storage.State storage ref"
                          }
                        },
                        "id": 23592,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "markets",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19440,
                        "src": "2747:15:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Market_$19412_storage_$",
                          "typeString": "mapping(uint256 => struct Storage.Market storage ref)"
                        }
                      },
                      "id": 23594,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 23593,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23582,
                        "src": "2763:6:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2747:23:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$19412_storage",
                        "typeString": "struct Storage.Market storage ref"
                      }
                    },
                    "id": 23595,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "index",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 19401,
                    "src": "2747:29:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Index_$18175_storage",
                      "typeString": "struct Interest.Index storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2714:62:71"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    },
                    "id": 23600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23597,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23584,
                        "src": "2791:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Index_$18175_memory_ptr",
                          "typeString": "struct Interest.Index memory"
                        }
                      },
                      "id": 23598,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "borrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18170,
                      "src": "2791:12:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 23599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2807:1:71",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2791:17:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 23609,
                  "nodeType": "IfStatement",
                  "src": "2787:78:71",
                  "trueBody": {
                    "id": 23608,
                    "nodeType": "Block",
                    "src": "2810:55:71",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 23606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 23601,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23584,
                              "src": "2824:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Index_$18175_memory_ptr",
                                "typeString": "struct Interest.Index memory"
                              }
                            },
                            "id": 23603,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "borrow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18170,
                            "src": "2824:12:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 23604,
                              "name": "oldIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23590,
                              "src": "2839:8:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Index_$18175_memory_ptr",
                                "typeString": "struct Interest.Index memory"
                              }
                            },
                            "id": 23605,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "borrow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18170,
                            "src": "2839:15:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "2824:30:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "id": 23607,
                        "nodeType": "ExpressionStatement",
                        "src": "2824:30:71"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    },
                    "id": 23613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23610,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23584,
                        "src": "2878:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Index_$18175_memory_ptr",
                          "typeString": "struct Interest.Index memory"
                        }
                      },
                      "id": 23611,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18172,
                      "src": "2878:12:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 23612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2894:1:71",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2878:17:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 23622,
                  "nodeType": "IfStatement",
                  "src": "2874:78:71",
                  "trueBody": {
                    "id": 23621,
                    "nodeType": "Block",
                    "src": "2897:55:71",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 23619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 23614,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23584,
                              "src": "2911:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Index_$18175_memory_ptr",
                                "typeString": "struct Interest.Index memory"
                              }
                            },
                            "id": 23616,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "supply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18172,
                            "src": "2911:12:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 23617,
                              "name": "oldIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23590,
                              "src": "2926:8:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Index_$18175_memory_ptr",
                                "typeString": "struct Interest.Index memory"
                              }
                            },
                            "id": 23618,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "supply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18172,
                            "src": "2926:15:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "2911:30:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "id": 23620,
                        "nodeType": "ExpressionStatement",
                        "src": "2911:30:71"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23623,
                            "name": "g_state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13277,
                            "src": "2962:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_State_$19461_storage",
                              "typeString": "struct Storage.State storage ref"
                            }
                          },
                          "id": 23626,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "markets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19440,
                          "src": "2962:15:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Market_$19412_storage_$",
                            "typeString": "mapping(uint256 => struct Storage.Market storage ref)"
                          }
                        },
                        "id": 23627,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 23625,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23582,
                          "src": "2978:6:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2962:23:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$19412_storage",
                          "typeString": "struct Storage.Market storage ref"
                        }
                      },
                      "id": 23628,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "index",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19401,
                      "src": "2962:29:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Index_$18175_storage",
                        "typeString": "struct Interest.Index storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23629,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23584,
                      "src": "2994:5:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Index_$18175_memory_ptr",
                        "typeString": "struct Interest.Index memory"
                      }
                    },
                    "src": "2962:37:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Index_$18175_storage",
                      "typeString": "struct Interest.Index storage ref"
                    }
                  },
                  "id": 23631,
                  "nodeType": "ExpressionStatement",
                  "src": "2962:37:71"
                }
              ]
            },
            "documentation": null,
            "id": 23633,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMarketIndex",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23582,
                  "name": "market",
                  "nodeType": "VariableDeclaration",
                  "scope": 23633,
                  "src": "2627:14:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23581,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2627:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23584,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 23633,
                  "src": "2651:27:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Index_$18175_memory_ptr",
                    "typeString": "struct Interest.Index"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23583,
                    "name": "Interest.Index",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18175,
                    "src": "2651:14:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Index_$18175_storage_ptr",
                      "typeString": "struct Interest.Index"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2617:67:71"
            },
            "returnParameters": {
              "id": 23586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2704:0:71"
            },
            "scope": 23634,
            "src": "2594:412:71",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 23635,
        "src": "1065:1943:71"
      }
    ],
    "src": "603:2406:71"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/testing/TestSoloMargin.sol",
      "exportedSymbols": {
        "TestSoloMargin": [
          23634
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.5",
            ".7"
          ]
        },
        "id": 23394,
        "name": "PragmaDirective",
        "src": "603:22:71"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 23395,
        "name": "PragmaDirective",
        "src": "626:33:71"
      },
      {
        "attributes": {
          "SourceUnit": 374,
          "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "scope": 23635,
          "symbolAliases": [
            {
              "foreign": 23396,
              "local": null
            }
          ],
          "unitAlias": ""
        },
        "id": 23397,
        "name": "ImportDirective",
        "src": "661:77:71"
      },
      {
        "attributes": {
          "SourceUnit": 13271,
          "absolutePath": "project:/contracts/protocol/SoloMargin.sol",
          "file": "../protocol/SoloMargin.sol",
          "scope": 23635,
          "symbolAliases": [
            {
              "foreign": 23398,
              "local": null
            }
          ],
          "unitAlias": ""
        },
        "id": 23399,
        "name": "ImportDirective",
        "src": "739:56:71"
      },
      {
        "attributes": {
          "SourceUnit": 16434,
          "absolutePath": "project:/contracts/protocol/lib/Account.sol",
          "file": "../protocol/lib/Account.sol",
          "scope": 23635,
          "symbolAliases": [
            {
              "foreign": 23400,
              "local": null
            }
          ],
          "unitAlias": ""
        },
        "id": 23401,
        "name": "ImportDirective",
        "src": "796:54:71"
      },
      {
        "attributes": {
          "SourceUnit": 18455,
          "absolutePath": "project:/contracts/protocol/lib/Interest.sol",
          "file": "../protocol/lib/Interest.sol",
          "scope": 23635,
          "symbolAliases": [
            {
              "foreign": 23402,
              "local": null
            }
          ],
          "unitAlias": ""
        },
        "id": 23403,
        "name": "ImportDirective",
        "src": "851:56:71"
      },
      {
        "attributes": {
          "SourceUnit": 18642,
          "absolutePath": "project:/contracts/protocol/lib/Math.sol",
          "file": "../protocol/lib/Math.sol",
          "scope": 23635,
          "symbolAliases": [
            {
              "foreign": 23404,
              "local": null
            }
          ],
          "unitAlias": ""
        },
        "id": 23405,
        "name": "ImportDirective",
        "src": "908:48:71"
      },
      {
        "attributes": {
          "SourceUnit": 20758,
          "absolutePath": "project:/contracts/protocol/lib/Storage.sol",
          "file": "../protocol/lib/Storage.sol",
          "scope": 23635,
          "symbolAliases": [
            {
              "foreign": 23406,
              "local": null
            }
          ],
          "unitAlias": ""
        },
        "id": 23407,
        "name": "ImportDirective",
        "src": "957:54:71"
      },
      {
        "attributes": {
          "SourceUnit": 21431,
          "absolutePath": "project:/contracts/protocol/lib/Types.sol",
          "file": "../protocol/lib/Types.sol",
          "scope": 23635,
          "symbolAliases": [
            {
              "foreign": 23408,
              "local": null
            }
          ],
          "unitAlias": ""
        },
        "id": 23409,
        "name": "ImportDirective",
        "src": "1012:50:71"
      },
      {
        "attributes": {
          "contractDependencies": [
            482,
            513,
            12417,
            13113,
            13151,
            13224,
            13270,
            13278
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            23634,
            13270,
            13224,
            13151,
            13113,
            12417,
            513,
            482,
            13278
          ],
          "name": "TestSoloMargin",
          "scope": 23635
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SoloMargin",
                  "referencedDeclaration": 13270,
                  "type": "contract SoloMargin"
                },
                "id": 23410,
                "name": "UserDefinedTypeName",
                "src": "1096:10:71"
              }
            ],
            "id": 23411,
            "name": "InheritanceSpecifier",
            "src": "1096:10:71"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Math",
                  "referencedDeclaration": 18641,
                  "type": "library Math"
                },
                "id": 23412,
                "name": "UserDefinedTypeName",
                "src": "1119:4:71"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 23413,
                "name": "ElementaryTypeName",
                "src": "1128:7:71"
              }
            ],
            "id": 23414,
            "name": "UsingForDirective",
            "src": "1113:23:71"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SafeMath",
                  "referencedDeclaration": 373,
                  "type": "library SafeMath"
                },
                "id": 23415,
                "name": "UserDefinedTypeName",
                "src": "1147:8:71"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 23416,
                "name": "ElementaryTypeName",
                "src": "1160:7:71"
              }
            ],
            "id": 23417,
            "name": "UsingForDirective",
            "src": "1141:27:71"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 23634,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "rp",
                      "scope": 23429,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Storage.RiskParams",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Storage.RiskParams",
                          "referencedDeclaration": 19421,
                          "type": "struct Storage.RiskParams"
                        },
                        "id": 23418,
                        "name": "UserDefinedTypeName",
                        "src": "1242:18:71"
                      }
                    ],
                    "id": 23419,
                    "name": "VariableDeclaration",
                    "src": "1242:28:71"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "rl",
                      "scope": 23429,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Storage.RiskLimits",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Storage.RiskLimits",
                          "referencedDeclaration": 19434,
                          "type": "struct Storage.RiskLimits"
                        },
                        "id": 23420,
                        "name": "UserDefinedTypeName",
                        "src": "1280:18:71"
                      }
                    ],
                    "id": 23421,
                    "name": "VariableDeclaration",
                    "src": "1280:28:71"
                  }
                ],
                "id": 23422,
                "name": "ParameterList",
                "src": "1232:82:71"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 23427,
                "name": "ParameterList",
                "src": "1361:0:71"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 13270,
                      "type": "type(contract SoloMargin)",
                      "value": "SoloMargin"
                    },
                    "id": 23423,
                    "name": "Identifier",
                    "src": "1338:10:71"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 23419,
                      "type": "struct Storage.RiskParams memory",
                      "value": "rp"
                    },
                    "id": 23424,
                    "name": "Identifier",
                    "src": "1349:2:71"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 23421,
                      "type": "struct Storage.RiskLimits memory",
                      "value": "rl"
                    },
                    "id": 23425,
                    "name": "Identifier",
                    "src": "1353:2:71"
                  }
                ],
                "id": 23426,
                "name": "ModifierInvocation",
                "src": "1338:18:71"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 23428,
                "name": "Block",
                "src": "1361:2:71"
              }
            ],
            "id": 23429,
            "name": "FunctionDefinition",
            "src": "1220:143:71"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "setAccountBalance",
              "scope": 23634,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "account",
                      "scope": 23559,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Account.Info",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Account.Info",
                          "referencedDeclaration": 16403,
                          "type": "struct Account.Info"
                        },
                        "id": 23430,
                        "name": "UserDefinedTypeName",
                        "src": "1457:12:71"
                      }
                    ],
                    "id": 23431,
                    "name": "VariableDeclaration",
                    "src": "1457:27:71"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "market",
                      "scope": 23559,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 23432,
                        "name": "ElementaryTypeName",
                        "src": "1494:7:71"
                      }
                    ],
                    "id": 23433,
                    "name": "VariableDeclaration",
                    "src": "1494:14:71"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "newPar",
                      "scope": 23559,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Types.Par",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Types.Par",
                          "referencedDeclaration": 20996,
                          "type": "struct Types.Par"
                        },
                        "id": 23434,
                        "name": "UserDefinedTypeName",
                        "src": "1518:9:71"
                      }
                    ],
                    "id": 23435,
                    "name": "VariableDeclaration",
                    "src": "1518:23:71"
                  }
                ],
                "id": 23436,
                "name": "ParameterList",
                "src": "1447:100:71"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 23437,
                "name": "ParameterList",
                "src": "1567:0:71"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        23441
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "oldPar",
                          "scope": 23558,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct Types.Par",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Types.Par",
                              "referencedDeclaration": 20996,
                              "type": "struct Types.Par"
                            },
                            "id": 23440,
                            "name": "UserDefinedTypeName",
                            "src": "1577:9:71"
                          }
                        ],
                        "id": 23441,
                        "name": "VariableDeclaration",
                        "src": "1577:23:71"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Types.Par storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "balances",
                              "referencedDeclaration": 16407,
                              "type": "mapping(uint256 => struct Types.Par storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Account.Storage storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "mapping(uint256 => struct Account.Storage storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "accounts",
                                          "referencedDeclaration": 19446,
                                          "type": "mapping(address => mapping(uint256 => struct Account.Storage storage ref))"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 13277,
                                              "type": "struct Storage.State storage ref",
                                              "value": "g_state"
                                            },
                                            "id": 23442,
                                            "name": "Identifier",
                                            "src": "1603:7:71"
                                          }
                                        ],
                                        "id": 23443,
                                        "name": "MemberAccess",
                                        "src": "1603:16:71"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "owner",
                                          "referencedDeclaration": 16400,
                                          "type": "address"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 23431,
                                              "type": "struct Account.Info memory",
                                              "value": "account"
                                            },
                                            "id": 23444,
                                            "name": "Identifier",
                                            "src": "1620:7:71"
                                          }
                                        ],
                                        "id": 23445,
                                        "name": "MemberAccess",
                                        "src": "1620:13:71"
                                      }
                                    ],
                                    "id": 23446,
                                    "name": "IndexAccess",
                                    "src": "1603:31:71"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "number",
                                      "referencedDeclaration": 16402,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 23431,
                                          "type": "struct Account.Info memory",
                                          "value": "account"
                                        },
                                        "id": 23447,
                                        "name": "Identifier",
                                        "src": "1635:7:71"
                                      }
                                    ],
                                    "id": 23448,
                                    "name": "MemberAccess",
                                    "src": "1635:14:71"
                                  }
                                ],
                                "id": 23449,
                                "name": "IndexAccess",
                                "src": "1603:47:71"
                              }
                            ],
                            "id": 23450,
                            "name": "MemberAccess",
                            "src": "1603:56:71"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 23433,
                              "type": "uint256",
                              "value": "market"
                            },
                            "id": 23451,
                            "name": "Identifier",
                            "src": "1660:6:71"
                          }
                        ],
                        "id": 23452,
                        "name": "IndexAccess",
                        "src": "1603:64:71"
                      }
                    ],
                    "id": 23453,
                    "name": "VariableDeclarationStatement",
                    "src": "1577:90:71"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        23457
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "totalPar",
                          "scope": 23558,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct Types.TotalPar",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Types.TotalPar",
                              "referencedDeclaration": 20991,
                              "type": "struct Types.TotalPar"
                            },
                            "id": 23456,
                            "name": "UserDefinedTypeName",
                            "src": "1677:14:71"
                          }
                        ],
                        "id": 23457,
                        "name": "VariableDeclaration",
                        "src": "1677:30:71"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "totalPar",
                          "referencedDeclaration": 19399,
                          "type": "struct Types.TotalPar storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "struct Storage.Market storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "markets",
                                  "referencedDeclaration": 19440,
                                  "type": "mapping(uint256 => struct Storage.Market storage ref)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 13277,
                                      "type": "struct Storage.State storage ref",
                                      "value": "g_state"
                                    },
                                    "id": 23458,
                                    "name": "Identifier",
                                    "src": "1710:7:71"
                                  }
                                ],
                                "id": 23459,
                                "name": "MemberAccess",
                                "src": "1710:15:71"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 23433,
                                  "type": "uint256",
                                  "value": "market"
                                },
                                "id": 23460,
                                "name": "Identifier",
                                "src": "1726:6:71"
                              }
                            ],
                            "id": 23461,
                            "name": "IndexAccess",
                            "src": "1710:23:71"
                          }
                        ],
                        "id": 23462,
                        "name": "MemberAccess",
                        "src": "1710:32:71"
                      }
                    ],
                    "id": 23463,
                    "name": "VariableDeclarationStatement",
                    "src": "1677:65:71"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "sign",
                          "referencedDeclaration": 20993,
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 23441,
                              "type": "struct Types.Par memory",
                              "value": "oldPar"
                            },
                            "id": 23464,
                            "name": "Identifier",
                            "src": "1785:6:71"
                          }
                        ],
                        "id": 23465,
                        "name": "MemberAccess",
                        "src": "1785:11:71"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint128"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "supply",
                                      "referencedDeclaration": 20990,
                                      "type": "uint128"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 23457,
                                          "type": "struct Types.TotalPar memory",
                                          "value": "totalPar"
                                        },
                                        "id": 23466,
                                        "name": "Identifier",
                                        "src": "1812:8:71"
                                      }
                                    ],
                                    "id": 23468,
                                    "name": "MemberAccess",
                                    "src": "1812:15:71"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint128",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "to128",
                                          "referencedDeclaration": 18554,
                                          "type": "function (uint256) pure returns (uint128)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "type": "uint256",
                                              "type_conversion": false
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_uint128",
                                                      "typeString": "uint128"
                                                    }
                                                  ],
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "sub",
                                                  "referencedDeclaration": 328,
                                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "isStructConstructorCall": false,
                                                      "lValueRequested": false,
                                                      "names": [
                                                        null
                                                      ],
                                                      "type": "uint256",
                                                      "type_conversion": true
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": [
                                                            {
                                                              "typeIdentifier": "t_uint128",
                                                              "typeString": "uint128"
                                                            }
                                                          ],
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "type": "type(uint256)",
                                                          "value": "uint256"
                                                        },
                                                        "id": 23469,
                                                        "name": "ElementaryTypeNameExpression",
                                                        "src": "1830:7:71"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "member_name": "supply",
                                                          "referencedDeclaration": 20990,
                                                          "type": "uint128"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 23457,
                                                              "type": "struct Types.TotalPar memory",
                                                              "value": "totalPar"
                                                            },
                                                            "id": 23470,
                                                            "name": "Identifier",
                                                            "src": "1838:8:71"
                                                          }
                                                        ],
                                                        "id": 23471,
                                                        "name": "MemberAccess",
                                                        "src": "1838:15:71"
                                                      }
                                                    ],
                                                    "id": 23472,
                                                    "name": "FunctionCall",
                                                    "src": "1830:24:71"
                                                  }
                                                ],
                                                "id": 23473,
                                                "name": "MemberAccess",
                                                "src": "1830:28:71"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "value",
                                                  "referencedDeclaration": 20995,
                                                  "type": "uint128"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 23441,
                                                      "type": "struct Types.Par memory",
                                                      "value": "oldPar"
                                                    },
                                                    "id": 23474,
                                                    "name": "Identifier",
                                                    "src": "1859:6:71"
                                                  }
                                                ],
                                                "id": 23475,
                                                "name": "MemberAccess",
                                                "src": "1859:12:71"
                                              }
                                            ],
                                            "id": 23476,
                                            "name": "FunctionCall",
                                            "src": "1830:42:71"
                                          }
                                        ],
                                        "id": 23477,
                                        "name": "MemberAccess",
                                        "src": "1830:48:71"
                                      }
                                    ],
                                    "id": 23478,
                                    "name": "FunctionCall",
                                    "src": "1830:50:71"
                                  }
                                ],
                                "id": 23479,
                                "name": "Assignment",
                                "src": "1812:68:71"
                              }
                            ],
                            "id": 23480,
                            "name": "ExpressionStatement",
                            "src": "1812:68:71"
                          }
                        ],
                        "id": 23481,
                        "name": "Block",
                        "src": "1798:93:71"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint128"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "borrow",
                                      "referencedDeclaration": 20988,
                                      "type": "uint128"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 23457,
                                          "type": "struct Types.TotalPar memory",
                                          "value": "totalPar"
                                        },
                                        "id": 23482,
                                        "name": "Identifier",
                                        "src": "1911:8:71"
                                      }
                                    ],
                                    "id": 23484,
                                    "name": "MemberAccess",
                                    "src": "1911:15:71"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint128",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "to128",
                                          "referencedDeclaration": 18554,
                                          "type": "function (uint256) pure returns (uint128)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "type": "uint256",
                                              "type_conversion": false
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_uint128",
                                                      "typeString": "uint128"
                                                    }
                                                  ],
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "sub",
                                                  "referencedDeclaration": 328,
                                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "isStructConstructorCall": false,
                                                      "lValueRequested": false,
                                                      "names": [
                                                        null
                                                      ],
                                                      "type": "uint256",
                                                      "type_conversion": true
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": [
                                                            {
                                                              "typeIdentifier": "t_uint128",
                                                              "typeString": "uint128"
                                                            }
                                                          ],
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "type": "type(uint256)",
                                                          "value": "uint256"
                                                        },
                                                        "id": 23485,
                                                        "name": "ElementaryTypeNameExpression",
                                                        "src": "1929:7:71"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "member_name": "borrow",
                                                          "referencedDeclaration": 20988,
                                                          "type": "uint128"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 23457,
                                                              "type": "struct Types.TotalPar memory",
                                                              "value": "totalPar"
                                                            },
                                                            "id": 23486,
                                                            "name": "Identifier",
                                                            "src": "1937:8:71"
                                                          }
                                                        ],
                                                        "id": 23487,
                                                        "name": "MemberAccess",
                                                        "src": "1937:15:71"
                                                      }
                                                    ],
                                                    "id": 23488,
                                                    "name": "FunctionCall",
                                                    "src": "1929:24:71"
                                                  }
                                                ],
                                                "id": 23489,
                                                "name": "MemberAccess",
                                                "src": "1929:28:71"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "value",
                                                  "referencedDeclaration": 20995,
                                                  "type": "uint128"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 23441,
                                                      "type": "struct Types.Par memory",
                                                      "value": "oldPar"
                                                    },
                                                    "id": 23490,
                                                    "name": "Identifier",
                                                    "src": "1958:6:71"
                                                  }
                                                ],
                                                "id": 23491,
                                                "name": "MemberAccess",
                                                "src": "1958:12:71"
                                              }
                                            ],
                                            "id": 23492,
                                            "name": "FunctionCall",
                                            "src": "1929:42:71"
                                          }
                                        ],
                                        "id": 23493,
                                        "name": "MemberAccess",
                                        "src": "1929:48:71"
                                      }
                                    ],
                                    "id": 23494,
                                    "name": "FunctionCall",
                                    "src": "1929:50:71"
                                  }
                                ],
                                "id": 23495,
                                "name": "Assignment",
                                "src": "1911:68:71"
                              }
                            ],
                            "id": 23496,
                            "name": "ExpressionStatement",
                            "src": "1911:68:71"
                          }
                        ],
                        "id": 23497,
                        "name": "Block",
                        "src": "1897:93:71"
                      }
                    ],
                    "id": 23498,
                    "name": "IfStatement",
                    "src": "1781:209:71"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "sign",
                          "referencedDeclaration": 20993,
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 23435,
                              "type": "struct Types.Par memory",
                              "value": "newPar"
                            },
                            "id": 23499,
                            "name": "Identifier",
                            "src": "2035:6:71"
                          }
                        ],
                        "id": 23500,
                        "name": "MemberAccess",
                        "src": "2035:11:71"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint128"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "supply",
                                      "referencedDeclaration": 20990,
                                      "type": "uint128"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 23457,
                                          "type": "struct Types.TotalPar memory",
                                          "value": "totalPar"
                                        },
                                        "id": 23501,
                                        "name": "Identifier",
                                        "src": "2062:8:71"
                                      }
                                    ],
                                    "id": 23503,
                                    "name": "MemberAccess",
                                    "src": "2062:15:71"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint128",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "to128",
                                          "referencedDeclaration": 18554,
                                          "type": "function (uint256) pure returns (uint128)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "type": "uint256",
                                              "type_conversion": false
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_uint128",
                                                      "typeString": "uint128"
                                                    }
                                                  ],
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "add",
                                                  "referencedDeclaration": 352,
                                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "isStructConstructorCall": false,
                                                      "lValueRequested": false,
                                                      "names": [
                                                        null
                                                      ],
                                                      "type": "uint256",
                                                      "type_conversion": true
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": [
                                                            {
                                                              "typeIdentifier": "t_uint128",
                                                              "typeString": "uint128"
                                                            }
                                                          ],
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "type": "type(uint256)",
                                                          "value": "uint256"
                                                        },
                                                        "id": 23504,
                                                        "name": "ElementaryTypeNameExpression",
                                                        "src": "2080:7:71"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "member_name": "supply",
                                                          "referencedDeclaration": 20990,
                                                          "type": "uint128"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 23457,
                                                              "type": "struct Types.TotalPar memory",
                                                              "value": "totalPar"
                                                            },
                                                            "id": 23505,
                                                            "name": "Identifier",
                                                            "src": "2088:8:71"
                                                          }
                                                        ],
                                                        "id": 23506,
                                                        "name": "MemberAccess",
                                                        "src": "2088:15:71"
                                                      }
                                                    ],
                                                    "id": 23507,
                                                    "name": "FunctionCall",
                                                    "src": "2080:24:71"
                                                  }
                                                ],
                                                "id": 23508,
                                                "name": "MemberAccess",
                                                "src": "2080:28:71"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "value",
                                                  "referencedDeclaration": 20995,
                                                  "type": "uint128"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 23435,
                                                      "type": "struct Types.Par memory",
                                                      "value": "newPar"
                                                    },
                                                    "id": 23509,
                                                    "name": "Identifier",
                                                    "src": "2109:6:71"
                                                  }
                                                ],
                                                "id": 23510,
                                                "name": "MemberAccess",
                                                "src": "2109:12:71"
                                              }
                                            ],
                                            "id": 23511,
                                            "name": "FunctionCall",
                                            "src": "2080:42:71"
                                          }
                                        ],
                                        "id": 23512,
                                        "name": "MemberAccess",
                                        "src": "2080:48:71"
                                      }
                                    ],
                                    "id": 23513,
                                    "name": "FunctionCall",
                                    "src": "2080:50:71"
                                  }
                                ],
                                "id": 23514,
                                "name": "Assignment",
                                "src": "2062:68:71"
                              }
                            ],
                            "id": 23515,
                            "name": "ExpressionStatement",
                            "src": "2062:68:71"
                          }
                        ],
                        "id": 23516,
                        "name": "Block",
                        "src": "2048:93:71"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint128"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "borrow",
                                      "referencedDeclaration": 20988,
                                      "type": "uint128"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 23457,
                                          "type": "struct Types.TotalPar memory",
                                          "value": "totalPar"
                                        },
                                        "id": 23517,
                                        "name": "Identifier",
                                        "src": "2161:8:71"
                                      }
                                    ],
                                    "id": 23519,
                                    "name": "MemberAccess",
                                    "src": "2161:15:71"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint128",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "to128",
                                          "referencedDeclaration": 18554,
                                          "type": "function (uint256) pure returns (uint128)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "type": "uint256",
                                              "type_conversion": false
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_uint128",
                                                      "typeString": "uint128"
                                                    }
                                                  ],
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "add",
                                                  "referencedDeclaration": 352,
                                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "isStructConstructorCall": false,
                                                      "lValueRequested": false,
                                                      "names": [
                                                        null
                                                      ],
                                                      "type": "uint256",
                                                      "type_conversion": true
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": [
                                                            {
                                                              "typeIdentifier": "t_uint128",
                                                              "typeString": "uint128"
                                                            }
                                                          ],
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "type": "type(uint256)",
                                                          "value": "uint256"
                                                        },
                                                        "id": 23520,
                                                        "name": "ElementaryTypeNameExpression",
                                                        "src": "2179:7:71"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "member_name": "borrow",
                                                          "referencedDeclaration": 20988,
                                                          "type": "uint128"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 23457,
                                                              "type": "struct Types.TotalPar memory",
                                                              "value": "totalPar"
                                                            },
                                                            "id": 23521,
                                                            "name": "Identifier",
                                                            "src": "2187:8:71"
                                                          }
                                                        ],
                                                        "id": 23522,
                                                        "name": "MemberAccess",
                                                        "src": "2187:15:71"
                                                      }
                                                    ],
                                                    "id": 23523,
                                                    "name": "FunctionCall",
                                                    "src": "2179:24:71"
                                                  }
                                                ],
                                                "id": 23524,
                                                "name": "MemberAccess",
                                                "src": "2179:28:71"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "value",
                                                  "referencedDeclaration": 20995,
                                                  "type": "uint128"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 23435,
                                                      "type": "struct Types.Par memory",
                                                      "value": "newPar"
                                                    },
                                                    "id": 23525,
                                                    "name": "Identifier",
                                                    "src": "2208:6:71"
                                                  }
                                                ],
                                                "id": 23526,
                                                "name": "MemberAccess",
                                                "src": "2208:12:71"
                                              }
                                            ],
                                            "id": 23527,
                                            "name": "FunctionCall",
                                            "src": "2179:42:71"
                                          }
                                        ],
                                        "id": 23528,
                                        "name": "MemberAccess",
                                        "src": "2179:48:71"
                                      }
                                    ],
                                    "id": 23529,
                                    "name": "FunctionCall",
                                    "src": "2179:50:71"
                                  }
                                ],
                                "id": 23530,
                                "name": "Assignment",
                                "src": "2161:68:71"
                              }
                            ],
                            "id": 23531,
                            "name": "ExpressionStatement",
                            "src": "2161:68:71"
                          }
                        ],
                        "id": 23532,
                        "name": "Block",
                        "src": "2147:93:71"
                      }
                    ],
                    "id": 23533,
                    "name": "IfStatement",
                    "src": "2031:209:71"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct Types.TotalPar storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "totalPar",
                              "referencedDeclaration": 19399,
                              "type": "struct Types.TotalPar storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Storage.Market storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "markets",
                                      "referencedDeclaration": 19440,
                                      "type": "mapping(uint256 => struct Storage.Market storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 13277,
                                          "type": "struct Storage.State storage ref",
                                          "value": "g_state"
                                        },
                                        "id": 23534,
                                        "name": "Identifier",
                                        "src": "2250:7:71"
                                      }
                                    ],
                                    "id": 23537,
                                    "name": "MemberAccess",
                                    "src": "2250:15:71"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 23433,
                                      "type": "uint256",
                                      "value": "market"
                                    },
                                    "id": 23536,
                                    "name": "Identifier",
                                    "src": "2266:6:71"
                                  }
                                ],
                                "id": 23538,
                                "name": "IndexAccess",
                                "src": "2250:23:71"
                              }
                            ],
                            "id": 23539,
                            "name": "MemberAccess",
                            "src": "2250:32:71"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 23457,
                              "type": "struct Types.TotalPar memory",
                              "value": "totalPar"
                            },
                            "id": 23540,
                            "name": "Identifier",
                            "src": "2285:8:71"
                          }
                        ],
                        "id": 23541,
                        "name": "Assignment",
                        "src": "2250:43:71"
                      }
                    ],
                    "id": 23542,
                    "name": "ExpressionStatement",
                    "src": "2250:43:71"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct Types.Par storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct Types.Par storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "balances",
                                  "referencedDeclaration": 16407,
                                  "type": "mapping(uint256 => struct Types.Par storage ref)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Account.Storage storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "mapping(uint256 => struct Account.Storage storage ref)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "accounts",
                                              "referencedDeclaration": 19446,
                                              "type": "mapping(address => mapping(uint256 => struct Account.Storage storage ref))"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 13277,
                                                  "type": "struct Storage.State storage ref",
                                                  "value": "g_state"
                                                },
                                                "id": 23543,
                                                "name": "Identifier",
                                                "src": "2303:7:71"
                                              }
                                            ],
                                            "id": 23549,
                                            "name": "MemberAccess",
                                            "src": "2303:16:71"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "owner",
                                              "referencedDeclaration": 16400,
                                              "type": "address"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 23431,
                                                  "type": "struct Account.Info memory",
                                                  "value": "account"
                                                },
                                                "id": 23545,
                                                "name": "Identifier",
                                                "src": "2320:7:71"
                                              }
                                            ],
                                            "id": 23546,
                                            "name": "MemberAccess",
                                            "src": "2320:13:71"
                                          }
                                        ],
                                        "id": 23550,
                                        "name": "IndexAccess",
                                        "src": "2303:31:71"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "number",
                                          "referencedDeclaration": 16402,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 23431,
                                              "type": "struct Account.Info memory",
                                              "value": "account"
                                            },
                                            "id": 23547,
                                            "name": "Identifier",
                                            "src": "2335:7:71"
                                          }
                                        ],
                                        "id": 23548,
                                        "name": "MemberAccess",
                                        "src": "2335:14:71"
                                      }
                                    ],
                                    "id": 23551,
                                    "name": "IndexAccess",
                                    "src": "2303:47:71"
                                  }
                                ],
                                "id": 23552,
                                "name": "MemberAccess",
                                "src": "2303:56:71"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 23433,
                                  "type": "uint256",
                                  "value": "market"
                                },
                                "id": 23553,
                                "name": "Identifier",
                                "src": "2360:6:71"
                              }
                            ],
                            "id": 23554,
                            "name": "IndexAccess",
                            "src": "2303:64:71"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 23435,
                              "type": "struct Types.Par memory",
                              "value": "newPar"
                            },
                            "id": 23555,
                            "name": "Identifier",
                            "src": "2370:6:71"
                          }
                        ],
                        "id": 23556,
                        "name": "Assignment",
                        "src": "2303:73:71"
                      }
                    ],
                    "id": 23557,
                    "name": "ExpressionStatement",
                    "src": "2303:73:71"
                  }
                ],
                "id": 23558,
                "name": "Block",
                "src": "1567:816:71"
              }
            ],
            "id": 23559,
            "name": "FunctionDefinition",
            "src": "1421:962:71"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "setAccountStatus",
              "scope": 23634,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "account",
                      "scope": 23580,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Account.Info",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Account.Info",
                          "referencedDeclaration": 16403,
                          "type": "struct Account.Info"
                        },
                        "id": 23560,
                        "name": "UserDefinedTypeName",
                        "src": "2424:12:71"
                      }
                    ],
                    "id": 23561,
                    "name": "VariableDeclaration",
                    "src": "2424:27:71"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "status",
                      "scope": 23580,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum Account.Status",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Account.Status",
                          "referencedDeclaration": 16398,
                          "type": "enum Account.Status"
                        },
                        "id": 23562,
                        "name": "UserDefinedTypeName",
                        "src": "2461:14:71"
                      }
                    ],
                    "id": 23563,
                    "name": "VariableDeclaration",
                    "src": "2461:21:71"
                  }
                ],
                "id": 23564,
                "name": "ParameterList",
                "src": "2414:74:71"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 23565,
                "name": "ParameterList",
                "src": "2508:0:71"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "enum Account.Status"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "status",
                              "referencedDeclaration": 16409,
                              "type": "enum Account.Status"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Account.Storage storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "mapping(uint256 => struct Account.Storage storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "accounts",
                                          "referencedDeclaration": 19446,
                                          "type": "mapping(address => mapping(uint256 => struct Account.Storage storage ref))"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 13277,
                                              "type": "struct Storage.State storage ref",
                                              "value": "g_state"
                                            },
                                            "id": 23566,
                                            "name": "Identifier",
                                            "src": "2518:7:71"
                                          }
                                        ],
                                        "id": 23572,
                                        "name": "MemberAccess",
                                        "src": "2518:16:71"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "owner",
                                          "referencedDeclaration": 16400,
                                          "type": "address"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 23561,
                                              "type": "struct Account.Info memory",
                                              "value": "account"
                                            },
                                            "id": 23568,
                                            "name": "Identifier",
                                            "src": "2535:7:71"
                                          }
                                        ],
                                        "id": 23569,
                                        "name": "MemberAccess",
                                        "src": "2535:13:71"
                                      }
                                    ],
                                    "id": 23573,
                                    "name": "IndexAccess",
                                    "src": "2518:31:71"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "number",
                                      "referencedDeclaration": 16402,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 23561,
                                          "type": "struct Account.Info memory",
                                          "value": "account"
                                        },
                                        "id": 23570,
                                        "name": "Identifier",
                                        "src": "2550:7:71"
                                      }
                                    ],
                                    "id": 23571,
                                    "name": "MemberAccess",
                                    "src": "2550:14:71"
                                  }
                                ],
                                "id": 23574,
                                "name": "IndexAccess",
                                "src": "2518:47:71"
                              }
                            ],
                            "id": 23575,
                            "name": "MemberAccess",
                            "src": "2518:54:71"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 23563,
                              "type": "enum Account.Status",
                              "value": "status"
                            },
                            "id": 23576,
                            "name": "Identifier",
                            "src": "2575:6:71"
                          }
                        ],
                        "id": 23577,
                        "name": "Assignment",
                        "src": "2518:63:71"
                      }
                    ],
                    "id": 23578,
                    "name": "ExpressionStatement",
                    "src": "2518:63:71"
                  }
                ],
                "id": 23579,
                "name": "Block",
                "src": "2508:80:71"
              }
            ],
            "id": 23580,
            "name": "FunctionDefinition",
            "src": "2389:199:71"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "setMarketIndex",
              "scope": 23634,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "market",
                      "scope": 23633,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 23581,
                        "name": "ElementaryTypeName",
                        "src": "2627:7:71"
                      }
                    ],
                    "id": 23582,
                    "name": "VariableDeclaration",
                    "src": "2627:14:71"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "index",
                      "scope": 23633,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Interest.Index",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Interest.Index",
                          "referencedDeclaration": 18175,
                          "type": "struct Interest.Index"
                        },
                        "id": 23583,
                        "name": "UserDefinedTypeName",
                        "src": "2651:14:71"
                      }
                    ],
                    "id": 23584,
                    "name": "VariableDeclaration",
                    "src": "2651:27:71"
                  }
                ],
                "id": 23585,
                "name": "ParameterList",
                "src": "2617:67:71"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 23586,
                "name": "ParameterList",
                "src": "2704:0:71"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        23590
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "oldIndex",
                          "scope": 23632,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct Interest.Index",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Interest.Index",
                              "referencedDeclaration": 18175,
                              "type": "struct Interest.Index"
                            },
                            "id": 23589,
                            "name": "UserDefinedTypeName",
                            "src": "2714:14:71"
                          }
                        ],
                        "id": 23590,
                        "name": "VariableDeclaration",
                        "src": "2714:30:71"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "index",
                          "referencedDeclaration": 19401,
                          "type": "struct Interest.Index storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "struct Storage.Market storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "markets",
                                  "referencedDeclaration": 19440,
                                  "type": "mapping(uint256 => struct Storage.Market storage ref)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 13277,
                                      "type": "struct Storage.State storage ref",
                                      "value": "g_state"
                                    },
                                    "id": 23591,
                                    "name": "Identifier",
                                    "src": "2747:7:71"
                                  }
                                ],
                                "id": 23592,
                                "name": "MemberAccess",
                                "src": "2747:15:71"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 23582,
                                  "type": "uint256",
                                  "value": "market"
                                },
                                "id": 23593,
                                "name": "Identifier",
                                "src": "2763:6:71"
                              }
                            ],
                            "id": 23594,
                            "name": "IndexAccess",
                            "src": "2747:23:71"
                          }
                        ],
                        "id": 23595,
                        "name": "MemberAccess",
                        "src": "2747:29:71"
                      }
                    ],
                    "id": 23596,
                    "name": "VariableDeclarationStatement",
                    "src": "2714:62:71"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "borrow",
                              "referencedDeclaration": 18170,
                              "type": "uint96"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 23584,
                                  "type": "struct Interest.Index memory",
                                  "value": "index"
                                },
                                "id": 23597,
                                "name": "Identifier",
                                "src": "2791:5:71"
                              }
                            ],
                            "id": 23598,
                            "name": "MemberAccess",
                            "src": "2791:12:71"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 23599,
                            "name": "Literal",
                            "src": "2807:1:71"
                          }
                        ],
                        "id": 23600,
                        "name": "BinaryOperation",
                        "src": "2791:17:71"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint96"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "borrow",
                                      "referencedDeclaration": 18170,
                                      "type": "uint96"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 23584,
                                          "type": "struct Interest.Index memory",
                                          "value": "index"
                                        },
                                        "id": 23601,
                                        "name": "Identifier",
                                        "src": "2824:5:71"
                                      }
                                    ],
                                    "id": 23603,
                                    "name": "MemberAccess",
                                    "src": "2824:12:71"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "borrow",
                                      "referencedDeclaration": 18170,
                                      "type": "uint96"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 23590,
                                          "type": "struct Interest.Index memory",
                                          "value": "oldIndex"
                                        },
                                        "id": 23604,
                                        "name": "Identifier",
                                        "src": "2839:8:71"
                                      }
                                    ],
                                    "id": 23605,
                                    "name": "MemberAccess",
                                    "src": "2839:15:71"
                                  }
                                ],
                                "id": 23606,
                                "name": "Assignment",
                                "src": "2824:30:71"
                              }
                            ],
                            "id": 23607,
                            "name": "ExpressionStatement",
                            "src": "2824:30:71"
                          }
                        ],
                        "id": 23608,
                        "name": "Block",
                        "src": "2810:55:71"
                      }
                    ],
                    "id": 23609,
                    "name": "IfStatement",
                    "src": "2787:78:71"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "supply",
                              "referencedDeclaration": 18172,
                              "type": "uint96"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 23584,
                                  "type": "struct Interest.Index memory",
                                  "value": "index"
                                },
                                "id": 23610,
                                "name": "Identifier",
                                "src": "2878:5:71"
                              }
                            ],
                            "id": 23611,
                            "name": "MemberAccess",
                            "src": "2878:12:71"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 23612,
                            "name": "Literal",
                            "src": "2894:1:71"
                          }
                        ],
                        "id": 23613,
                        "name": "BinaryOperation",
                        "src": "2878:17:71"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint96"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "supply",
                                      "referencedDeclaration": 18172,
                                      "type": "uint96"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 23584,
                                          "type": "struct Interest.Index memory",
                                          "value": "index"
                                        },
                                        "id": 23614,
                                        "name": "Identifier",
                                        "src": "2911:5:71"
                                      }
                                    ],
                                    "id": 23616,
                                    "name": "MemberAccess",
                                    "src": "2911:12:71"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "supply",
                                      "referencedDeclaration": 18172,
                                      "type": "uint96"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 23590,
                                          "type": "struct Interest.Index memory",
                                          "value": "oldIndex"
                                        },
                                        "id": 23617,
                                        "name": "Identifier",
                                        "src": "2926:8:71"
                                      }
                                    ],
                                    "id": 23618,
                                    "name": "MemberAccess",
                                    "src": "2926:15:71"
                                  }
                                ],
                                "id": 23619,
                                "name": "Assignment",
                                "src": "2911:30:71"
                              }
                            ],
                            "id": 23620,
                            "name": "ExpressionStatement",
                            "src": "2911:30:71"
                          }
                        ],
                        "id": 23621,
                        "name": "Block",
                        "src": "2897:55:71"
                      }
                    ],
                    "id": 23622,
                    "name": "IfStatement",
                    "src": "2874:78:71"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct Interest.Index storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "index",
                              "referencedDeclaration": 19401,
                              "type": "struct Interest.Index storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Storage.Market storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "markets",
                                      "referencedDeclaration": 19440,
                                      "type": "mapping(uint256 => struct Storage.Market storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 13277,
                                          "type": "struct Storage.State storage ref",
                                          "value": "g_state"
                                        },
                                        "id": 23623,
                                        "name": "Identifier",
                                        "src": "2962:7:71"
                                      }
                                    ],
                                    "id": 23626,
                                    "name": "MemberAccess",
                                    "src": "2962:15:71"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 23582,
                                      "type": "uint256",
                                      "value": "market"
                                    },
                                    "id": 23625,
                                    "name": "Identifier",
                                    "src": "2978:6:71"
                                  }
                                ],
                                "id": 23627,
                                "name": "IndexAccess",
                                "src": "2962:23:71"
                              }
                            ],
                            "id": 23628,
                            "name": "MemberAccess",
                            "src": "2962:29:71"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 23584,
                              "type": "struct Interest.Index memory",
                              "value": "index"
                            },
                            "id": 23629,
                            "name": "Identifier",
                            "src": "2994:5:71"
                          }
                        ],
                        "id": 23630,
                        "name": "Assignment",
                        "src": "2962:37:71"
                      }
                    ],
                    "id": 23631,
                    "name": "ExpressionStatement",
                    "src": "2962:37:71"
                  }
                ],
                "id": 23632,
                "name": "Block",
                "src": "2704:302:71"
              }
            ],
            "id": 23633,
            "name": "FunctionDefinition",
            "src": "2594:412:71"
          }
        ],
        "id": 23634,
        "name": "ContractDefinition",
        "src": "1065:1943:71"
      }
    ],
    "id": 23635,
    "name": "SourceUnit",
    "src": "603:2406:71"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Linux.g++"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-04-29T09:51:29.403Z",
  "devdoc": {
    "methods": {
      "getAccountBalances((address,uint256))": {
        "params": {
          "account": "The account to query"
        },
        "return": "The following values:                  - The ERC20 token address for each market                  - The account's principal value for each market                  - The account's (supplied or borrowed) number of tokens for each market"
      },
      "getAccountPar((address,uint256),uint256)": {
        "params": {
          "account": "The account to query",
          "marketId": "The market to query"
        },
        "return": "The principal value"
      },
      "getAccountStatus((address,uint256))": {
        "params": {
          "account": "The account to query"
        },
        "return": "The account's status"
      },
      "getAccountValues((address,uint256))": {
        "params": {
          "account": "The account to query"
        },
        "return": "The following values:                  - The supplied value of the account                  - The borrowed value of the account"
      },
      "getAccountWei((address,uint256),uint256)": {
        "params": {
          "account": "The account to query",
          "marketId": "The market to query"
        },
        "return": "The token amount"
      },
      "getAdjustedAccountValues((address,uint256))": {
        "params": {
          "account": "The account to query"
        },
        "return": "The following values:                  - The supplied value of the account (adjusted for marginPremium)                  - The borrowed value of the account (adjusted for marginPremium)"
      },
      "getEarningsRate()": {
        "return": "The global earnings rate"
      },
      "getIsGlobalOperator(address)": {
        "params": {
          "operator": "The address to query"
        },
        "return": "True if operator is a global operator"
      },
      "getIsLocalOperator(address,address)": {
        "params": {
          "operator": "The possible operator",
          "owner": "The owner of the accounts"
        },
        "return": "True if operator is approved for owner's accounts"
      },
      "getLiquidationSpread()": {
        "return": "The global liquidation spread"
      },
      "getLiquidationSpreadForPair(uint256,uint256)": {
        "params": {
          "heldMarketId": "The market for which the account has collateral",
          "owedMarketId": "The market for which the account has borrowed tokens"
        },
        "return": "The adjusted liquidation spread"
      },
      "getMarginRatio()": {
        "return": "The global margin-ratio"
      },
      "getMarket(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "A Storage.Market struct with the current state of the market"
      },
      "getMarketCachedIndex(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "The most recent index"
      },
      "getMarketCurrentIndex(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "The estimated current index"
      },
      "getMarketInterestRate(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "The current interest rate"
      },
      "getMarketInterestSetter(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "The interest-setter address"
      },
      "getMarketIsClosing(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "True if the market is closing"
      },
      "getMarketMarginPremium(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "The market's margin premium"
      },
      "getMarketPrice(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "The price of each atomic unit of the token"
      },
      "getMarketPriceOracle(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "The price oracle address"
      },
      "getMarketSpreadPremium(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "The market's spread premium"
      },
      "getMarketTokenAddress(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "The token address"
      },
      "getMarketTotalPar(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "The total principal amounts"
      },
      "getMarketWithInfo(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "A tuple containing the values:                   - A Storage.Market struct with the current state of the market                   - The current estimated interest index                   - The current token price                   - The current market interest rate"
      },
      "getMinBorrowedValue()": {
        "return": "The global minimum borrow value"
      },
      "getNumExcessTokens(uint256)": {
        "params": {
          "marketId": "The market to query"
        },
        "return": "The number of excess tokens"
      },
      "getNumMarkets()": {
        "return": "The number of markets"
      },
      "getRiskLimits()": {
        "return": "All global risk parameter limnits"
      },
      "getRiskParams()": {
        "return": "All global risk parameters"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "operate((address,uint256)[],(uint8,uint256,(bool,uint8,uint8,uint256),uint256,uint256,address,uint256,bytes)[])": {
        "params": {
          "accounts": "A list of all accounts that will be used in this operation. Cannot contain                  duplicates. In each action, the relevant account will be referred-to by its                  index in the list.",
          "actions": "An ordered list of all actions that will be taken in this operation. The                  actions will be processed in order."
        }
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "setOperators((address,bool)[])": {
        "params": {
          "args": "A list of OperatorArgs which have an address and a boolean. The boolean value              denotes whether to approve (true) or revoke approval (false) for that address."
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "getAccountBalances((address,uint256))": {
        "notice": "Get an account's summary for each market."
      },
      "getAccountPar((address,uint256),uint256)": {
        "notice": "Get the principal value for a particular account and market."
      },
      "getAccountStatus((address,uint256))": {
        "notice": "Get the status of an account (Normal, Liquidating, or Vaporizing)."
      },
      "getAccountValues((address,uint256))": {
        "notice": "Get the total supplied and total borrowed value of an account."
      },
      "getAccountWei((address,uint256),uint256)": {
        "notice": "Get the token balance for a particular account and market."
      },
      "getAdjustedAccountValues((address,uint256))": {
        "notice": "Get the total supplied and total borrowed values of an account adjusted by the marginPremium of each market. Supplied values are divided by (1 + marginPremium) for each market and borrowed values are multiplied by (1 + marginPremium) for each market. Comparing these adjusted values gives the margin-ratio of the account which will be compared to the global margin-ratio when determining if the account can be liquidated."
      },
      "getEarningsRate()": {
        "notice": "Get the global earnings-rate variable that determines what percentage of the interest paid by borrowers gets passed-on to suppliers."
      },
      "getIsGlobalOperator(address)": {
        "notice": "Return true if a particular address is approved as a global operator. Such an address can act on any account as if it were the operator's own."
      },
      "getIsLocalOperator(address,address)": {
        "notice": "Return true if a particular address is approved as an operator for an owner's accounts. Approved operators can act on the accounts of the owner as if it were the operator's own."
      },
      "getLiquidationSpread()": {
        "notice": "Get the global liquidation spread. This is the spread between oracle prices that incentivizes the liquidation of risky positions."
      },
      "getLiquidationSpreadForPair(uint256,uint256)": {
        "notice": "Get the adjusted liquidation spread for some market pair. This is equal to the global liquidation spread multiplied by (1 + spreadPremium) for each of the two markets."
      },
      "getMarginRatio()": {
        "notice": "Get the global minimum margin-ratio that every position must maintain to prevent being liquidated."
      },
      "getMarket(uint256)": {
        "notice": "Get basic information about a particular market."
      },
      "getMarketCachedIndex(uint256)": {
        "notice": "Get the most recently cached interest index for a market."
      },
      "getMarketCurrentIndex(uint256)": {
        "notice": "Get the interest index for a market if it were to be updated right now."
      },
      "getMarketInterestRate(uint256)": {
        "notice": "Get the current borrower interest rate for a market."
      },
      "getMarketInterestSetter(uint256)": {
        "notice": "Get the interest-setter address for a market."
      },
      "getMarketIsClosing(uint256)": {
        "notice": "Return true if a particular market is in closing mode. Additional borrows cannot be taken from a market that is closing."
      },
      "getMarketMarginPremium(uint256)": {
        "notice": "Get the margin premium for a market. A margin premium makes it so that any positions that include the market require a higher collateralization to avoid being liquidated."
      },
      "getMarketPrice(uint256)": {
        "notice": "Get the price of the token for a market."
      },
      "getMarketPriceOracle(uint256)": {
        "notice": "Get the price oracle address for a market."
      },
      "getMarketSpreadPremium(uint256)": {
        "notice": "Get the spread premium for a market. A spread premium makes it so that any liquidations that include the market have a higher spread than the global default."
      },
      "getMarketTokenAddress(uint256)": {
        "notice": "Get the ERC20 token address for a market."
      },
      "getMarketTotalPar(uint256)": {
        "notice": "Get the total principal amounts (borrowed and supplied) for a market."
      },
      "getMarketWithInfo(uint256)": {
        "notice": "Get comprehensive information about a particular market."
      },
      "getMinBorrowedValue()": {
        "notice": "Get the global minimum-borrow value which is the minimum value of any new borrow on Solo."
      },
      "getNumExcessTokens(uint256)": {
        "notice": "Get the number of excess tokens for a market. The number of excess tokens is calculated by taking the current number of tokens held in Solo, adding the number of tokens owed to Solo by borrowers, and subtracting the number of tokens owed to suppliers by Solo."
      },
      "getNumMarkets()": {
        "notice": "Get the total number of markets."
      },
      "getRiskLimits()": {
        "notice": "Get all risk parameter limits in a single struct. These are the maximum limits at which the risk parameters can be set by the admin of Solo."
      },
      "getRiskParams()": {
        "notice": "Get all risk parameters in a single struct."
      },
      "operate((address,uint256)[],(uint8,uint256,(bool,uint8,uint8,uint256),uint256,uint256,address,uint256,bytes)[])": {
        "notice": "The main entry-point to Solo that allows users and contracts to manage accounts. Take one or more actions on one or more accounts. The msg.sender must be the owner or operator of all accounts except for those being liquidated, vaporized, or traded with. One call to operate() is considered a singular \"operation\". Account collateralization is ensured only after the completion of the entire operation."
      },
      "ownerAddMarket(address,address,address,(uint256),(uint256))": {
        "notice": "Add a new market to Solo. Must be for a previously-unsupported ERC20 token."
      },
      "ownerSetEarningsRate((uint256))": {
        "notice": "Set the global earnings-rate variable that determines what percentage of the interest paid by borrowers gets passed-on to suppliers."
      },
      "ownerSetGlobalOperator(address,bool)": {
        "notice": "Approve (or disapprove) an address that is permissioned to be an operator for all accounts in Solo. Intended only to approve smart-contracts."
      },
      "ownerSetInterestSetter(uint256,address)": {
        "notice": "Set the interest-setter for a market."
      },
      "ownerSetIsClosing(uint256,bool)": {
        "notice": "Set (or unset) the status of a market to \"closing\". The borrowedValue of a market cannot increase while its status is \"closing\"."
      },
      "ownerSetLiquidationSpread((uint256))": {
        "notice": "Set the global liquidation spread. This is the spread between oracle prices that incentivizes the liquidation of risky positions."
      },
      "ownerSetMarginPremium(uint256,(uint256))": {
        "notice": "Set a premium on the minimum margin-ratio for a market. This makes it so that any positions that include this market require a higher collateralization to avoid being liquidated."
      },
      "ownerSetMarginRatio((uint256))": {
        "notice": "Set the global minimum margin-ratio that every position must maintain to prevent being liquidated."
      },
      "ownerSetMinBorrowedValue((uint256))": {
        "notice": "Set the global minimum-borrow value which is the minimum value of any new borrow on Solo."
      },
      "ownerSetPriceOracle(uint256,address)": {
        "notice": "Set the price oracle for a market."
      },
      "ownerSetSpreadPremium(uint256,(uint256))": {
        "notice": "Set a premium on the liquidation spread for a market. This makes it so that any liquidations that include this market have a higher spread than the global default."
      },
      "ownerWithdrawExcessTokens(uint256,address)": {
        "notice": "Withdraw an ERC20 token for which there is an associated market. Only excess tokens can be withdrawn. The number of excess tokens is calculated by taking the current number of tokens held in Solo, adding the number of tokens owed to Solo by borrowers, and subtracting the number of tokens owed to suppliers by Solo."
      },
      "ownerWithdrawUnsupportedTokens(address,address)": {
        "notice": "Withdraw an ERC20 token for which there is no associated market."
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "setOperators((address,bool)[])": {
        "notice": "Approves/disapproves any number of operators. An operator is an external address that has the same permissions to manipulate an account as the owner of the account. Operators are simply addresses and therefore may either be externally-owned Ethereum accounts OR smart contracts.     * Operators are also able to act as AutoTrader contracts on behalf of the account owner if the operator is a smart contract and implements the IAutoTrader interface."
      }
    }
  }
}